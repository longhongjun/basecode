<?php
/**
 * Automatically generated by running "php schema.php xmlwriter".
 *
 * You may modify the file, but re-running schema.php against this file will
 * standardize the format without losing your schema changes. It does lose
 * any changes that are not part of schema. Use "note" field to comment on
 * schema itself, and "note" fields are not used in any code generation but
 * only staying within this file.
 */
///////////////////////////////////////////////////////////////////////////////
// Preamble: C++ code inserted at beginning of ext_{name}.h

DefinePreamble(<<<CPP
#include <libxml/tree.h>
#include <libxml/xmlwriter.h>
#include <libxml/uri.h>
#include <runtime/base/file/file.h>
CPP
);

///////////////////////////////////////////////////////////////////////////////
// Constants
//
// array (
//   'name' => name of the constant
//   'type' => type of the constant
//   'note' => additional note about this constant's schema
// )


///////////////////////////////////////////////////////////////////////////////
// Functions
//
// array (
//   'name'   => name of the function
//   'desc'   => description of the function's purpose
//   'flags'  => attributes of the function, see base.php for possible values
//   'opt'    => optimization callback function's name for compiler
//   'note'   => additional note about this function's schema
//   'return' =>
//      array (
//        'type'  => return type, use Reference for ref return
//        'desc'  => description of the return value
//      )
//   'args'   => arguments
//      array (
//        'name'  => name of the argument
//        'type'  => type of the argument, use Reference for output parameter
//        'value' => default value of the argument
//        'desc'  => description of the argument
//      )
// )

DefineFunction(
  array(
    'name'   => "xmlwriter_open_memory",
    'desc'   => "Creates a new XMLWriter using memory for string output.",
    'flags'  =>  HasDocComment,
    'return' => array(
      'type'   => Variant,
      'desc'   => "Object oriented style: Returns TRUE on success or FALSE on failure.\n\nProcedural style: Returns a new xmlwriter resource for later use with the xmlwriter functions on success, FALSE on error.",
    ),
  ));

DefineFunction(
  array(
    'name'   => "xmlwriter_open_uri",
    'desc'   => "Creates a new XMLWriter using uri for the output.",
    'flags'  =>  HasDocComment,
    'return' => array(
      'type'   => Resource,
      'desc'   => "Object oriented style: Returns TRUE on success or FALSE on failure.\n\nProcedural style: Returns a new xmlwriter resource for later use with the xmlwriter functions on success, FALSE on error.",
    ),
    'args'   => array(
      array(
        'name'   => "uri",
        'type'   => String,
        'desc'   => "The URI of the resource for the output.",
      ),
    ),
  ));

DefineFunction(
  array(
    'name'   => "xmlwriter_set_indent_string",
    'desc'   => "Sets the string which will be used to indent each element/attribute of the resulting xml.",
    'flags'  =>  HasDocComment,
    'return' => array(
      'type'   => Boolean,
      'desc'   => "Returns TRUE on success or FALSE on failure.",
    ),
    'args'   => array(
      array(
        'name'   => "xmlwriter",
        'type'   => Resource,
        'desc'   => "Only for procedural calls. The XMLWriter resource that is being modified. This resource comes from a call to xmlwriter_open_uri() or xmlwriter_open_memory().",
      ),
      array(
        'name'   => "indentstring",
        'type'   => String,
        'desc'   => "The indentation string.",
      ),
    ),
  ));

DefineFunction(
  array(
    'name'   => "xmlwriter_set_indent",
    'desc'   => "Toggles indentation on or off.",
    'flags'  =>  HasDocComment,
    'return' => array(
      'type'   => Boolean,
      'desc'   => "Returns TRUE on success or FALSE on failure.",
    ),
    'args'   => array(
      array(
        'name'   => "xmlwriter",
        'type'   => Resource,
        'desc'   => "Only for procedural calls. The XMLWriter resource that is being modified. This resource comes from a call to xmlwriter_open_uri() or xmlwriter_open_memory().",
      ),
      array(
        'name'   => "indent",
        'type'   => Boolean,
        'desc'   => "Whether indentation is enabled.",
      ),
    ),
  ));

DefineFunction(
  array(
    'name'   => "xmlwriter_start_document",
    'desc'   => "Starts a document.",
    'flags'  =>  HasDocComment,
    'return' => array(
      'type'   => Boolean,
      'desc'   => "Returns TRUE on success or FALSE on failure.",
    ),
    'args'   => array(
      array(
        'name'   => "xmlwriter",
        'type'   => Resource,
        'desc'   => "Only for procedural calls. The XMLWriter resource that is being modified. This resource comes from a call to xmlwriter_open_uri() or xmlwriter_open_memory().",
      ),
      array(
        'name'   => "version",
        'type'   => String,
        'value'  => "\"1.0\"",
        'desc'   => "The version number of the document as part of the XML declaration. Defaults to 1.0.",
      ),
      array(
        'name'   => "encoding",
        'type'   => String,
        'value'  => "null_string",
        'desc'   => "The encoding of the document as part of the XML declaration. NULL by default.",
      ),
      array(
        'name'   => "standalone",
        'type'   => String,
        'value'  => "null_string",
        'desc'   => "yes or no.",
      ),
    ),
  ));

DefineFunction(
  array(
    'name'   => "xmlwriter_start_element",
    'desc'   => "Starts an element.",
    'flags'  =>  HasDocComment,
    'return' => array(
      'type'   => Boolean,
      'desc'   => "Returns TRUE on success or FALSE on failure.",
    ),
    'args'   => array(
      array(
        'name'   => "xmlwriter",
        'type'   => Resource,
        'desc'   => "Only for procedural calls. The XMLWriter resource that is being modified. This resource comes from a call to xmlwriter_open_uri() or xmlwriter_open_memory().",
      ),
      array(
        'name'   => "name",
        'type'   => String,
        'desc'   => "The element name.",
      ),
    ),
  ));

DefineFunction(
  array(
    'name'   => "xmlwriter_start_element_ns",
    'desc'   => "Starts a namespaced element.",
    'flags'  =>  HasDocComment,
    'return' => array(
      'type'   => Boolean,
      'desc'   => "Returns TRUE on success or FALSE on failure.",
    ),
    'args'   => array(
      array(
        'name'   => "xmlwriter",
        'type'   => Resource,
        'desc'   => "Only for procedural calls. The XMLWriter resource that is being modified. This resource comes from a call to xmlwriter_open_uri() or xmlwriter_open_memory().",
      ),
      array(
        'name'   => "prefix",
        'type'   => String,
        'desc'   => "The namespace prefix.",
      ),
      array(
        'name'   => "name",
        'type'   => String,
        'desc'   => "The element name.",
      ),
      array(
        'name'   => "uri",
        'type'   => String,
        'desc'   => "The namespace URI.",
      ),
    ),
  ));

DefineFunction(
  array(
    'name'   => "xmlwriter_write_element_ns",
    'desc'   => "Writes a full namespaced element tag.",
    'flags'  =>  HasDocComment,
    'return' => array(
      'type'   => Boolean,
      'desc'   => "Returns TRUE on success or FALSE on failure.",
    ),
    'args'   => array(
      array(
        'name'   => "xmlwriter",
        'type'   => Resource,
        'desc'   => "Only for procedural calls. The XMLWriter resource that is being modified. This resource comes from a call to xmlwriter_open_uri() or xmlwriter_open_memory().",
      ),
      array(
        'name'   => "prefix",
        'type'   => String,
        'desc'   => "The namespace prefix.",
      ),
      array(
        'name'   => "name",
        'type'   => String,
        'desc'   => "The element name.",
      ),
      array(
        'name'   => "uri",
        'type'   => String,
        'desc'   => "The namespace URI.",
      ),
      array(
        'name'   => "content",
        'type'   => String,
        'value'  => "null_string",
        'desc'   => "The element contents.",
      ),
    ),
  ));

DefineFunction(
  array(
    'name'   => "xmlwriter_write_element",
    'desc'   => "Writes a full element tag.",
    'flags'  =>  HasDocComment,
    'return' => array(
      'type'   => Boolean,
      'desc'   => "Returns TRUE on success or FALSE on failure.",
    ),
    'args'   => array(
      array(
        'name'   => "xmlwriter",
        'type'   => Resource,
        'desc'   => "Only for procedural calls. The XMLWriter resource that is being modified. This resource comes from a call to xmlwriter_open_uri() or xmlwriter_open_memory().",
      ),
      array(
        'name'   => "name",
        'type'   => String,
        'desc'   => "The element name.",
      ),
      array(
        'name'   => "content",
        'type'   => String,
        'value'  => "null_string",
        'desc'   => "The element contents.",
      ),
    ),
  ));

DefineFunction(
  array(
    'name'   => "xmlwriter_end_element",
    'desc'   => "Ends the current element.",
    'flags'  =>  HasDocComment,
    'return' => array(
      'type'   => Boolean,
      'desc'   => "Returns TRUE on success or FALSE on failure.",
    ),
    'args'   => array(
      array(
        'name'   => "xmlwriter",
        'type'   => Resource,
        'desc'   => "Only for procedural calls. The XMLWriter resource that is being modified. This resource comes from a call to xmlwriter_open_uri() or xmlwriter_open_memory().",
      ),
    ),
  ));

DefineFunction(
  array(
    'name'   => "xmlwriter_full_end_element",
    'desc'   => "End the current xml element. Writes an end tag even if the element is empty.",
    'flags'  =>  HasDocComment,
    'return' => array(
      'type'   => Boolean,
      'desc'   => "Returns TRUE on success or FALSE on failure.",
    ),
    'args'   => array(
      array(
        'name'   => "xmlwriter",
        'type'   => Resource,
        'desc'   => "Only for procedural calls. The XMLWriter resource that is being modified. This resource comes from a call to xmlwriter_open_uri() or xmlwriter_open_memory().",
      ),
    ),
  ));

DefineFunction(
  array(
    'name'   => "xmlwriter_start_attribute_ns",
    'desc'   => "Starts a namespaced attribute.",
    'flags'  =>  HasDocComment,
    'return' => array(
      'type'   => Boolean,
      'desc'   => "Returns TRUE on success or FALSE on failure.",
    ),
    'args'   => array(
      array(
        'name'   => "xmlwriter",
        'type'   => Resource,
        'desc'   => "Only for procedural calls. The XMLWriter resource that is being modified. This resource comes from a call to xmlwriter_open_uri() or xmlwriter_open_memory().",
      ),
      array(
        'name'   => "prefix",
        'type'   => String,
        'desc'   => "The namespace prefix.",
      ),
      array(
        'name'   => "name",
        'type'   => String,
        'desc'   => "The attribute name.",
      ),
      array(
        'name'   => "uri",
        'type'   => String,
        'desc'   => "The namespace URI.",
      ),
    ),
  ));

DefineFunction(
  array(
    'name'   => "xmlwriter_start_attribute",
    'desc'   => "Starts an attribute.",
    'flags'  =>  HasDocComment,
    'return' => array(
      'type'   => Boolean,
      'desc'   => "Returns TRUE on success or FALSE on failure.",
    ),
    'args'   => array(
      array(
        'name'   => "xmlwriter",
        'type'   => Resource,
        'desc'   => "Only for procedural calls. The XMLWriter resource that is being modified. This resource comes from a call to xmlwriter_open_uri() or xmlwriter_open_memory().",
      ),
      array(
        'name'   => "name",
        'type'   => String,
        'desc'   => "The attribute name.",
      ),
    ),
  ));

DefineFunction(
  array(
    'name'   => "xmlwriter_write_attribute_ns",
    'desc'   => "Writes a full namespaced attribute.",
    'flags'  =>  HasDocComment,
    'return' => array(
      'type'   => Boolean,
      'desc'   => "Returns TRUE on success or FALSE on failure.",
    ),
    'args'   => array(
      array(
        'name'   => "xmlwriter",
        'type'   => Resource,
        'desc'   => "Only for procedural calls. The XMLWriter resource that is being modified. This resource comes from a call to xmlwriter_open_uri() or xmlwriter_open_memory().",
      ),
      array(
        'name'   => "prefix",
        'type'   => String,
        'desc'   => "The namespace prefix.",
      ),
      array(
        'name'   => "name",
        'type'   => String,
        'desc'   => "The attribute name.",
      ),
      array(
        'name'   => "uri",
        'type'   => String,
        'desc'   => "The namespace URI.",
      ),
      array(
        'name'   => "content",
        'type'   => String,
        'desc'   => "The attribute value.",
      ),
    ),
  ));

DefineFunction(
  array(
    'name'   => "xmlwriter_write_attribute",
    'desc'   => "Writes a full attribute.",
    'flags'  =>  HasDocComment,
    'return' => array(
      'type'   => Boolean,
      'desc'   => "Returns TRUE on success or FALSE on failure.",
    ),
    'args'   => array(
      array(
        'name'   => "xmlwriter",
        'type'   => Resource,
        'desc'   => "Only for procedural calls. The XMLWriter resource that is being modified. This resource comes from a call to xmlwriter_open_uri() or xmlwriter_open_memory().",
      ),
      array(
        'name'   => "name",
        'type'   => String,
        'desc'   => "The name of the attribute.",
      ),
      array(
        'name'   => "value",
        'type'   => String,
        'desc'   => "The value of the attribute.",
      ),
    ),
  ));

DefineFunction(
  array(
    'name'   => "xmlwriter_end_attribute",
    'desc'   => "Ends the current attribute.",
    'flags'  =>  HasDocComment,
    'return' => array(
      'type'   => Boolean,
      'desc'   => "Returns TRUE on success or FALSE on failure.",
    ),
    'args'   => array(
      array(
        'name'   => "xmlwriter",
        'type'   => Resource,
        'desc'   => "Only for procedural calls. The XMLWriter resource that is being modified. This resource comes from a call to xmlwriter_open_uri() or xmlwriter_open_memory().",
      ),
    ),
  ));

DefineFunction(
  array(
    'name'   => "xmlwriter_start_cdata",
    'desc'   => "Starts a CDATA.",
    'flags'  =>  HasDocComment,
    'return' => array(
      'type'   => Boolean,
      'desc'   => "Returns TRUE on success or FALSE on failure.",
    ),
    'args'   => array(
      array(
        'name'   => "xmlwriter",
        'type'   => Resource,
        'desc'   => "Only for procedural calls. The XMLWriter resource that is being modified. This resource comes from a call to xmlwriter_open_uri() or xmlwriter_open_memory().",
      ),
    ),
  ));

DefineFunction(
  array(
    'name'   => "xmlwriter_write_cdata",
    'desc'   => "Writes a full CDATA.",
    'flags'  =>  HasDocComment,
    'return' => array(
      'type'   => Boolean,
      'desc'   => "Returns TRUE on success or FALSE on failure.",
    ),
    'args'   => array(
      array(
        'name'   => "xmlwriter",
        'type'   => Resource,
        'desc'   => "Only for procedural calls. The XMLWriter resource that is being modified. This resource comes from a call to xmlwriter_open_uri() or xmlwriter_open_memory().",
      ),
      array(
        'name'   => "content",
        'type'   => String,
        'desc'   => "The contents of the CDATA.",
      ),
    ),
  ));

DefineFunction(
  array(
    'name'   => "xmlwriter_end_cdata",
    'desc'   => "Ends the current CDATA section.",
    'flags'  =>  HasDocComment,
    'return' => array(
      'type'   => Boolean,
      'desc'   => "Returns TRUE on success or FALSE on failure.",
    ),
    'args'   => array(
      array(
        'name'   => "xmlwriter",
        'type'   => Resource,
        'desc'   => "Only for procedural calls. The XMLWriter resource that is being modified. This resource comes from a call to xmlwriter_open_uri() or xmlwriter_open_memory().",
      ),
    ),
  ));

DefineFunction(
  array(
    'name'   => "xmlwriter_start_comment",
    'desc'   => "Starts a comment.",
    'flags'  =>  HasDocComment,
    'return' => array(
      'type'   => Boolean,
      'desc'   => "Returns TRUE on success or FALSE on failure.",
    ),
    'args'   => array(
      array(
        'name'   => "xmlwriter",
        'type'   => Resource,
        'desc'   => "Only for procedural calls. The XMLWriter resource that is being modified. This resource comes from a call to xmlwriter_open_uri() or xmlwriter_open_memory().",
      ),
    ),
  ));

DefineFunction(
  array(
    'name'   => "xmlwriter_write_comment",
    'desc'   => "Writes a full comment.",
    'flags'  =>  HasDocComment,
    'return' => array(
      'type'   => Boolean,
      'desc'   => "Returns TRUE on success or FALSE on failure.",
    ),
    'args'   => array(
      array(
        'name'   => "xmlwriter",
        'type'   => Resource,
        'desc'   => "Only for procedural calls. The XMLWriter resource that is being modified. This resource comes from a call to xmlwriter_open_uri() or xmlwriter_open_memory().",
      ),
      array(
        'name'   => "content",
        'type'   => String,
        'desc'   => "The contents of the comment.",
      ),
    ),
  ));

DefineFunction(
  array(
    'name'   => "xmlwriter_end_comment",
    'desc'   => "Ends the current comment.",
    'flags'  =>  HasDocComment,
    'return' => array(
      'type'   => Boolean,
      'desc'   => "Returns TRUE on success or FALSE on failure.",
    ),
    'args'   => array(
      array(
        'name'   => "xmlwriter",
        'type'   => Resource,
        'desc'   => "Only for procedural calls. The XMLWriter resource that is being modified. This resource comes from a call to xmlwriter_open_uri() or xmlwriter_open_memory().",
      ),
    ),
  ));

DefineFunction(
  array(
    'name'   => "xmlwriter_end_document",
    'desc'   => "Ends the current document.",
    'flags'  =>  HasDocComment,
    'return' => array(
      'type'   => Boolean,
      'desc'   => "Returns TRUE on success or FALSE on failure.",
    ),
    'args'   => array(
      array(
        'name'   => "xmlwriter",
        'type'   => Resource,
        'desc'   => "Only for procedural calls. The XMLWriter resource that is being modified. This resource comes from a call to xmlwriter_open_uri() or xmlwriter_open_memory().",
      ),
    ),
  ));

DefineFunction(
  array(
    'name'   => "xmlwriter_start_pi",
    'desc'   => "Starts a processing instruction tag.",
    'flags'  =>  HasDocComment,
    'return' => array(
      'type'   => Boolean,
      'desc'   => "Returns TRUE on success or FALSE on failure.",
    ),
    'args'   => array(
      array(
        'name'   => "xmlwriter",
        'type'   => Resource,
        'desc'   => "Only for procedural calls. The XMLWriter resource that is being modified. This resource comes from a call to xmlwriter_open_uri() or xmlwriter_open_memory().",
      ),
      array(
        'name'   => "target",
        'type'   => String,
        'desc'   => "The target of the processing instruction.",
      ),
    ),
  ));

DefineFunction(
  array(
    'name'   => "xmlwriter_write_pi",
    'desc'   => "Writes a processing instruction.",
    'flags'  =>  HasDocComment,
    'return' => array(
      'type'   => Boolean,
      'desc'   => "Returns TRUE on success or FALSE on failure.",
    ),
    'args'   => array(
      array(
        'name'   => "xmlwriter",
        'type'   => Resource,
        'desc'   => "Only for procedural calls. The XMLWriter resource that is being modified. This resource comes from a call to xmlwriter_open_uri() or xmlwriter_open_memory().",
      ),
      array(
        'name'   => "target",
        'type'   => String,
        'desc'   => "The target of the processing instruction.",
      ),
      array(
        'name'   => "content",
        'type'   => String,
        'desc'   => "The content of the processing instruction.",
      ),
    ),
  ));

DefineFunction(
  array(
    'name'   => "xmlwriter_end_pi",
    'desc'   => "Ends the current processing instruction.",
    'flags'  =>  HasDocComment,
    'return' => array(
      'type'   => Boolean,
      'desc'   => "Returns TRUE on success or FALSE on failure.",
    ),
    'args'   => array(
      array(
        'name'   => "xmlwriter",
        'type'   => Resource,
        'desc'   => "Only for procedural calls. The XMLWriter resource that is being modified. This resource comes from a call to xmlwriter_open_uri() or xmlwriter_open_memory().",
      ),
    ),
  ));

DefineFunction(
  array(
    'name'   => "xmlwriter_text",
    'desc'   => "Writes a text.",
    'flags'  =>  HasDocComment,
    'return' => array(
      'type'   => Boolean,
      'desc'   => "Returns TRUE on success or FALSE on failure.",
    ),
    'args'   => array(
      array(
        'name'   => "xmlwriter",
        'type'   => Resource,
        'desc'   => "Only for procedural calls. The XMLWriter resource that is being modified. This resource comes from a call to xmlwriter_open_uri() or xmlwriter_open_memory().",
      ),
      array(
        'name'   => "content",
        'type'   => String,
        'desc'   => "The contents of the text.",
      ),
    ),
  ));

DefineFunction(
  array(
    'name'   => "xmlwriter_write_raw",
    'desc'   => "Writes a raw xml text.",
    'flags'  =>  HasDocComment,
    'return' => array(
      'type'   => Boolean,
      'desc'   => "Returns TRUE on success or FALSE on failure.",
    ),
    'args'   => array(
      array(
        'name'   => "xmlwriter",
        'type'   => Resource,
        'desc'   => "Only for procedural calls. The XMLWriter resource that is being modified. This resource comes from a call to xmlwriter_open_uri() or xmlwriter_open_memory().",
      ),
      array(
        'name'   => "content",
        'type'   => String,
        'desc'   => "The text string to write.",
      ),
    ),
  ));

DefineFunction(
  array(
    'name'   => "xmlwriter_start_dtd",
    'desc'   => "Starts a DTD.",
    'flags'  =>  HasDocComment,
    'return' => array(
      'type'   => Boolean,
      'desc'   => "Returns TRUE on success or FALSE on failure.",
    ),
    'args'   => array(
      array(
        'name'   => "xmlwriter",
        'type'   => Resource,
        'desc'   => "Only for procedural calls. The XMLWriter resource that is being modified. This resource comes from a call to xmlwriter_open_uri() or xmlwriter_open_memory().",
      ),
      array(
        'name'   => "qualifiedname",
        'type'   => String,
        'desc'   => "The qualified name of the document type to create.",
      ),
      array(
        'name'   => "publicid",
        'type'   => String,
        'value'  => "null_string",
        'desc'   => "The external subset public identifier.",
      ),
      array(
        'name'   => "systemid",
        'type'   => String,
        'value'  => "null_string",
        'desc'   => "The external subset system identifier.",
      ),
    ),
  ));

DefineFunction(
  array(
    'name'   => "xmlwriter_write_dtd",
    'desc'   => "Writes a full DTD.",
    'flags'  =>  HasDocComment,
    'return' => array(
      'type'   => Boolean,
      'desc'   => "Returns TRUE on success or FALSE on failure.",
    ),
    'args'   => array(
      array(
        'name'   => "xmlwriter",
        'type'   => Resource,
        'desc'   => "Only for procedural calls. The XMLWriter resource that is being modified. This resource comes from a call to xmlwriter_open_uri() or xmlwriter_open_memory().",
      ),
      array(
        'name'   => "name",
        'type'   => String,
        'desc'   => "The DTD name.",
      ),
      array(
        'name'   => "publicid",
        'type'   => String,
        'value'  => "null_string",
        'desc'   => "The external subset public identifier.",
      ),
      array(
        'name'   => "systemid",
        'type'   => String,
        'value'  => "null_string",
        'desc'   => "The external subset system identifier.",
      ),
      array(
        'name'   => "subset",
        'type'   => String,
        'value'  => "null_string",
        'desc'   => "The content of the DTD.",
      ),
    ),
  ));

DefineFunction(
  array(
    'name'   => "xmlwriter_start_dtd_element",
    'desc'   => "Starts a DTD element.",
    'flags'  =>  HasDocComment,
    'return' => array(
      'type'   => Boolean,
      'desc'   => "Returns TRUE on success or FALSE on failure.",
    ),
    'args'   => array(
      array(
        'name'   => "xmlwriter",
        'type'   => Resource,
        'desc'   => "Only for procedural calls. The XMLWriter resource that is being modified. This resource comes from a call to xmlwriter_open_uri() or xmlwriter_open_memory().",
      ),
      array(
        'name'   => "qualifiedname",
        'type'   => String,
        'desc'   => "The qualified name of the document type to create.",
      ),
    ),
  ));

DefineFunction(
  array(
    'name'   => "xmlwriter_write_dtd_element",
    'desc'   => "Writes a full DTD element.",
    'flags'  =>  HasDocComment,
    'return' => array(
      'type'   => Boolean,
      'desc'   => "Returns TRUE on success or FALSE on failure.",
    ),
    'args'   => array(
      array(
        'name'   => "xmlwriter",
        'type'   => Resource,
        'desc'   => "Only for procedural calls. The XMLWriter resource that is being modified. This resource comes from a call to xmlwriter_open_uri() or xmlwriter_open_memory().",
      ),
      array(
        'name'   => "name",
        'type'   => String,
        'desc'   => "The name of the DTD element.",
      ),
      array(
        'name'   => "content",
        'type'   => String,
        'desc'   => "The content of the element.",
      ),
    ),
  ));

DefineFunction(
  array(
    'name'   => "xmlwriter_end_dtd_element",
    'desc'   => "Ends the current DTD element.",
    'flags'  =>  HasDocComment,
    'return' => array(
      'type'   => Boolean,
      'desc'   => "Returns TRUE on success or FALSE on failure.",
    ),
    'args'   => array(
      array(
        'name'   => "xmlwriter",
        'type'   => Resource,
        'desc'   => "Only for procedural calls. The XMLWriter resource that is being modified. This resource comes from a call to xmlwriter_open_uri() or xmlwriter_open_memory().",
      ),
    ),
  ));

DefineFunction(
  array(
    'name'   => "xmlwriter_start_dtd_attlist",
    'desc'   => "Starts a DTD attribute list.",
    'flags'  =>  HasDocComment,
    'return' => array(
      'type'   => Boolean,
      'desc'   => "Returns TRUE on success or FALSE on failure.",
    ),
    'args'   => array(
      array(
        'name'   => "xmlwriter",
        'type'   => Resource,
        'desc'   => "Only for procedural calls. The XMLWriter resource that is being modified. This resource comes from a call to xmlwriter_open_uri() or xmlwriter_open_memory().",
      ),
      array(
        'name'   => "name",
        'type'   => String,
        'desc'   => "The attribute list name.",
      ),
    ),
  ));

DefineFunction(
  array(
    'name'   => "xmlwriter_write_dtd_attlist",
    'desc'   => "Writes a DTD attribute list.",
    'flags'  =>  HasDocComment,
    'return' => array(
      'type'   => Boolean,
      'desc'   => "Returns TRUE on success or FALSE on failure.",
    ),
    'args'   => array(
      array(
        'name'   => "xmlwriter",
        'type'   => Resource,
        'desc'   => "Only for procedural calls. The XMLWriter resource that is being modified. This resource comes from a call to xmlwriter_open_uri() or xmlwriter_open_memory().",
      ),
      array(
        'name'   => "name",
        'type'   => String,
        'desc'   => "The name of the DTD attribute list.",
      ),
      array(
        'name'   => "content",
        'type'   => String,
        'desc'   => "The content of the DTD attribute list.",
      ),
    ),
  ));

DefineFunction(
  array(
    'name'   => "xmlwriter_end_dtd_attlist",
    'desc'   => "Ends the current DTD attribute list.",
    'flags'  =>  HasDocComment,
    'return' => array(
      'type'   => Boolean,
      'desc'   => "Returns TRUE on success or FALSE on failure.",
    ),
    'args'   => array(
      array(
        'name'   => "xmlwriter",
        'type'   => Resource,
        'desc'   => "Only for procedural calls. The XMLWriter resource that is being modified. This resource comes from a call to xmlwriter_open_uri() or xmlwriter_open_memory().",
      ),
    ),
  ));

DefineFunction(
  array(
    'name'   => "xmlwriter_start_dtd_entity",
    'desc'   => "Starts a DTD entity.",
    'flags'  =>  HasDocComment,
    'return' => array(
      'type'   => Boolean,
      'desc'   => "Returns TRUE on success or FALSE on failure.",
    ),
    'args'   => array(
      array(
        'name'   => "xmlwriter",
        'type'   => Resource,
        'desc'   => "Only for procedural calls. The XMLWriter resource that is being modified. This resource comes from a call to xmlwriter_open_uri() or xmlwriter_open_memory().",
      ),
      array(
        'name'   => "name",
        'type'   => String,
        'desc'   => "The name of the entity.",
      ),
      array(
        'name'   => "isparam",
        'type'   => Boolean,
      ),
    ),
  ));

DefineFunction(
  array(
    'name'   => "xmlwriter_write_dtd_entity",
    'desc'   => "Writes a full DTD entity.",
    'flags'  =>  HasDocComment,
    'return' => array(
      'type'   => Boolean,
      'desc'   => "Returns TRUE on success or FALSE on failure.",
    ),
    'args'   => array(
      array(
        'name'   => "xmlwriter",
        'type'   => Resource,
        'desc'   => "Only for procedural calls. The XMLWriter resource that is being modified. This resource comes from a call to xmlwriter_open_uri() or xmlwriter_open_memory().",
      ),
      array(
        'name'   => "name",
        'type'   => String,
        'desc'   => "The name of the entity.",
      ),
      array(
        'name'   => "content",
        'type'   => String,
        'desc'   => "The content of the entity.",
      ),
      array(
        'name'   => "pe",
        'type'   => Boolean,
        'value'  => "false",
      ),
      array(
        'name'   => "publicid",
        'type'   => String,
        'value'  => "null_string",
      ),
      array(
        'name'   => "systemid",
        'type'   => String,
        'value'  => "null_string",
      ),
      array(
        'name'   => "ndataid",
        'type'   => String,
        'value'  => "null_string",
      ),
    ),
  ));

DefineFunction(
  array(
    'name'   => "xmlwriter_end_dtd_entity",
    'desc'   => "Ends the current DTD entity.",
    'flags'  =>  HasDocComment,
    'return' => array(
      'type'   => Boolean,
      'desc'   => "Returns TRUE on success or FALSE on failure.",
    ),
    'args'   => array(
      array(
        'name'   => "xmlwriter",
        'type'   => Resource,
        'desc'   => "Only for procedural calls. The XMLWriter resource that is being modified. This resource comes from a call to xmlwriter_open_uri() or xmlwriter_open_memory().",
      ),
    ),
  ));

DefineFunction(
  array(
    'name'   => "xmlwriter_end_dtd",
    'desc'   => "Ends the DTD of the document.",
    'flags'  =>  HasDocComment,
    'return' => array(
      'type'   => Boolean,
      'desc'   => "Returns TRUE on success or FALSE on failure.",
    ),
    'args'   => array(
      array(
        'name'   => "xmlwriter",
        'type'   => Resource,
        'desc'   => "Only for procedural calls. The XMLWriter resource that is being modified. This resource comes from a call to xmlwriter_open_uri() or xmlwriter_open_memory().",
      ),
    ),
  ));

DefineFunction(
  array(
    'name'   => "xmlwriter_flush",
    'desc'   => "Flushes the current buffer.",
    'flags'  =>  HasDocComment,
    'return' => array(
      'type'   => Variant,
      'desc'   => "If you opened the writer in memory, this function returns the generated XML buffer, Else, if using URI, this function will write the buffer and return the number of written bytes.",
    ),
    'args'   => array(
      array(
        'name'   => "xmlwriter",
        'type'   => Resource,
        'desc'   => "Only for procedural calls. The XMLWriter resource that is being modified. This resource comes from a call to xmlwriter_open_uri() or xmlwriter_open_memory().",
      ),
      array(
        'name'   => "empty",
        'type'   => Boolean,
        'value'  => "true",
        'desc'   => "Whether to empty the buffer or no. Default is TRUE.",
      ),
    ),
  ));

DefineFunction(
  array(
    'name'   => "xmlwriter_output_memory",
    'desc'   => "Returns the current buffer.",
    'flags'  =>  HasDocComment,
    'return' => array(
      'type'   => String,
      'desc'   => "Returns the current buffer as a string.",
    ),
    'args'   => array(
      array(
        'name'   => "xmlwriter",
        'type'   => Resource,
        'desc'   => "Only for procedural calls. The XMLWriter resource that is being modified. This resource comes from a call to xmlwriter_open_uri() or xmlwriter_open_memory().",
      ),
      array(
        'name'   => "flush",
        'type'   => Boolean,
        'value'  => "true",
        'desc'   => "Whether to flush the output buffer or no. Default is TRUE.",
      ),
    ),
  ));


///////////////////////////////////////////////////////////////////////////////
// Classes
//
// BeginClass
// array (
//   'name'   => name of the class
//   'desc'   => description of the class's purpose
//   'flags'  => attributes of the class, see base.php for possible values
//   'note'   => additional note about this class's schema
//   'parent' => parent class name, if any
//   'ifaces' => array of interfaces tihs class implements
//   'bases'  => extra internal and special base classes this class requires
//   'footer' => extra C++ inserted at end of class declaration
// )
//
// DefineConstant(..)
// DefineConstant(..)
// ...
// DefineFunction(..)
// DefineFunction(..)
// ...
// DefineProperty
// DefineProperty
//
// array (
//   'name'  => name of the property
//   'type'  => type of the property
//   'flags' => attributes of the property
//   'desc'  => description of the property
//   'note'  => additional note about this property's schema
// )
//
// EndClass()

///////////////////////////////////////////////////////////////////////////////

BeginClass(
  array(
    'name'   => "XMLWriter",
    'bases'  => array('Sweepable'),
    'desc'   => "",
    'flags'  =>  HasDocComment,
    'footer' => <<<EOT

 public:
  SmartObject<File>  m_uri;
 private:
  xmlTextWriterPtr   m_ptr;
  xmlBufferPtr       m_output;
  xmlOutputBufferPtr m_uri_output;
EOT
,
  ));

DefineFunction(
  array(
    'name'   => "__construct",
    'flags'  =>  HasDocComment,
    'return' => array(
      'type'   => null,
    ),
  ));

DefineFunction(
  array(
    'name'   => "openMemory",
    'flags'  =>  HasDocComment,
    'return' => array(
      'type'   => Boolean,
    ),
  ));

DefineFunction(
  array(
    'name'   => "openURI",
    'flags'  =>  HasDocComment,
    'return' => array(
      'type'   => Boolean,
    ),
    'args'   => array(
      array(
        'name'   => "uri",
        'type'   => String,
      ),
    ),
  ));

DefineFunction(
  array(
    'name'   => "setIndentString",
    'flags'  =>  HasDocComment,
    'return' => array(
      'type'   => Boolean,
    ),
    'args'   => array(
      array(
        'name'   => "indentstring",
        'type'   => String,
      ),
    ),
  ));

DefineFunction(
  array(
    'name'   => "setIndent",
    'flags'  =>  HasDocComment,
    'return' => array(
      'type'   => Boolean,
    ),
    'args'   => array(
      array(
        'name'   => "indent",
        'type'   => Boolean,
      ),
    ),
  ));

DefineFunction(
  array(
    'name'   => "startDocument",
    'flags'  =>  HasDocComment,
    'return' => array(
      'type'   => Boolean,
    ),
    'args'   => array(
      array(
        'name'   => "version",
        'type'   => String,
        'value'  => "\"1.0\"",
      ),
      array(
        'name'   => "encoding",
        'type'   => String,
        'value'  => "null_string",
      ),
      array(
        'name'   => "standalone",
        'type'   => String,
        'value'  => "null_string",
      ),
    ),
  ));

DefineFunction(
  array(
    'name'   => "startElement",
    'flags'  =>  HasDocComment,
    'return' => array(
      'type'   => Boolean,
    ),
    'args'   => array(
      array(
        'name'   => "name",
        'type'   => String,
      ),
    ),
  ));

DefineFunction(
  array(
    'name'   => "startElementNS",
    'flags'  =>  HasDocComment,
    'return' => array(
      'type'   => Boolean,
    ),
    'args'   => array(
      array(
        'name'   => "prefix",
        'type'   => String,
      ),
      array(
        'name'   => "name",
        'type'   => String,
      ),
      array(
        'name'   => "uri",
        'type'   => String,
      ),
    ),
  ));

DefineFunction(
  array(
    'name'   => "writeElementNS",
    'flags'  =>  HasDocComment,
    'return' => array(
      'type'   => Boolean,
    ),
    'args'   => array(
      array(
        'name'   => "prefix",
        'type'   => String,
      ),
      array(
        'name'   => "name",
        'type'   => String,
      ),
      array(
        'name'   => "uri",
        'type'   => String,
      ),
      array(
        'name'   => "content",
        'type'   => String,
        'value'  => "null_string",
      ),
    ),
  ));

DefineFunction(
  array(
    'name'   => "writeElement",
    'flags'  =>  HasDocComment,
    'return' => array(
      'type'   => Boolean,
    ),
    'args'   => array(
      array(
        'name'   => "name",
        'type'   => String,
      ),
      array(
        'name'   => "content",
        'type'   => String,
        'value'  => "null_string",
      ),
    ),
  ));

DefineFunction(
  array(
    'name'   => "endElement",
    'flags'  =>  HasDocComment,
    'return' => array(
      'type'   => Boolean,
    ),
  ));

DefineFunction(
  array(
    'name'   => "fullEndElement",
    'flags'  =>  HasDocComment,
    'return' => array(
      'type'   => Boolean,
    ),
  ));

DefineFunction(
  array(
    'name'   => "startAttributens",
    'flags'  =>  HasDocComment,
    'return' => array(
      'type'   => Boolean,
    ),
    'args'   => array(
      array(
        'name'   => "prefix",
        'type'   => String,
      ),
      array(
        'name'   => "name",
        'type'   => String,
      ),
      array(
        'name'   => "uri",
        'type'   => String,
      ),
    ),
  ));

DefineFunction(
  array(
    'name'   => "startAttribute",
    'flags'  =>  HasDocComment,
    'return' => array(
      'type'   => Boolean,
    ),
    'args'   => array(
      array(
        'name'   => "name",
        'type'   => String,
      ),
    ),
  ));

DefineFunction(
  array(
    'name'   => "writeAttributeNS",
    'flags'  =>  HasDocComment,
    'return' => array(
      'type'   => Boolean,
    ),
    'args'   => array(
      array(
        'name'   => "prefix",
        'type'   => String,
      ),
      array(
        'name'   => "name",
        'type'   => String,
      ),
      array(
        'name'   => "uri",
        'type'   => String,
      ),
      array(
        'name'   => "content",
        'type'   => String,
      ),
    ),
  ));

DefineFunction(
  array(
    'name'   => "writeAttribute",
    'flags'  =>  HasDocComment,
    'return' => array(
      'type'   => Boolean,
    ),
    'args'   => array(
      array(
        'name'   => "name",
        'type'   => String,
      ),
      array(
        'name'   => "value",
        'type'   => String,
      ),
    ),
  ));

DefineFunction(
  array(
    'name'   => "endAttribute",
    'flags'  =>  HasDocComment,
    'return' => array(
      'type'   => Boolean,
    ),
  ));

DefineFunction(
  array(
    'name'   => "startCData",
    'flags'  =>  HasDocComment,
    'return' => array(
      'type'   => Boolean,
    ),
  ));

DefineFunction(
  array(
    'name'   => "writeCData",
    'flags'  =>  HasDocComment,
    'return' => array(
      'type'   => Boolean,
    ),
    'args'   => array(
      array(
        'name'   => "content",
        'type'   => String,
      ),
    ),
  ));

DefineFunction(
  array(
    'name'   => "endCData",
    'flags'  =>  HasDocComment,
    'return' => array(
      'type'   => Boolean,
    ),
  ));

DefineFunction(
  array(
    'name'   => "startComment",
    'flags'  =>  HasDocComment,
    'return' => array(
      'type'   => Boolean,
    ),
  ));

DefineFunction(
  array(
    'name'   => "writeComment",
    'flags'  =>  HasDocComment,
    'return' => array(
      'type'   => Boolean,
    ),
    'args'   => array(
      array(
        'name'   => "content",
        'type'   => String,
      ),
    ),
  ));

DefineFunction(
  array(
    'name'   => "endComment",
    'flags'  =>  HasDocComment,
    'return' => array(
      'type'   => Boolean,
    ),
  ));

DefineFunction(
  array(
    'name'   => "endDocument",
    'flags'  =>  HasDocComment,
    'return' => array(
      'type'   => Boolean,
    ),
  ));

DefineFunction(
  array(
    'name'   => "startPI",
    'flags'  =>  HasDocComment,
    'return' => array(
      'type'   => Boolean,
    ),
    'args'   => array(
      array(
        'name'   => "target",
        'type'   => String,
      ),
    ),
  ));

DefineFunction(
  array(
    'name'   => "writePI",
    'flags'  =>  HasDocComment,
    'return' => array(
      'type'   => Boolean,
    ),
    'args'   => array(
      array(
        'name'   => "target",
        'type'   => String,
      ),
      array(
        'name'   => "content",
        'type'   => String,
      ),
    ),
  ));

DefineFunction(
  array(
    'name'   => "endPI",
    'flags'  =>  HasDocComment,
    'return' => array(
      'type'   => Boolean,
    ),
  ));

DefineFunction(
  array(
    'name'   => "text",
    'flags'  =>  HasDocComment,
    'return' => array(
      'type'   => Boolean,
    ),
    'args'   => array(
      array(
        'name'   => "content",
        'type'   => String,
      ),
    ),
  ));

DefineFunction(
  array(
    'name'   => "writeRaw",
    'flags'  =>  HasDocComment,
    'return' => array(
      'type'   => Boolean,
    ),
    'args'   => array(
      array(
        'name'   => "content",
        'type'   => String,
      ),
    ),
  ));

DefineFunction(
  array(
    'name'   => "startDTD",
    'flags'  =>  HasDocComment,
    'return' => array(
      'type'   => Boolean,
    ),
    'args'   => array(
      array(
        'name'   => "qualifiedname",
        'type'   => String,
      ),
      array(
        'name'   => "publicid",
        'type'   => String,
        'value'  => "null_string",
      ),
      array(
        'name'   => "systemid",
        'type'   => String,
        'value'  => "null_string",
      ),
    ),
  ));

DefineFunction(
  array(
    'name'   => "writeDTD",
    'flags'  =>  HasDocComment,
    'return' => array(
      'type'   => Boolean,
    ),
    'args'   => array(
      array(
        'name'   => "name",
        'type'   => String,
      ),
      array(
        'name'   => "publicid",
        'type'   => String,
        'value'  => "null_string",
      ),
      array(
        'name'   => "systemid",
        'type'   => String,
        'value'  => "null_string",
      ),
      array(
        'name'   => "subset",
        'type'   => String,
        'value'  => "null_string",
      ),
    ),
  ));

DefineFunction(
  array(
    'name'   => "startDTDElement",
    'flags'  =>  HasDocComment,
    'return' => array(
      'type'   => Boolean,
    ),
    'args'   => array(
      array(
        'name'   => "qualifiedname",
        'type'   => String,
      ),
    ),
  ));

DefineFunction(
  array(
    'name'   => "writeDTDElement",
    'flags'  =>  HasDocComment,
    'return' => array(
      'type'   => Boolean,
    ),
    'args'   => array(
      array(
        'name'   => "name",
        'type'   => String,
      ),
      array(
        'name'   => "content",
        'type'   => String,
      ),
    ),
  ));

DefineFunction(
  array(
    'name'   => "endDTDElement",
    'flags'  =>  HasDocComment,
    'return' => array(
      'type'   => Boolean,
    ),
  ));

DefineFunction(
  array(
    'name'   => "startDTDAttlist",
    'flags'  =>  HasDocComment,
    'return' => array(
      'type'   => Boolean,
    ),
    'args'   => array(
      array(
        'name'   => "name",
        'type'   => String,
      ),
    ),
  ));

DefineFunction(
  array(
    'name'   => "writeDTDAttlist",
    'flags'  =>  HasDocComment,
    'return' => array(
      'type'   => Boolean,
    ),
    'args'   => array(
      array(
        'name'   => "name",
        'type'   => String,
      ),
      array(
        'name'   => "content",
        'type'   => String,
      ),
    ),
  ));

DefineFunction(
  array(
    'name'   => "endDTDAttlist",
    'flags'  =>  HasDocComment,
    'return' => array(
      'type'   => Boolean,
    ),
  ));

DefineFunction(
  array(
    'name'   => "startDTDEntity",
    'flags'  =>  HasDocComment,
    'return' => array(
      'type'   => Boolean,
    ),
    'args'   => array(
      array(
        'name'   => "name",
        'type'   => String,
      ),
      array(
        'name'   => "isparam",
        'type'   => Boolean,
      ),
    ),
  ));

DefineFunction(
  array(
    'name'   => "writeDTDEntity",
    'flags'  =>  HasDocComment,
    'return' => array(
      'type'   => Boolean,
    ),
    'args'   => array(
      array(
        'name'   => "name",
        'type'   => String,
      ),
      array(
        'name'   => "content",
        'type'   => String,
      ),
      array(
        'name'   => "pe",
        'type'   => Boolean,
        'value'  => "false",
      ),
      array(
        'name'   => "publicid",
        'type'   => String,
        'value'  => "null_string",
      ),
      array(
        'name'   => "systemid",
        'type'   => String,
        'value'  => "null_string",
      ),
      array(
        'name'   => "ndataid",
        'type'   => String,
        'value'  => "null_string",
      ),
    ),
  ));

DefineFunction(
  array(
    'name'   => "endDTDEntity",
    'flags'  =>  HasDocComment,
    'return' => array(
      'type'   => Boolean,
    ),
  ));

DefineFunction(
  array(
    'name'   => "endDTD",
    'flags'  =>  HasDocComment,
    'return' => array(
      'type'   => Boolean,
    ),
  ));

DefineFunction(
  array(
    'name'   => "flush",
    'flags'  =>  HasDocComment,
    'return' => array(
      'type'   => Variant,
    ),
    'args'   => array(
      array(
        'name'   => "empty",
        'type'   => Boolean,
        'value'  => "true",
      ),
    ),
  ));

DefineFunction(
  array(
    'name'   => "outputMemory",
    'flags'  =>  HasDocComment,
    'return' => array(
      'type'   => String,
    ),
    'args'   => array(
      array(
        'name'   => "flush",
        'type'   => Boolean,
        'value'  => "true",
      ),
    ),
  ));

EndClass(
);

