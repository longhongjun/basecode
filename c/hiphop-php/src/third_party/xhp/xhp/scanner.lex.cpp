#line 2 "scanner.lex.cpp"

#line 4 "scanner.lex.cpp"

#define  YY_INT_ALIGNED short int

/* A lexical scanner generated by flex */

/* %not-for-header */

/* %if-c-only */
/* %if-not-reentrant */
/* %endif */
/* %endif */
/* %ok-for-header */

#define FLEX_SCANNER
#define YY_FLEX_MAJOR_VERSION 2
#define YY_FLEX_MINOR_VERSION 5
#define YY_FLEX_SUBMINOR_VERSION 35
#if YY_FLEX_SUBMINOR_VERSION > 0
#define FLEX_BETA
#endif

/* %if-c++-only */
/* %endif */

/* %if-c-only */
    
/* %endif */

/* %if-c-only */

/* %endif */

/* First, we deal with  platform-specific or compiler-specific issues. */

/* begin standard C headers. */
/* %if-c-only */
#include <stdio.h>
#include <string.h>
#include <errno.h>
#include <stdlib.h>
/* %endif */

/* %if-tables-serialization */
/* %endif */
/* end standard C headers. */

/* %if-c-or-c++ */
/* flex integer type definitions */

#ifndef FLEXINT_H
#define FLEXINT_H

/* C99 systems have <inttypes.h>. Non-C99 systems may or may not. */

#if defined (__STDC_VERSION__) && __STDC_VERSION__ >= 199901L

/* C99 says to define __STDC_LIMIT_MACROS before including stdint.h,
 * if you want the limit (max/min) macros for int types. 
 */
#ifndef __STDC_LIMIT_MACROS
#define __STDC_LIMIT_MACROS 1
#endif

#include <inttypes.h>
typedef int8_t flex_int8_t;
typedef uint8_t flex_uint8_t;
typedef int16_t flex_int16_t;
typedef uint16_t flex_uint16_t;
typedef int32_t flex_int32_t;
typedef uint32_t flex_uint32_t;
#else
typedef signed char flex_int8_t;
typedef short int flex_int16_t;
typedef int flex_int32_t;
typedef unsigned char flex_uint8_t; 
typedef unsigned short int flex_uint16_t;
typedef unsigned int flex_uint32_t;
#endif /* ! C99 */

/* Limits of integral types. */
#ifndef INT8_MIN
#define INT8_MIN               (-128)
#endif
#ifndef INT16_MIN
#define INT16_MIN              (-32767-1)
#endif
#ifndef INT32_MIN
#define INT32_MIN              (-2147483647-1)
#endif
#ifndef INT8_MAX
#define INT8_MAX               (127)
#endif
#ifndef INT16_MAX
#define INT16_MAX              (32767)
#endif
#ifndef INT32_MAX
#define INT32_MAX              (2147483647)
#endif
#ifndef UINT8_MAX
#define UINT8_MAX              (255U)
#endif
#ifndef UINT16_MAX
#define UINT16_MAX             (65535U)
#endif
#ifndef UINT32_MAX
#define UINT32_MAX             (4294967295U)
#endif

#endif /* ! FLEXINT_H */

/* %endif */

/* %if-c++-only */
/* %endif */

#ifdef __cplusplus

/* The "const" storage-class-modifier is valid. */
#define YY_USE_CONST

#else	/* ! __cplusplus */

/* C99 requires __STDC__ to be defined as 1. */
#if defined (__STDC__)

#define YY_USE_CONST

#endif	/* defined (__STDC__) */
#endif	/* ! __cplusplus */

#ifdef YY_USE_CONST
#define yyconst const
#else
#define yyconst
#endif

/* %not-for-header */

/* Returned upon end-of-file. */
#define YY_NULL 0
/* %ok-for-header */

/* %not-for-header */

/* Promotes a possibly negative, possibly signed char to an unsigned
 * integer for use as an array index.  If the signed char is negative,
 * we want to instead treat it as an 8-bit unsigned char, hence the
 * double cast.
 */
#define YY_SC_TO_UI(c) ((unsigned int) (unsigned char) c)
/* %ok-for-header */

/* %if-reentrant */

/* An opaque pointer. */
#ifndef YY_TYPEDEF_YY_SCANNER_T
#define YY_TYPEDEF_YY_SCANNER_T
typedef void* yyscan_t;
#endif

/* For convenience, these vars (plus the bison vars far below)
   are macros in the reentrant scanner. */
#define yyin yyg->yyin_r
#define yyout yyg->yyout_r
#define yyextra yyg->yyextra_r
#define yyleng yyg->yyleng_r
#define yytext yyg->yytext_r
#define yylineno (YY_CURRENT_BUFFER_LVALUE->yy_bs_lineno)
#define yycolumn (YY_CURRENT_BUFFER_LVALUE->yy_bs_column)
#define yy_flex_debug yyg->yy_flex_debug_r

/* %endif */

/* %if-not-reentrant */
/* %endif */

/* Enter a start condition.  This macro really ought to take a parameter,
 * but we do it the disgusting crufty way forced on us by the ()-less
 * definition of BEGIN.
 */
#define BEGIN yyg->yy_start = 1 + 2 *

/* Translate the current start state into a value that can be later handed
 * to BEGIN to return to the state.  The YYSTATE alias is for lex
 * compatibility.
 */
#define YY_START ((yyg->yy_start - 1) / 2)
#define YYSTATE YY_START

/* Action number for EOF rule of a given start state. */
#define YY_STATE_EOF(state) (YY_END_OF_BUFFER + state + 1)

/* Special action meaning "start processing a new file". */
#define YY_NEW_FILE xhprestart(yyin ,yyscanner )

#define YY_END_OF_BUFFER_CHAR 0

/* Size of default input buffer. */
#ifndef YY_BUF_SIZE
#define YY_BUF_SIZE 16384
#endif

/* The state buf must be large enough to hold one state per character in the main buffer.
 */
#define YY_STATE_BUF_SIZE   ((YY_BUF_SIZE + 2) * sizeof(yy_state_type))

#ifndef YY_TYPEDEF_YY_BUFFER_STATE
#define YY_TYPEDEF_YY_BUFFER_STATE
typedef struct yy_buffer_state *YY_BUFFER_STATE;
#endif

/* %if-not-reentrant */
/* %endif */

/* %if-c-only */
/* %if-not-reentrant */
/* %endif */
/* %endif */

#define EOB_ACT_CONTINUE_SCAN 0
#define EOB_ACT_END_OF_FILE 1
#define EOB_ACT_LAST_MATCH 2

    #define YY_LESS_LINENO(n)
    
/* Return all but the first "n" matched characters back to the input stream. */
#define yyless(n) \
	do \
		{ \
		/* Undo effects of setting up yytext. */ \
        int yyless_macro_arg = (n); \
        YY_LESS_LINENO(yyless_macro_arg);\
		*yy_cp = yyg->yy_hold_char; \
		YY_RESTORE_YY_MORE_OFFSET \
		yyg->yy_c_buf_p = yy_cp = yy_bp + yyless_macro_arg - YY_MORE_ADJ; \
		YY_DO_BEFORE_ACTION; /* set up yytext again */ \
		} \
	while ( 0 )

#define unput(c) yyunput( c, yyg->yytext_ptr , yyscanner )

#ifndef YY_TYPEDEF_YY_SIZE_T
#define YY_TYPEDEF_YY_SIZE_T
typedef size_t yy_size_t;
#endif

#ifndef YY_STRUCT_YY_BUFFER_STATE
#define YY_STRUCT_YY_BUFFER_STATE
struct yy_buffer_state
	{
/* %if-c-only */
	FILE *yy_input_file;
/* %endif */

/* %if-c++-only */
/* %endif */

	char *yy_ch_buf;		/* input buffer */
	char *yy_buf_pos;		/* current position in input buffer */

	/* Size of input buffer in bytes, not including room for EOB
	 * characters.
	 */
	yy_size_t yy_buf_size;

	/* Number of characters read into yy_ch_buf, not including EOB
	 * characters.
	 */
	int yy_n_chars;

	/* Whether we "own" the buffer - i.e., we know we created it,
	 * and can realloc() it to grow it, and should free() it to
	 * delete it.
	 */
	int yy_is_our_buffer;

	/* Whether this is an "interactive" input source; if so, and
	 * if we're using stdio for input, then we want to use getc()
	 * instead of fread(), to make sure we stop fetching input after
	 * each newline.
	 */
	int yy_is_interactive;

	/* Whether we're considered to be at the beginning of a line.
	 * If so, '^' rules will be active on the next match, otherwise
	 * not.
	 */
	int yy_at_bol;

    int yy_bs_lineno; /**< The line count. */
    int yy_bs_column; /**< The column count. */
    
	/* Whether to try to fill the input buffer when we reach the
	 * end of it.
	 */
	int yy_fill_buffer;

	int yy_buffer_status;

#define YY_BUFFER_NEW 0
#define YY_BUFFER_NORMAL 1
	/* When an EOF's been seen but there's still some text to process
	 * then we mark the buffer as YY_EOF_PENDING, to indicate that we
	 * shouldn't try reading from the input source any more.  We might
	 * still have a bunch of tokens to match, though, because of
	 * possible backing-up.
	 *
	 * When we actually see the EOF, we change the status to "new"
	 * (via xhprestart()), so that the user can continue scanning by
	 * just pointing yyin at a new input file.
	 */
#define YY_BUFFER_EOF_PENDING 2

	};
#endif /* !YY_STRUCT_YY_BUFFER_STATE */

/* %if-c-only Standard (non-C++) definition */
/* %not-for-header */

/* %if-not-reentrant */
/* %endif */
/* %ok-for-header */

/* %endif */

/* We provide macros for accessing buffer states in case in the
 * future we want to put the buffer states in a more general
 * "scanner state".
 *
 * Returns the top of the stack, or NULL.
 */
#define YY_CURRENT_BUFFER ( yyg->yy_buffer_stack \
                          ? yyg->yy_buffer_stack[yyg->yy_buffer_stack_top] \
                          : NULL)

/* Same as previous macro, but useful when we know that the buffer stack is not
 * NULL or when we need an lvalue. For internal use only.
 */
#define YY_CURRENT_BUFFER_LVALUE yyg->yy_buffer_stack[yyg->yy_buffer_stack_top]

/* %if-c-only Standard (non-C++) definition */

/* %if-not-reentrant */
/* %not-for-header */

/* %ok-for-header */

/* %endif */

void xhprestart (FILE *input_file ,yyscan_t yyscanner );
void xhp_switch_to_buffer (YY_BUFFER_STATE new_buffer ,yyscan_t yyscanner );
YY_BUFFER_STATE xhp_create_buffer (FILE *file,int size ,yyscan_t yyscanner );
void xhp_delete_buffer (YY_BUFFER_STATE b ,yyscan_t yyscanner );
void xhp_flush_buffer (YY_BUFFER_STATE b ,yyscan_t yyscanner );
void xhppush_buffer_state (YY_BUFFER_STATE new_buffer ,yyscan_t yyscanner );
void xhppop_buffer_state (yyscan_t yyscanner );

static void xhpensure_buffer_stack (yyscan_t yyscanner );
static void xhp_load_buffer_state (yyscan_t yyscanner );
static void xhp_init_buffer (YY_BUFFER_STATE b,FILE *file ,yyscan_t yyscanner );

#define YY_FLUSH_BUFFER xhp_flush_buffer(YY_CURRENT_BUFFER ,yyscanner)

YY_BUFFER_STATE xhp_scan_buffer (char *base,yy_size_t size ,yyscan_t yyscanner );
YY_BUFFER_STATE xhp_scan_string (yyconst char *yy_str ,yyscan_t yyscanner );
YY_BUFFER_STATE xhp_scan_bytes (yyconst char *bytes,int len ,yyscan_t yyscanner );

/* %endif */

void *xhpalloc (yy_size_t ,yyscan_t yyscanner );
void *xhprealloc (void *,yy_size_t ,yyscan_t yyscanner );
void xhpfree (void * ,yyscan_t yyscanner );

#define yy_new_buffer xhp_create_buffer

#define yy_set_interactive(is_interactive) \
	{ \
	if ( ! YY_CURRENT_BUFFER ){ \
        xhpensure_buffer_stack (yyscanner); \
		YY_CURRENT_BUFFER_LVALUE =    \
            xhp_create_buffer(yyin,YY_BUF_SIZE ,yyscanner); \
	} \
	YY_CURRENT_BUFFER_LVALUE->yy_is_interactive = is_interactive; \
	}

#define yy_set_bol(at_bol) \
	{ \
	if ( ! YY_CURRENT_BUFFER ){\
        xhpensure_buffer_stack (yyscanner); \
		YY_CURRENT_BUFFER_LVALUE =    \
            xhp_create_buffer(yyin,YY_BUF_SIZE ,yyscanner); \
	} \
	YY_CURRENT_BUFFER_LVALUE->yy_at_bol = at_bol; \
	}

#define YY_AT_BOL() (YY_CURRENT_BUFFER_LVALUE->yy_at_bol)

/* %% [1.0] yytext/yyin/yyout/yy_state_type/yylineno etc. def's & init go here */
/* Begin user sect3 */

#define xhpwrap(n) 1
#define YY_SKIP_YYWRAP

#define FLEX_DEBUG

typedef unsigned char YY_CHAR;

typedef int yy_state_type;

#define yytext_ptr yytext_r

/* %if-c-only Standard (non-C++) definition */

static yy_state_type yy_get_previous_state (yyscan_t yyscanner );
static yy_state_type yy_try_NUL_trans (yy_state_type current_state  ,yyscan_t yyscanner);
static int yy_get_next_buffer (yyscan_t yyscanner );
static void yy_fatal_error (yyconst char msg[] ,yyscan_t yyscanner );

/* %endif */

/* Done after the current pattern has been matched and before the
 * corresponding action - sets up yytext.
 */
#define YY_DO_BEFORE_ACTION \
	yyg->yytext_ptr = yy_bp; \
/* %% [2.0] code to fiddle yytext and yyleng for yymore() goes here \ */\
	yyg->yytext_ptr -= yyg->yy_more_len; \
	yyleng = (size_t) (yy_cp - yyg->yytext_ptr); \
	yyg->yy_hold_char = *yy_cp; \
	*yy_cp = '\0'; \
/* %% [3.0] code to copy yytext_ptr to yytext[] goes here, if %array \ */\
	yyg->yy_c_buf_p = yy_cp;

/* %% [4.0] data tables for the DFA and the user's section 1 definitions go here */
#define YY_NUM_RULES 448
#define YY_END_OF_BUFFER 449
/* This struct is not used in this scanner,
   but its presence is necessary. */
struct yy_trans_info
	{
	flex_int32_t yy_verify;
	flex_int32_t yy_nxt;
	};
static yyconst flex_int16_t yy_accept[1928] =
    {   0,
       16,   16,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,  436,  436,    0,    0,    0,    0,    0,    0,
        0,    0,  449,   16,   16,  447,   22,  447,  447,   19,
      447,  447,  447,  447,  447,  447,  447,  447,  447,  447,
      139,  139,  129,  447,  447,  447,  447,  141,  141,  141,
      141,  141,  141,  141,  141,  141,  141,  141,  141,  141,
      141,  141,  141,  141,  141,  141,  141,  128,  447,  141,
      447,  447,   28,   27,   27,   28,   24,   23,   23,   26,

       28,  447,  447,  147,  148,  148,  151,  152,  152,  151,
      447,  149,  149,  141,  160,  158,  158,  155,  154,  159,
      153,  153,  162,  161,  163,  164,  165,  431,  427,  428,
      434,  433,  433,  433,  431,  427,  428,  435,  436,  438,
      437,  167,  166,  166,  432,  447,    9,   10,  447,  447,
      141,  141,  141,  141,  141,  141,  141,  447,  446,  445,
      444,  444,  444,  444,   16,   14,   12,   22,  116,    0,
      143,    0,  142,  107,   18,  114,  108,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,  104,
      123,  102,  124,  103,  125,  140,  106,   21,   19,  105,

      140,  139,    0,    0,  127,    0,  121,  119,  116,  115,
      126,  120,  122,   17,  141,  141,  141,  141,   58,  141,
        0,    0,    0,  141,  141,  141,  141,  141,  141,   49,
      141,  141,  141,  141,  141,  141,  141,  141,  141,  141,
      141,   44,  141,  141,  141,  141,  141,  141,   36,  141,
      141,  141,  141,  141,  141,  141,  141,  141,  141,  141,
      141,  110,  141,    0,  144,  109,  113,   28,   27,   30,
       24,   23,   25,   29,    0,    0,  147,  148,  151,  152,
      150,  150,  151,  151,    0,  149,  149,  158,  157,  156,
      159,  153,  162,  163,  164,    0,    0,    0,    0,    0,

        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
      433,  435,  435,  436,  438,  437,  439,  166,  432,  121,
        0,  141,  141,  141,  141,  141,  141,  141,  444,  444,
      444,  444,   15,   13,    0,  118,    0,  142,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
      140,    0,  140,  139,    0,  145,  111,  117,  112,   17,
       17,  141,   38,  141,  141,    0,  141,  141,  141,  141,

      141,  141,  141,  141,  141,  141,  141,  141,  141,  141,
      141,  141,  141,   52,  141,  141,  141,  141,  141,  141,
      141,  141,  141,  141,   41,  141,  141,  141,  141,  141,
      141,  141,  141,   69,  141,   72,   80,  141,   37,  141,
      141,  141,  141,  141,  141,  141,  146,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,

        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,

        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,  440,  432,
        0,  141,  141,  141,  141,    2,  141,    4,  441,  444,
      444,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,   20,    0,  145,  141,  141,  141,  141,
       61,  141,  141,  141,  141,  141,  141,  141,  141,  141,
       48,   46,  141,  141,  141,  141,  141,  141,   33,   43,

      141,  141,  141,  141,  141,   65,  141,  141,  141,  141,
      141,   89,  141,  141,  141,  141,  141,  141,  141,  141,
      141,  141,  141,  141,  141,  141,  141,  141,  141,  141,
      141,  141,  429,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,  288,    0,  289,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,  292,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,  290,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,

        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
      400,  172,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,  399,    0,    0,    0,    0,
        0,    0,  171,    0,    0,    0,    0,    0,  312,    0,
        0,    0,  397,  379,    0,    0,    0,  313,    0,    0,

        0,    0,    0,    0,    0,    0,  389,    0,    0,    0,
        0,    0,    0,    0,  316,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,  314,    0,    0,
        0,    0,    0,    0,  432,    0,  141,    1,    7,  141,
      141,  444,  444,    0,    0,    0,    0,    0,    0,    0,
      130,    0,    0,    0,    0,    0,    0,    0,  141,   90,

      141,   63,   70,  141,  141,   85,   42,   67,  141,  141,
      141,  141,   83,  141,  141,   47,  141,  141,  141,   76,
      141,  141,  141,  141,  141,  141,  141,   82,  141,   39,
      141,  141,  141,  141,  141,  141,  141,   71,   81,   50,
      141,  141,  141,  141,  141,  141,  141,  141,  430,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,  298,
        0,    0,  221,    0,    0,    0,    0,  283,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,  297,    0,  299,
      293,    0,    0,    0,  295,    0,    0,    0,    0,    0,

        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,  169,  388,  387,    0,    0,    0,    0,    0,    0,
        0,    0,    0,  390,    0,    0,    0,  323,    0,    0,
        0,    0,    0,    0,    0,  391,    0,    0,    0,    0,
      189,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,  307,  253,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,  392,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,  416,  334,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,  185,

        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,  322,  328,    0,    0,    0,    0,    0,  324,    0,
        0,    0,    0,    0,    0,    0,    0,    0,  187,    0,
      317,  335,    0,    0,    0,    0,    0,    0,  186,    0,
      394,    0,    0,  401,    0,  381,    0,    0,    0,  402,
        0,    0,  320,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,  181,    0,    0,
        0,    0,  178,    0,    0,  333,    0,  432,    0,    5,
        3,  141,  443,  444,   11,   11,    0,    0,    0,  137,

        0,    0,    0,    0,    0,    0,  131,    0,    0,    0,
        0,  141,  141,  141,  141,  141,  141,  141,   45,  141,
       53,  141,  141,  141,  141,  141,   73,  141,  141,  141,
      141,  141,  141,  141,   79,  141,   68,   74,   59,  141,
      141,  141,  141,  141,  141,  141,  141,    0,    0,    0,
        0,    0,    0,    0,  209,  278,    0,    0,    0,    0,
        0,    0,    0,  216,    0,    0,    0,    0,  285,  220,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,  227,    0,    0,    0,    0,    0,    0,    0,    0,
        0,  233,    0,  273,  282,    0,    0,    0,    0,    0,

        0,    0,  170,    0,    0,    0,  241,    0,  302,    0,
      346,    0,    0,  175,  275,    0,    0,    0,  395,  182,
        0,    0,  370,    0,  364,    0,    0,    0,    0,    0,
        0,    0,  330,  329,    0,    0,  248,  355,    0,  274,
        0,    0,    0,    0,    0,  371,  365,    0,    0,    0,
        0,    0,    0,    0,    0,  309,    0,  377,  252,    0,
      367,    0,  414,    0,  361,    0,    0,    0,    0,    0,
        0,  188,    0,    0,    0,    0,    0,  173,    0,    0,
      403,    0,    0,    0,    0,    0,    0,    0,    0,    0,
      183,  199,    0,    0,    0,  259,  195,  373,    0,  408,

        0,    0,    0,  380,  385,  168,  369,    0,  415,    0,
      363,    0,    0,  358,    0,    0,    0,    0,    0,  409,
      180,    0,    0,    0,    0,  404,  198,  191,  192,  405,
        0,    0,    0,    0,    0,    0,    0,    0,    0,  368,
        0,  362,    0,    0,    0,    0,    0,  265,    0,    0,
      268,  306,  332,  432,    0,    6,  442,    0,  135,    0,
        0,    0,    0,    0,    0,    0,    0,  138,    0,  141,
      141,  141,  141,  141,   56,   62,  141,  141,  141,  141,
       87,   54,  141,  141,   31,  141,  141,  141,   77,  141,
       34,  141,   98,  141,  141,  141,  141,  141,  141,  211,

        0,  207,    0,  277,  210,    0,    0,    0,  280,    0,
      215,    0,    0,  279,    0,  219,    0,  286,    0,    0,
      269,    0,  225,    0,  300,    0,    0,    0,  350,    0,
      294,  235,  284,    0,  232,    0,    0,    0,    0,  239,
      193,  243,    0,    0,  301,  242,  396,    0,  343,    0,
        0,  197,  421,  418,  425,  366,    0,    0,  304,  420,
        0,    0,  247,    0,  375,    0,  398,  374,    0,    0,
        0,    0,  354,  303,    0,    0,    0,  251,  174,    0,
      356,  386,    0,  310,    0,  184,  410,  341,    0,    0,
        0,  338,  337,  194,    0,  382,  376,  336,  378,    0,

        0,  257,  270,    0,  353,  325,    0,  406,    0,    0,
        0,    0,    0,  176,  349,  384,  200,  411,  342,    0,
        0,  339,  340,    0,  319,    0,    0,    0,    0,  236,
        0,  308,    0,    0,  267,    0,  276,  228,  359,    0,
      264,    0,    0,  327,    0,    0,    0,  432,    0,    0,
      134,    0,    0,    0,  136,    0,  132,    0,    0,   75,
      141,  100,  101,   64,  141,  141,  141,   51,   66,  141,
      141,  141,  141,  141,  141,  141,  141,   95,  141,  141,
       94,  141,  141,  206,  205,  208,  212,  345,  214,  213,
        0,  218,  217,  287,  222,  224,  223,    0,  229,  226,

      271,  231,  230,    0,  234,  238,  237,    0,  240,  179,
      244,  177,  344,  260,  246,  245,    0,  372,  202,  201,
      203,  419,  347,  250,  249,  204,  311,  412,  383,  351,
      196,  254,  256,  255,    0,  261,  258,  407,  348,  190,
      413,  352,  272,  318,    0,    0,  417,  393,    0,  331,
        0,  263,  262,    0,    0,  357,  266,  432,    0,    0,
      133,    0,   99,  141,  141,   60,  141,  141,  141,   86,
       96,   78,  141,   91,  141,  141,  141,  141,  281,  291,
      296,  360,  305,  315,    0,  423,    0,    0,    0,  321,
      432,    8,   57,   55,   88,  141,   40,  141,  141,  141,

       92,  141,    0,  326,    0,  422,  432,  141,  141,  141,
      141,  141,  424,    0,   32,   35,   93,  141,  141,    0,
      141,   97,    0,  141,  426,   84,    0
    } ;

static yyconst flex_int16_t yy_base[2002] =
    {   0,
    21489,21488,    0,    0,  246,  247,  248,  252,  253,  254,
      315,  441,  258,  259,  567,  693,  260,  264,  819,  945,
        0,    0, 1071, 1197,  266,  271, 1323, 1449, 1484, 1486,
     1517, 1522, 1553, 1558,  273,  281,    0,    0, 1718, 1844,
     1970, 2096,21547,    0,  241,21550,  371,21485, 1485,21550,
        0,  231,  247,  343, 1573,21484,  340,  343,  341,  368,
     1573,  460,21486,  240,  245,  248,21481,  441, 1519,  567,
      449,  691,  562,  451,    0,  567,  312,  457,  304,  551,
      318,  564,  449,  571,  334,  328,  441,21550,21481,21446,
    21444, 1456,    0,21550,21529,21491,    0,21550,21527,21474,

    21488,    0,    0,    0,21550,21524,    0,21550,21523, 2222,
      403,21550,21522,  731,21550,  750,  762,21486,21472,    0,
      783,  877,  882,21550,    0,    0,21550, 2314,21550,21550,
    21550,21550,21550,21519,    0,21550,21550,  884, 1574,21481,
    21550,21550,  889,  891,    0,21466,21550,21468,  360,  552,
     1577, 2240, 2257, 2260, 2263, 1547, 2264,  381,21550,21550,
      560,    0,  563,  575,    0,21464,  700,  909,21463, 1502,
    21550,    0,    0,21550,21550,21550,21550,  845,    0, 2375,
      570,  937,  574,  579,  578,  591,  697,  689,  696,21550,
    21550,21550,21550,21550,21550, 1088,21550,21481,21550,21550,

     1214, 1342,  969, 2445,21550,  693,  364,21550,21550,21461,
    21550,21550,21460,  417,    0,  695,  713,  806,    0,  812,
     1503,  974,21460,  834,  823,  835,  950,  949,  961,    0,
      958,  949,  953,  967, 1081, 1074, 1070, 1067, 1072, 1072,
     1068,    0, 1073, 1322, 1071, 1072, 1079, 1072,    0, 1199,
     1094, 1192, 1096, 1201, 1193, 1188, 1196, 1211, 1199, 1209,
     1202,21550, 1722,21423,21550,21550,21550,    0,21550,21550,
        0,21550,21550,21550,21484,21478,    0,21550,    0,21550,
    21550,21506, 2547,  423,  424,21550,21505, 1285,21550,21550,
        0, 1287, 1391,    0,    0, 2150, 1595,21413,  437,  441,

     1323,21416, 1569,21415,21414,21393,  427, 1971,  940,21405,
      441, 1330, 1550,21403,  686,21406, 2065, 1185, 2255, 1535,
     1939,  815, 1312, 1449, 2352,21409, 2406, 1599, 2515, 2545,
     1814,21388, 2426, 2576, 1327, 2241,21403,21398, 1328,  933,
    21550, 1793, 1911, 2472,21455,21550,21439, 2044,    0,21439,
     1341, 1330, 1436, 1431, 1478, 1519, 1530, 1569,    0, 1568,
     1589, 1617,21550,21550, 1713,21550, 1510,    0, 1512, 1704,
     1717, 1717, 1712, 1726, 1723, 1734, 1847, 1834, 1850, 2263,
     2651, 1120, 2161, 2661, 1859, 1670,21550,21550,21550,21550,
    19830, 1847,    0, 1867, 1852,19779, 1972, 1972, 1976, 1970,

     1964, 1980, 2194, 1984, 2098, 2196, 2220, 2206, 2651, 2217,
     2217, 2236, 2246, 2261, 2265, 2273, 2263, 2300, 2301, 2294,
     2319, 2331, 2321, 2337,    0, 2366, 2358, 2370, 2362, 2371,
     2403, 2512, 2518,    0, 2532,    0,    0, 2526,    0, 2527,
     2531, 2578, 2552, 2545, 2554, 2559,21550,19804,19798, 2691,
     2723,19702,19709,19702,19692,19693,19673,19672,19667,19659,
    19673,19668,19669,19269,19304,19276,19269,19233,19230,19247,
    19234,19233,19216,19209,19199,19196,19202,19198,19200,19239,
    19192,19237,19187,19195,19188,19178,  444,19183,19055,19050,
    19053,19098,19025,19023,19016,19029,19022,19019,18980,18995,

    18996,18989,18979,18977,18972,19021,18980,18969,18961,18977,
      309,18967,18960,  939,18961,  704,18961,18966,18949,18964,
    18574,18569,18565,18562,18545,18539,18549,  824,18544,18534,
      816, 1596,18524,  185,18506,  943,  694, 1441,18520,18513,
    18503,  938,18501,18500,18103,  691,  822,18114,18107,18103,
    18093,18079,18128,18127,18071,18044, 1195,18058,18051,18035,
    18040,18056, 1185,18036,17895,17906,17901,17897,17868, 1843,
    17879,17866,17919,17869, 1311,17841,  792,17890,17849,17850,
     1851,17887,17847,17829,17486,17487,17456,17369,17366,17357,
    17402,17336,17329,17152,17093,17101, 1609,17094, 1493,16931,

    16933,16928,16922,16895,16902, 1480,16889,16888, 1543,16899,
    16866,16862, 2622,16874,16861, 1857,16865,16861,16862, 1968,
    16718,16733,16718,16729,16680, 1980,16688,16701, 2074,16689,
    16679, 2693,  439,16672,16654, 1304,16662,16652, 2086,16650,
    16655,16658,15941,15898,15748,15748,15740, 1728,21550,    0,
     2556, 2582, 2576, 2581, 2599,    0, 2592,    0,    0, 2607,
     2660, 2653, 2672, 2684, 2678, 2689, 2699, 2773, 2698, 2692,
     2710, 2717, 2716, 2798, 2713, 2295, 2715, 2712, 2729, 2728,
        0, 2734, 2738, 2744, 2730, 2749, 2735, 2753, 2763, 2746,
        0, 2759, 2747, 2768, 2760, 2770, 2756, 2774,    0,    0,

     2769, 2772, 2784, 2768, 2788,    0, 2785, 2770, 2791, 2775,
     2775,    0, 2778, 2778, 2800, 2797, 2794, 2797, 2791, 2803,
     2810, 2795, 2799, 2821, 2827, 2813, 2820, 2822, 2825, 2825,
     2820, 2829,21550, 2891,15750,15711,15712,15728,15720,15713,
    15688,15687,15697,15693,15733,15688,15674,15591,15532,15534,
    15550,15515,15559,15509,15507,15498,15474,15490,15489,15477,
    15472,15485,21550,15474,21550,15466,15453,15455,15471,15464,
    15467,15468,15456,15325,15373,21550,15322,15371,15344,15287,
    15291,15317,15339,15255,15253,15255,15271,15262,15258,21550,
    15248,15246,15256,15235,15237,15234,15244,15251,15245,15242,

    15286,15285,15284,15227,15038,14989,14987,14764,14726,14743,
    14348,14337,14385,14343,14311,14298,14354,14313,14294,14286,
    14282,14279,14260,14266,14320,14264,13614,13624,13612,13666,
    13582,13587,13590,13577,13579,13569,13549,13552,13551,13557,
    13556,13601,12885,12647,12643,12638,12650,12628, 2070,12614,
    21550,21550,12608,12607,12606,12585,12575,12577,12591,12592,
    12585,12582,12267,12192,12157,12118,12118,12093,12090,12080,
    12074,11886,11836,11844,11828,21550,11671,11684,11721,11720,
    11639,11633,21550,11635,11633,11633,11620,11602,21550,11610,
    11605,11601,21550,21550, 2229,11617,11606,21550,11457,11459,

    11467,11474,11434,11439,11442,11423,21550,  947,11442, 1976,
    11404, 1975, 2058,11452,21550,11451,11394,11398,11398, 1595,
    11447,11250,11251,11259,11260,11219,11220,11228,11215,11223,
    11245,11192,11243,11242,11186,11181,11170,11172,11169,11168,
    11224,11173,11222,11161,11178, 1734,11218, 2861,11171,11216,
      198,10411,10404,10269,10278,10276,10276,10235,10230,10232,
    10231,10247,10203,10257,10210,10206,10212,21550,10195,10252,
    10063,10073,10110,10062,    0, 2832, 2830,    0,    0, 2837,
     2845, 2842, 2850, 2955, 2848, 2870, 2945, 2891, 2886, 2962,
    21550, 2901, 2906, 2965, 2897, 2897, 2894, 2906, 2915,    0,

     2915,    0,    0, 2904, 2903,    0,    0,    0, 2917, 2914,
     2922, 2930,    0, 2934, 2927,    0, 2943, 2945, 2951,    0,
     2953, 2948, 2946, 2946, 2956, 2947, 2956,    0, 2949,    0,
     2947, 2967, 2968, 2954, 2959, 2971, 2967,    0,    0,    0,
     2957,10046, 2973, 2976, 2960, 2976, 2975, 2980,21550,10036,
    10022,10038,10018, 9883, 9876, 9878, 9918, 9891, 9843,21550,
     9846, 9849,21550, 9829, 9627, 9558, 9565,21550, 9391, 9324,
     9302, 8925, 8905, 8963, 8962, 8897, 8892, 8891, 8887, 8873,
     8863, 8843, 8863, 8845, 8843, 8857, 8897,21550, 8460,21550,
    21550, 8449, 8462, 8480,21550, 8434, 8413, 8429, 8409, 8418,

     7990, 3537, 3592, 3591, 3533, 3549, 3546, 3543, 3527, 3529,
     3546,21550,21550,21550, 3583, 3537, 3527, 3538, 3577, 3524,
     3575, 3534, 3569,21550, 3522, 3517,  353,21550,  603,  662,
      649,  698,  871,  873,  944,21550, 1065, 1259, 1307, 1377,
    21550, 1424, 1473, 1499, 1492, 1511, 1499, 1539, 1606, 1641,
     1607, 1695,21550,21550, 1880, 1888, 1928, 2112, 2070, 2277,
     2083, 2099, 2212, 2228, 2176, 2203, 2196, 2232, 2247, 2239,
     2264, 2260,21550, 2316, 2271, 2336, 2342, 2342, 2391, 2359,
     2405, 2355, 2409, 2362, 2372, 2398, 2401,21550,21550, 2401,
     2413, 2470, 2427, 2422, 2424, 2421, 2440, 2479, 2435,21550,

     2430, 2539, 2499, 2484, 2515, 2516, 2503, 2521, 2528, 2513,
     2530, 2607, 2608, 2553, 2578, 2581, 2626, 2628, 2630, 2587,
     2635,21550,21550, 2798, 2813, 2815, 2859, 2866,21550, 2867,
     2870, 2831, 2923, 2948, 3001, 2954, 2953, 3006,21550, 2962,
    21550,21550, 2961, 2969, 2971, 2972, 3025, 3026,21550, 2989,
    21550, 2985, 2987,21550, 3030,21550, 3031, 3032, 3033,21550,
     3034, 2992,21550, 2995, 3000, 2983, 2989, 3000, 3000, 2987,
     3002, 3045, 2989, 3047, 3008, 2990, 3008,21550, 3006, 3052,
     2998, 2997,21550, 3056, 3057,21550, 3058,    0, 3045,    0,
        0, 3048,    0, 3055,21550, 3111, 3113, 3034, 3115,21550,

     3060, 3057, 3121, 3058, 3044, 3129,21550, 3060, 3064, 3133,
     3054, 3068, 3051, 3055, 3070, 3055, 3072, 3059,    0, 3068,
     3077, 3064, 3073, 3094, 3107, 3103,    0, 3114, 3115, 3118,
     3121, 3122, 3119, 3105,    0, 3121,    0,    0,    0, 3108,
     3034, 3038, 3108, 3098, 3099, 3116, 3113, 3138, 3097, 3140,
     3099, 3142, 3143, 3102,21550,21550, 3096, 3091, 3147, 3106,
     3149, 3109, 3101,21550, 3154, 3124, 3167, 3128,21550,21550,
     3171, 3134, 3131, 3174, 3133, 3176, 3135, 3178, 3127, 3135,
     3139,21550, 3182, 3132, 3184, 3185, 3186, 3145, 3188, 3147,
     3138,21550, 3149,21550,21550, 3150, 3193, 3194, 3195, 3154,

     3135, 3198,21550, 3199, 3200, 3159,21550, 3202,21550, 3148,
    21550, 3155, 3205,21550,21550, 3206, 3207, 3208,21550,21550,
     3209, 3159,21550, 3156,21550, 3212, 3213, 3172, 3173, 3216,
     3175, 3218,21550,21550, 3167, 3220,21550,21550, 3221,21550,
     3173, 3232, 3231, 3226, 3227,21550,21550, 3172, 3176, 3188,
     3231, 3232, 3191, 3234, 3235,21550, 3179,21550,21550, 3237,
    21550, 3200,21550, 3239,21550, 3240, 3241, 3187, 3186, 3192,
     3245,21550, 3246, 3247, 3191, 3249, 3250,21550, 3251, 3252,
    21550, 3211, 3212, 3255, 3256, 3215, 3258, 3259, 3208, 3261,
    21550,21550, 3217, 3221, 3208,21550,21550,21550, 3216,21550,

     3215, 3267, 3268,21550,21550,21550,21550, 3269,21550, 3270,
    21550, 3271, 3272,21550, 3218, 3222, 3275, 3276, 3226,21550,
    21550, 3278, 3230, 3242, 3225,21550,21550,21550,21550,21550,
     3282, 3290, 3284, 3232, 3286, 3245, 3288, 3289, 3290,21550,
     3249,21550, 3292, 3251, 3245, 3295, 3244,21550, 3244, 3256,
    21550,21550,21550,    0, 3276,    0,    0, 3350,21550, 3351,
     3283, 3353, 3281, 3355, 3356, 3297, 3368,21550, 3285, 3286,
     3287, 3283, 3295, 3305,    0,    0, 3310, 3311, 3311, 3310,
        0,    0, 3303, 3306, 3272, 3317, 3322, 3345,    0, 3345,
     3273, 3320,    0, 3322, 3346, 3353, 3327, 3355, 3344,21550,

     3366,21550, 3367,21550,21550, 3368, 3369, 3370,21550, 3371,
    21550, 3372, 3322,21550, 3374,21550, 3375,21550, 3376, 3377,
    21550, 3378,21550, 3379,21550, 3329, 3381, 3382,21550, 3383,
    21550,21550,21550, 3384,21550, 3386, 3337, 3389, 3390,21550,
    21550,21550, 3391, 3344,21550,21550,21550, 3395,21550, 3398,
     3399,21550,21550,21550,21550,21550, 3400, 3401,21550,21550,
     3402, 3403,21550, 3404,21550, 3354,21550,21550, 3406, 3407,
     3408, 3409,21550,21550, 3410, 3411, 3412,21550,21550, 3413,
    21550,21550, 3414,21550, 3415,21550,21550,21550, 3416, 3417,
     3418,21550,21550,21550, 3419,21550,21550,21550,21550, 3420,

     3421,21550,21550, 3422,21550,21550, 3372,21550, 3424, 3425,
     3426, 3427, 3428,21550,21550,21550,21550,21550,21550, 3429,
     3430,21550,21550, 3431,21550, 3432, 3395, 3383, 3435,21550,
     3436,21550, 3375, 3438,21550, 3384,21550,21550,21550, 3440,
    21550, 3441, 3393,21550, 3392, 3444, 3445,    0, 3436, 3497,
    21550, 3498, 3499, 3500,21550, 3501,21550, 3502, 3503,    0,
     3445,    0,    0,    0, 3433, 3450, 3446,    0,    0, 3435,
     3441, 3442, 3453, 3454, 3456, 3446, 3431,    0, 3448, 3449,
        0, 3441, 3479,21550,21550,21550,21550,21550,21550,21550,
     3486,21550,21550,21550,21550,21550,21550, 3489,21550,21550,

    21550,21550,21550, 3499,21550,21550,21550, 3502,21550,21550,
    21550,21550,21550,21550,21550,21550, 3503,21550,21550,21550,
    21550,21550,21550,21550,21550,21550,21550,21550,21550,21550,
    21550,21550,21550,21550, 3504,21550,21550,21550,21550,21550,
    21550,21550,21550,21550, 3457, 3507,21550,21550, 3458,21550,
     3453,21550,21550, 3472, 3511,21550,21550,    0, 3503, 3563,
    21550, 3564,    0, 3506, 3506,    0, 3496, 3502, 3511,    0,
        0,    0, 3504,    0, 3505, 3507, 3490, 3519,21550,21550,
    21550,21550,21550,21550, 3486,21550, 3529, 3473, 3531,21550,
        0,21550,    0,    0,    0, 3524,    0, 3525, 3498, 3517,

        0, 3529, 3535,21550, 3488,21550,21550, 3531, 3532, 3507,
     3532, 3511,21550, 3494,    0,    0,    0, 3533, 3522, 3510,
     3551,    0, 3562, 3540,21550,    0,21550, 3654, 3909, 4164,
     4419, 4674, 4929, 5184, 5439, 5694, 5949, 6204, 6459, 6714,
     6969, 7224, 7479, 7734, 7989, 8244, 8435, 8690, 8898, 9153,
     9408, 9663, 9854,10045,10253,10508,10763,11018,11240,11448,
    11656,11911,12166,12421,12629,12884,13139,13394,13602,13857,
    14112,14320,14575,14830,15085,15307,15524,15732,15987,16242,
    16497,16705,16913,17168,17423,17678,17886,18094,18349,18557,
    18812,19034,19251,19506,19714,19969,20224,20479,20734,20989,

    21244
    } ;

static yyconst flex_int16_t yy_def[2002] =
    {   0,
     1928, 1928, 1927,    3, 1929, 1929, 1930, 1930, 1929, 1929,
     1931, 1931, 1932, 1932, 1933, 1933, 1934, 1934, 1935, 1935,
       20,   20, 1936, 1936,   24,   24, 1937, 1937, 1938, 1938,
     1939, 1939, 1940, 1940, 1941, 1941, 1942, 1942, 1943, 1943,
     1944, 1944, 1927, 1945, 1927, 1927, 1927, 1927, 1946, 1927,
     1947, 1927, 1927, 1948, 1927, 1927, 1927, 1927, 1927, 1927,
     1927, 1927, 1927, 1927, 1927, 1927, 1927, 1949, 1949, 1949,
     1949, 1949, 1949, 1949, 1949, 1949, 1949, 1949, 1949, 1949,
     1949, 1949, 1949, 1949, 1949, 1949, 1949, 1927, 1927, 1949,
     1950, 1927, 1951, 1927, 1927, 1927, 1952, 1927, 1927, 1927,

     1927, 1953, 1954, 1955, 1927, 1927, 1956, 1927, 1927, 1957,
     1958, 1927, 1927, 1959, 1927, 1927, 1927, 1927, 1927, 1960,
     1927, 1927, 1927, 1927, 1961, 1962, 1927, 1927, 1927, 1927,
     1927, 1927, 1927, 1927,  128, 1927, 1927, 1963, 1927, 1927,
     1927, 1927, 1927, 1927, 1964, 1927, 1927, 1927, 1927, 1927,
     1959, 1959, 1959, 1959, 1959, 1959, 1959, 1927, 1927, 1927,
     1965, 1965, 1965, 1965, 1966, 1927, 1927, 1927, 1927, 1967,
     1927, 1968, 1969, 1927, 1927, 1927, 1927, 1970, 1971, 1927,
     1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927,
     1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927,

     1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927,
     1927, 1927, 1927, 1927, 1972, 1972, 1972, 1972, 1972, 1972,
     1967, 1970, 1927, 1972, 1972, 1972, 1972, 1972, 1972, 1972,
     1972, 1972, 1972, 1972, 1972, 1972, 1972, 1972, 1972, 1972,
     1972, 1972, 1972, 1972, 1972, 1972, 1972, 1972, 1972, 1972,
     1972, 1972, 1972, 1972, 1972, 1972, 1972, 1972, 1972, 1972,
     1972, 1927, 1972, 1973, 1927, 1927, 1927, 1974, 1927, 1927,
     1975, 1927, 1927, 1927, 1976, 1977, 1978, 1927, 1979, 1927,
     1927, 1927, 1980, 1979, 1981, 1927, 1927, 1927, 1927, 1927,
     1982, 1927, 1927, 1983, 1984, 1927, 1927, 1927, 1927, 1927,

     1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927,
     1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927,
     1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927,
     1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927,
     1927, 1985, 1927, 1927, 1927, 1927, 1927, 1927, 1986, 1927,
     1927, 1987, 1987, 1987, 1987, 1987, 1987, 1987, 1988, 1988,
     1988, 1988, 1927, 1927, 1927, 1927, 1989, 1990, 1991, 1927,
     1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927,
     1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927,
     1927, 1987, 1987, 1987, 1987, 1927, 1987, 1987, 1987, 1987,

     1987, 1987, 1987, 1987, 1987, 1987, 1987, 1987, 1987, 1987,
     1987, 1987, 1987, 1987, 1987, 1987, 1987, 1987, 1987, 1987,
     1987, 1987, 1987, 1987, 1987, 1987, 1987, 1987, 1987, 1987,
     1987, 1987, 1987, 1987, 1987, 1987, 1987, 1987, 1987, 1987,
     1987, 1987, 1987, 1987, 1987, 1987, 1927, 1992, 1993, 1927,
     1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927,
     1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927,
     1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927,
     1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927,
     1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927,

     1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927,
     1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927,
     1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927,
     1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927,
     1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927,
     1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927,
     1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927,
     1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927,
     1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927,
     1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927,

     1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927,
     1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927,
     1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927,
     1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927,
     1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927, 1994,
     1927, 1987, 1987, 1987, 1987, 1987, 1987, 1987, 1995, 1995,
     1995, 1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927,
     1927, 1927, 1927, 1927, 1927, 1927, 1987, 1987, 1987, 1987,
     1987, 1987, 1987, 1987, 1987, 1987, 1987, 1987, 1987, 1987,
     1987, 1987, 1987, 1987, 1987, 1987, 1987, 1987, 1987, 1987,

     1987, 1987, 1987, 1987, 1987, 1987, 1987, 1987, 1987, 1987,
     1987, 1987, 1987, 1987, 1987, 1987, 1987, 1987, 1987, 1987,
     1987, 1987, 1987, 1987, 1987, 1987, 1987, 1987, 1987, 1987,
     1987, 1987, 1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927,
     1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927,
     1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927,
     1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927,
     1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927,
     1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927,
     1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927,

     1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927,
     1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927,
     1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927,
     1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927,
     1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927,
     1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927,
     1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927,
     1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927,
     1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927,
     1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927,

     1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927,
     1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927,
     1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927,
     1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927,
     1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927,
     1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927,
     1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927,
     1927, 1927, 1927, 1927, 1996, 1927, 1987, 1987, 1987, 1987,
     1987, 1995, 1995, 1927, 1927, 1927, 1927, 1927, 1927, 1927,
     1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927, 1987, 1987,

     1987, 1987, 1987, 1987, 1987, 1987, 1987, 1987, 1987, 1987,
     1987, 1987, 1987, 1987, 1987, 1987, 1987, 1987, 1987, 1987,
     1987, 1987, 1987, 1987, 1987, 1987, 1987, 1987, 1987, 1987,
     1987, 1987, 1987, 1987, 1987, 1987, 1987, 1987, 1987, 1987,
     1987, 1987, 1987, 1987, 1987, 1987, 1987, 1987, 1927, 1927,
     1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927,
     1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927,
     1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927,
     1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927,
     1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927,

     1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927,
     1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927,
     1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927,
     1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927,
     1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927,
     1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927,
     1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927,
     1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927,
     1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927,
     1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927,

     1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927,
     1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927,
     1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927,
     1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927,
     1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927,
     1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927,
     1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927,
     1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927,
     1927, 1927, 1927, 1927, 1927, 1927, 1927, 1997, 1927, 1987,
     1987, 1987, 1995, 1995, 1927, 1927, 1927, 1927, 1927, 1927,

     1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927,
     1927, 1987, 1987, 1987, 1987, 1987, 1987, 1987, 1987, 1987,
     1987, 1987, 1987, 1987, 1987, 1987, 1987, 1987, 1987, 1987,
     1987, 1987, 1987, 1987, 1987, 1987, 1987, 1987, 1987, 1987,
     1987, 1987, 1987, 1987, 1987, 1987, 1987, 1927, 1927, 1927,
     1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927,
     1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927,
     1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927,
     1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927,
     1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927,

     1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927,
     1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927,
     1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927,
     1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927,
     1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927,
     1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927,
     1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927,
     1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927,
     1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927,
     1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927,

     1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927,
     1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927,
     1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927,
     1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927,
     1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927,
     1927, 1927, 1927, 1998, 1927, 1987, 1995, 1927, 1927, 1927,
     1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927, 1987,
     1987, 1987, 1987, 1987, 1987, 1987, 1987, 1987, 1987, 1987,
     1987, 1987, 1987, 1987, 1987, 1987, 1987, 1987, 1987, 1987,
     1987, 1987, 1987, 1987, 1987, 1987, 1987, 1987, 1987, 1927,

     1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927,
     1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927,
     1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927,
     1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927,
     1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927,
     1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927,
     1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927,
     1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927,
     1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927,
     1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927,

     1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927,
     1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927,
     1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927,
     1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927,
     1927, 1927, 1927, 1927, 1927, 1927, 1927, 1999, 1927, 1927,
     1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927, 1987,
     1987, 1987, 1987, 1987, 1987, 1987, 1987, 1987, 1987, 1987,
     1987, 1987, 1987, 1987, 1987, 1987, 1987, 1987, 1987, 1987,
     1987, 1987, 1987, 1927, 1927, 1927, 1927, 1927, 1927, 1927,
     1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927,

     1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927,
     1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927,
     1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927,
     1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927,
     1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927,
     1927, 1927, 1927, 1927, 1927, 1927, 1927, 2000, 1927, 1927,
     1927, 1927, 1987, 1987, 1987, 1987, 1987, 1987, 1987, 1987,
     1987, 1987, 1987, 1987, 1987, 1987, 1987, 1987, 1927, 1927,
     1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927,
     2001, 1927, 1987, 1987, 1987, 1987, 1987, 1987, 1987, 1987,

     1987, 1987, 1927, 1927, 1927, 1927, 1927, 1987, 1987, 1987,
     1987, 1987, 1927, 1927, 1987, 1987, 1987, 1987, 1987, 1927,
     1987, 1987, 1927, 1987, 1927, 1987,    0, 1927, 1927, 1927,
     1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927,
     1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927,
     1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927,
     1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927,
     1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927,
     1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927,
     1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927,

     1927
    } ;

static yyconst flex_int16_t yy_nxt[21807] =
    {   0,
       46,   46,   46,   46,   46,   46,   46,   46,   47,   47,
       46,   46,   47,   46,   46,   46,   46,   46,   46,   46,
       46,   46,   46,   46,   46,   46,   46,   46,   46,   46,
       46,   47,   48,   49,   50,   51,   52,   53,   54,   55,
       46,   56,   57,   46,   58,   59,   60,   61,   62,   62,
       62,   62,   62,   62,   62,   62,   62,   63,   46,   64,
       65,   66,   67,   46,   68,   69,   70,   71,   72,   73,
       74,   75,   76,   75,   75,   77,   75,   78,   79,   80,
       75,   81,   82,   83,   84,   85,   86,   87,   75,   75,
       46,   88,   46,   89,   90,   91,   68,   69,   70,   71,

       72,   73,   74,   75,   76,   75,   75,   77,   75,   78,
       79,   80,   75,   81,   82,   83,   84,   85,   86,   87,
       75,   75,   46,   92,   46,   46,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,

       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   94,   94,   98,   95,   95,
       99,   98,   94,   94,   99,   95,   95,  105,  105,  112,
      106,  106,  113,  112,  121,  122,  113,  166,  121,  121,
      122,  143,  144,  121,  176,  143,  206,   96,   96,  143,
      144,  174,  175,  143,  101,  101,  825,  121,  826,  207,

      208,  209,  121,  167,  143,  210,  211,  177,  212,  213,
      100, 1264,  143, 1265,  100,   46,   46,   46,   46,   46,
       46,   46,   46,   46,   46,   46,   46,   46,   46,   46,
       46,   46,   46,   46,   46,   46,   46,   46,   46,   46,
       46,   46,   46,   46,   46,   46,   46,   46,  102,   46,
       46,   46,   46,  103,   46,   46,   46,   46,   46,   46,
       46,   46,   46,   46,   46,   46,   46,   46,   46,   46,
       46,   46,   46,   46,   46,   46,   46,   46,   46,  168,
      168,  171,  191,  168,  246,  249,  252,  193,  196,  196,
      196,  196,  196,  196,  196,  196,  196,  196,  259,  260,

      192,  197,  168,  194,  195,   46,   46,   46,   46,  198,
       46, 1414,  286,  795,  199,  287,  246,  249,  252,  350,
      208,  209,  198,  386,  387,  796,  390,  199,  200,  391,
      259,  260,  281,  286,  179,  282,  287,   46,   46,   46,
       46,   46,   46,   46,   46,   46,   46,   46,   46,   46,
       46,   46,   46,   46,   46,   46,   46,   46,   46,   46,
       46,   46,   46,   46,   46,   46,   46,   46,   46,   46,
       46,   46,   46,   46,  102,   46,   46,   46,   46,  103,
       46,   46,   46,   46,   46,   46,   46,   46,   46,   46,
       46,   46,   46,   46,   46,   46,   46,   46,   46,   46,

       46,   46,   46,   46,   46,  201,  216,  202,  202,  202,
      202,  202,  202,  202,  202,  202,  202,  229,  217,  261,
      255,  247,  218,  219,  220,  248,  240,  230,  203,  241,
      256,   46,   46,   46,   46,  461,   46,  463,  216,  496,
      462,  464,  481,  482,  770,  497,  955,  956,  771,  229,
      217,  261,  255,  247,  218,  219,  220,  248,  240,  230,
      203,  241,  256,   46,   46,   46,   46,  107,  107,  107,
      107,  107,  107,  107,  107,  107,  108,  107,  107,  109,
      107,  107,  107,  107,  107,  107,  107,  107,  107,  107,
      107,  107,  107,  107,  107,  107,  107,  107,  107,  107,

      107,  107,  107,  107,  107,  107,  107,  107,  107,  107,
      107,  107,  107,  107,  107,  107,  107,  107,  107,  107,
      107,  107,  107,  107,  107,  107,  107,  107,  107,  107,
      107,  225,  250,  351,  237,  251,  242,  360,  226,  361,
      238,  362,  227,  243,  244,  228,  239,  253,  257,  245,
      254,  370,  373,  258,  374,  375,  376,  107,  107,  107,
      107, 1415,  107,  225,  250,  351,  237,  251,  242,  360,
      226,  361,  238,  362,  227,  243,  244,  228,  239,  253,
      257,  245,  254,  370,  373,  258,  374,  375,  376,  107,
      107,  107,  107,  107,  107,  107,  107,  107,  107,  107,

      107,  107,  108,  107,  107,  109,  107,  107,  107,  107,
      107,  107,  107,  107,  107,  107,  107,  107,  107,  107,
      107,  107,  107,  107,  107,  107,  107,  107,  107,  107,
      107,  107,  107,  107,  107,  107,  107,  107,  107,  107,
      107,  107,  107,  107,  107,  107,  107,  107,  107,  107,
      107,  107,  107,  107,  107,  107,  107,  231,  288,  288,
      364, 1416,  288, 1417,  221,  377,  232,  233,  234,  222,
      288,  288,  378,  379,  288,  385,  235,  392,  236,  365,
      393,  288,  507,  107,  107,  107,  107,  842,  107,  231,
      223,  292,  292,  288,  843,  292,  830,  377,  232,  233,

      234,  831,  508,  802,  378,  379,  803,  385,  235,  392,
      236,  365,  393, 1418,  292,  107,  107,  107,  107,   46,
       46,   46,   46,   46,   46,   46,   46,   47,   47,   46,
       46,   47,   46,   46,   46,   46,   46,   46,   46,   46,
       46,   46,   46,   46,   46,   46,   46,   46,   46,   46,
       47,   48,   49,   50,   51,   52,   53,   54,   55,   46,
       56,   57,   46,   58,   59,   60,   61,   62,   62,   62,
       62,   62,   62,   62,   62,   62,   63,   46,   64,   65,
       66,   67,   46,  171,  114,  292,  292,  394,  881,  292,
      293,  293,  343,  343,  293,  395,  343,  348,  348,  348,

      348,  348,  397,  348,  882,  398,  399,  400,  292,   46,
       88,   46,   89,  293,   91,  343,  114,  168,  168,  394,
      348,  168,  348,  815,  549,  550,  819,  395,  551, 1419,
      844, 1420,  820,  816,  397,  845,  179,  398,  399,  400,
      168,   46,   92,   46,   46,   46,   46,   46,   46,   46,
       46,   46,   46,   47,   47,   46,   46,   47,   46,   46,
       46,   46,   46,   46,   46,   46,   46,   46,   46,   46,
       46,   46,   46,   46,   46,   46,   47,   48,   49,   50,
       51,   52,   53,   54,   55,   46,   56,   57,   46,   58,
       59,   60,   61,   62,   62,   62,   62,   62,   62,   62,

       62,   62,   63,   46,   64,   65,   66,   67,   46,  371,
      114,  382,  171,  382,  401,  372,  383,  383,  383,  383,
      383,  383,  383,  383,  383,  383,  403,  404,  402,  406,
      405,  407,  408,  647,  409,   46,   88,   46,   89,  799,
       91,  371,  114,  491,  492,  828,  401,  372, 1212,  837,
      800,  648,  838,  493,  494, 1213,  829, 1421,  403,  404,
      402,  406,  405,  407,  408,  179,  409,   46,   92,   46,
       46,  115,  115,  115,  115,  115,  115,  115,  115,  116,
      117,  115,  115,  116,  115,  115,  115,  115,  115,  115,
      115,  115,  115,  115,  115,  115,  115,  115,  115,  115,

      115,  115,  116,  115,  115,  115,  115,  115,  115,  115,
      115,  115,  115,  115,  115,  118,  115,  115,  115,  115,
      115,  115,  115,  115,  115,  115,  115,  115,  119,  115,
      115,  115,  115,  115,  115,  196,  196,  196,  196,  196,
      196,  196,  196,  196,  196,  410,  411,  413,  414,  415,
      416,  417,  418,  422,  423,  424,  203,  412,  425,  428,
      431,  115,  115,  115,  115, 1422,  115,  383,  383,  383,
      383,  383,  383,  383,  383,  383,  383,  410,  411,  413,
      414,  415,  416,  417,  418,  422,  423,  424,  203,  412,
      425,  428,  431,  115,  115,  115,  115,  115,  115,  115,

      115,  115,  115,  115,  115,  116,  117,  115,  115,  116,
      115,  115,  115,  115,  115,  115,  115,  115,  115,  115,
      115,  115,  115,  115,  115,  115,  115,  115,  116,  115,
      115,  115,  115,  115,  115,  115,  115,  115,  115,  115,
      115,  118,  115,  115,  115,  115,  115,  115,  115,  115,
      115,  115,  115,  115,  119,  115,  115,  115,  115,  115,
      115,  381,  381,  381,  381,  381,  381,  381,  381,  381,
      381,  426,  429,  432,  433,  430,  434,  427,  435,  436,
      437,  438,  203,  439,  522,  523,  862,  115,  115,  115,
      115,  855,  115,  288,  288,  292,  292,  288,  524,  292,

      863,  525,  856,  426,  429,  432,  433,  430,  434,  427,
      435,  436,  437,  438,  203,  439,  288, 1423,  292,  115,
      115,  115,  115,   46,   46,   46,   46,   46,   46,   46,
       46,  123,  123,   46,   46,  123,   46,   46,   46,   46,
       46,   46,   46,   46,   46,   46,   46,   46,   46,   46,
       46,   46,   46,   46,  123,   46,   46,   46,   46,   46,
       46,   46,   46,   46,   46,   46,   46,   46,   46,  124,
       46,   46,   46,   46,   46,   46,   46,   46,   46,   46,
       46,   46,   46,  124,  124,   46,   46,  201,  419,  202,
      202,  202,  202,  202,  202,  202,  202,  202,  202,  293,

      293,  498,  959,  293,  420,  421,  465, 1424,  552,  651,
      203,  652,  553,   46,   46,   46,   46,  960,   46,  466,
      419,  467,  293,  631,  644,  468,  499,  554,  645,  878,
      632,  633,  879,  500,  469, 1425,  420,  421,  470,  471,
      634,  651,  203,  652,  646,   46,   46,   46,   46,   46,
       46,   46,   46,   46,   46,   46,   46,  123,  123,   46,
       46,  123,   46,   46,   46,   46,   46,   46,   46,   46,
       46,   46,   46,   46,   46,   46,   46,   46,   46,   46,
      123,   46,   46,   46,   46,   46,   46,   46,   46,   46,
       46,   46,   46,   46,   46,  124,   46,   46,   46,   46,

       46,   46,   46,   46,   46,   46,   46,   46,   46,  124,
      124,   46,   46,  555,  653,  654,  266,  127,  171,  127,
     1426,  128,  129,  128,  129,  132,  133,  132,  132,  134,
      132,  133,  132,  132,  134,  171,  171,  832,  915,   46,
       46,   46,   46,  171,   46,  556,  653,  654,  132,  557,
      171,  907,  221,  132,  135,  136,  655,  222,  833,  135,
      136,  139,  139,   46,   46,  139,  139,  139,   46,   46,
      139,   46,   46,   46,   46,  130,  172,  130,  223,  267,
     1927,  180,  344,  344,  139, 1927,  344, 1427,  655,  139,
      128,  129,  908,  172,  172,  128,  129,  916, 1428,  535,

      224,  172,  656,  179,  180,  344, 1927, 1429,  137, 1430,
     1927,  657,  140,  137,   46, 1927, 1431,  140,  201,   46,
      202,  202,  202,  202,  202,  202,  202,  202,  202,  202,
      357,  536,  224,  345,  656,  537, 1927,  181,  182,  538,
      183,  203,  184,  657,  130,  185,  501,  919,  502,  130,
      658,  186,  503,  920,  187,  188,  659,  189,  352, 1432,
      204,  504,  357,  452, 1433,  473,  505,  474,  660,  181,
      182,  475,  183,  203,  184,  141,  132,  185,  676,  476,
      141,  132,  658,  186,  661,  477,  187,  188,  659,  189,
      352,  453,  204,  454, 1227,  579,  346,  455,  580, 1434,

      660,  676,  456,  581,  821,  822, 1228,  823,  457,  904,
      458,  459,   46,  905, 1435,  582,  661,   46,   46,   46,
       46,   46,   46,   46,   46,   46,   47,   47,   46,   46,
       47,   46,   46,   46,   46,   46,   46,   46,   46,   46,
       46,   46,   46,   46,   46,   46,   46,   46,   46,   47,
       48,   49,   50,   51,  146,   53,   54,  147,   46,   56,
       57,   46,   58,   59,   60,   61,   62,   62,   62,   62,
       62,   62,   62,   62,   62,  148,   46,  149,   65,   66,
       46,  150,  151,  152,  662,  663,  153,  154,  440,  441,
      155,  442, 1254,  443,  664,  665,  666,  444,  445,  446,

      156,  343,  343,  157,  667,  343,  668,  669,   46,   88,
       46,   89, 1436,   91,  151,  152,  662,  663,  153,  154,
      440,  441,  155,  442,  343,  443,  664,  665,  666,  444,
      445,  446,  156,  973, 1255,  157,  667,  974,  668,  669,
       46,   92,   46,   46,   46,   46,   46,   46,   46,   46,
       46,   46,   47,   47,   46,   46,   47,   46,   46,   46,
       46,   46,   46,   46,   46,   46,   46,   46,   46,   46,
       46,   46,   46,   46,   46,   47,   48,   49,   50,   51,
      146,   53,   54,  147,   46,   56,   57,   46,   58,   59,
       60,   61,   62,   62,   62,   62,   62,   62,   62,   62,

       62,  148,   46,  149,   65,   66,   46,  150,  151,  152,
      603,  670,  153,  154,  604,  671,  155,  605,  606,  343,
      343,  607,  672,  343,  608,  675,  156,  609,  610,  157,
      677,  678,  673,  679,   46,   88,   46,   89, 1437,   91,
      151,  152,  343,  670,  153,  154, 1438,  671,  155,  886,
      887,  870,  871,  930,  672,  872,  873,  675,  156,  931,
      888,  157,  677,  678,  673,  679,   46,   92,   46,   46,
       46,   46,   46,   46,   46,   46,   46,   46,   47,   47,
       46,   46,   47,   46,   46,   46,   46,   46,   46,   46,
       46,   46,   46,   46,   46,   46,   46,   46,   46,   46,

       46,   47,   46,   46,   50,   46,   46,   46,   46,   46,
       46,   46,   46,   46,   46,   46,  158,   46,   46,   46,
       46,   46,   46,   46,   46,   46,   46,  159,  160,   46,
       46,   46,   46,   46,  161,  539,  680,  540,  163,  483,
      681,  541,  682, 1439,  683,  684,  685,  542,  543,  164,
      544,  545,  348,  348,  546,  547,  348,  686,  548,  689,
       46,   46,   46,   46,  935,   46,  161,  484,  680,  485,
      163, 1218,  681,  486,  682,  348,  683,  684,  685,  487,
      936,  164,  942, 1215, 1216,  488,  489,  490,  943,  686,
     1219,  689,   46,   46,   46,   46,   46,   46,   46,   46,

       46,   46,   46,   46,   47,   47,   46,   46,   47,   46,
       46,   46,   46,   46,   46,   46,   46,   46,   46,   46,
       46,   46,   46,   46,   46,   46,   46,   47,   46,   46,
       50,   46,   46,   46,   46,   46,   46,   46,   46,   46,
       46,   46,  158,   46,   46,   46,   46,   46,   46,   46,
       46,   46,   46,  159,  160,   46,   46,   46,   46,   46,
      161,  510,  690,  511,  163,  512, 1220,  513, 1160, 1221,
     1440,  946,  514,  515,  516,  164,  517, 1441,  518,  519,
      520,  521,  947,  963, 1161,  948,   46,   46,   46,   46,
     1444,   46,  161,  964,  690, 1445,  163,  450,  450,  450,

      450,  450,  450,  450,  450,  450,  450,  164,  383,  383,
      383,  383,  383,  383,  383,  383,  383,  383,   46,   46,
       46,   46,  279,  279,  279,  279,  279,  279,  279,  279,
      279,  281,  279,  279,  282,  279,  279,  279,  279,  279,
      279,  279,  279,  279,  279,  279,  279,  279,  279,  279,
      279,  279,  279,  279,  279,  279,  279,  279,  279,  279,
      279,  279,  279,  279,  279,  279,  279,  279,  279,  451,
     1446,  674,  674,  221,  691,  674,  687,  688,  222,  279,
      284,  279,  279,  279,  279,  279, 1447, 1200,  692,  693,
     1927, 1448,  699, 1927,  674, 1927, 1927, 1927, 1927, 1927,

      700, 1927, 1927,  676,  701,  635,  691, 1449,  687,  688,
      702, 1450,  279,  279,  279,  279, 1927,  279,  353, 1927,
      692,  693, 1927, 1927,  699, 1442,  676, 1443,  358,  703,
     1451,  704,  700, 1201,  354,  355,  701,  636,  705,  637,
      356,  706,  702,  638,  279,  279,  279,  279,  296,  639,
      353,  526,  640,  527, 1452,  528, 1453,  641,  529,  530,
      358,  703,  531,  704, 1454,  532,  354,  355,  533, 1455,
      705,  534,  356,  706, 1456,  707,  708,  709,  297,  298,
      299,  300,  301,  180,  302, 1457,  303,  710,  304,  305,
      306,  307,  308,  309, 1458,  310,  311,  312,  313,  711,

     1459,  314,  315,  316,  712,  713,  180,  707,  708,  709,
      317,  318,  319,  320,  321,  322,  323,  324,  325,  710,
      326,  327,  328,  329,  330,  331,  332,  333,  334,  335,
      336,  711,  337,  338,  339,  340,  712,  713, 1460,  181,
      182,  716,  183,  714,  184,  717,  718,  185,  558, 1461,
      559,  715,  560,  186,  561,  719,  187,  188, 1462,  189,
      562,  563,  564, 1463,  565, 1464,  566, 1465,  567, 1466,
      569,  181,  182,  716,  183,  714,  184,  717,  718,  185,
      344,  344, 1467,  715,  344,  186,  720,  719,  187,  188,
      612,  189,  384,  384,  384,  384,  384,  384,  384,  384,

      384,  384,  570,  344,  571,  572,  573,  574, 1468,  384,
      384,  384,  384,  384,  384, 1469,  575, 1470,  720,  576,
      577,  578,  613, 1471,  614,  615,  616,  617, 1472,  618,
     1473,  345, 1474,  619, 1475, 1476, 1477, 1478, 1479, 1480,
      620,  384,  384,  384,  384,  384,  384,  279,  279,  279,
      279,  279,  279,  279,  279,  279,  281,  279,  279,  282,
      279,  279,  279,  279,  279,  279,  279,  279,  279,  279,
      279,  279,  279,  279,  279,  279,  279,  279,  279,  279,
      279,  279,  279,  279,  279,  279,  279,  279,  279,  279,
      279,  279,  279,  279,  346,  721,  722, 1481, 1482, 1483,

      723,  724,  725,  726,  279,  284,  279,  279,  279,  279,
      279,  583,  584, 1484,  585,  586,  729,  730, 1485,  587,
     1486, 1487,  731,  732, 1488,  588, 1489,  721,  722,  589,
      590,  591,  723,  724,  725,  726,  976,  279,  279,  279,
      279,  592,  279,  593, 1490,  594,  977,  595,  729,  730,
      727,  978,  596,  597,  731,  732,  598,  979,  599,  600,
      601,  602,  728,  980,  981, 1491, 1492, 1493,  976,  279,
      279,  279,  279,  621,  622,  623,  624, 1494,  977,  625,
      626, 1495,  727,  978, 1496,  627, 1497,  628, 1498,  979,
      982, 1499,  629, 1500,  728,  980,  981,  630,  381,  381,

      381,  381,  381,  381,  381,  381,  381,  381,  384,  384,
      384,  384,  384,  384,  384,  384,  384,  384,  694,  203,
      695,  924,  982,  696,  983,  384,  384,  384,  384,  384,
      384,  925,  984,  697,  926,  927,  985,  698,  450,  450,
      450,  450,  450,  450,  450,  450,  450,  450,  986,  733,
      694,  203,  695,  987,  988,  696,  983,  384,  384,  384,
      384,  384,  384,  989,  984,  697,  993,  994,  985,  698,
      734,  734,  734,  734,  734,  734,  734,  734,  734,  734,
      986,  990,  995,  996,  997,  987,  988,  734,  734,  734,
      734,  734,  734,  951,  998,  989,  999,  952,  993,  994,

     1000, 1001, 1002,  953,  990, 1003,  674,  674, 1004,  954,
      674, 1005, 1006,  991,  995,  996,  997, 1007, 1008,  734,
      734,  734,  734,  734,  734, 1009,  998, 1010,  999,  674,
     1011, 1012, 1000, 1001, 1002, 1013, 1014, 1003, 1015, 1016,
     1004,  992, 1017, 1005, 1006, 1018, 1019, 1020, 1021, 1007,
     1008, 1022, 1023, 1024, 1025, 1026, 1027, 1009, 1028, 1010,
     1029, 1030, 1011, 1012, 1031, 1032, 1033, 1013, 1014, 1034,
     1015, 1016, 1035,  992, 1017, 1036, 1037, 1018, 1019, 1020,
     1021, 1038, 1039, 1022, 1023, 1024, 1025, 1026, 1027, 1040,
     1028, 1041, 1029, 1030, 1042, 1043, 1031, 1032, 1033, 1044,

     1045, 1034, 1046, 1047, 1035, 1048, 1501, 1036, 1037, 1257,
     1258, 1259, 1502, 1038, 1039, 1503, 1289, 1504, 1290, 1260,
     1291, 1040, 1292, 1041, 1505, 1506, 1042, 1043, 1507, 1508,
     1293, 1044, 1045, 1294, 1046, 1047, 1297, 1048,  734,  734,
      734,  734,  734,  734,  734,  734,  734,  734, 1289, 1049,
     1290, 1298, 1291, 1299, 1292,  734,  734,  734,  734,  734,
      734, 1261, 1293, 1295, 1295, 1294, 1302, 1296, 1297, 1303,
      990, 1304, 1305, 1306, 1308, 1309, 1299, 1310, 1311, 1312,
     1313, 1509, 1314, 1298, 1315, 1300, 1295,  734,  734,  734,
      734,  734,  734,  990, 1316, 1317, 1306, 1318, 1302, 1319,

     1320, 1303,  991, 1304, 1305, 1307, 1308, 1309, 1321, 1310,
     1311, 1312, 1313, 1301, 1314, 1322, 1315, 1323, 1324, 1325,
     1326, 1327, 1328, 1329, 1330, 1331, 1316, 1317, 1332, 1318,
     1333, 1319, 1320, 1334, 1335, 1336, 1337, 1338, 1339, 1340,
     1321, 1342, 1343, 1344, 1345, 1301, 1346, 1322, 1347, 1323,
     1324, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1510, 1511,
     1332, 1512, 1333, 1513, 1514, 1334, 1335, 1336, 1337, 1338,
     1339, 1340, 1515, 1342, 1343, 1344, 1345, 1516, 1346, 1517,
     1347, 1518, 1519, 1520, 1521, 1522, 1523, 1525, 1526, 1527,
     1528, 1529, 1530, 1524, 1531, 1532, 1533, 1534, 1535, 1536,

     1537, 1538, 1539, 1540, 1541, 1542, 1543, 1544, 1545, 1546,
     1548, 1549, 1550, 1547, 1551, 1552, 1553, 1555, 1556, 1557,
     1295, 1558, 1560, 1299, 1561, 1562, 1563, 1564, 1593, 1306,
     1565, 1566, 1594, 1569, 1570, 1571, 1572, 1306, 1573, 1574,
     1575, 1567, 1576, 1577, 1558, 1578, 1299, 1579, 1580, 1555,
     1556, 1557, 1306, 1559, 1560, 1300, 1561, 1562, 1563, 1564,
     1306, 1307, 1565, 1566, 1567, 1569, 1570, 1571, 1572, 1307,
     1573, 1574, 1575, 1568, 1576, 1577, 1581, 1578, 1582, 1579,
     1580, 1583, 1584, 1585, 1586, 1587, 1588, 1589, 1590, 1591,
     1592, 1595, 1596, 1597, 1598, 1599, 1600, 1601, 1602, 1603,

     1604, 1605, 1606, 1607, 1608, 1609, 1610, 1611, 1581, 1612,
     1582, 1613, 1614, 1583, 1584, 1585, 1586, 1587, 1588, 1589,
     1590, 1591, 1592, 1595, 1615, 1616, 1598, 1599, 1617, 1618,
     1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628,
     1629, 1630, 1631, 1632, 1633, 1634, 1635, 1636, 1637, 1638,
     1639, 1640, 1641, 1642, 1643, 1644, 1645, 1646, 1647, 1648,
     1649, 1650, 1651, 1652, 1653, 1654, 1655, 1656, 1657, 1658,
     1659, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1668,
     1669, 1670, 1672, 1671, 1673, 1674, 1675, 1676, 1677, 1678,
     1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688,

     1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698,
     1699, 1700, 1701, 1702, 1703, 1704, 1705, 1706, 1707, 1708,
     1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718,
     1719, 1720, 1721, 1722, 1723, 1724, 1725, 1727, 1728, 1729,
     1730, 1731, 1732, 1734, 1735, 1736, 1737, 1738, 1739, 1740,
     1741, 1742, 1743, 1744, 1745, 1746, 1747, 1749, 1558, 1750,
     1752, 1306, 1753, 1754, 1756, 1758, 1771, 1776, 1759, 1760,
     1761, 1762, 1763, 1764, 1765, 1766, 1567, 1767, 1768, 1726,
     1769, 1558, 1750, 1770, 1306, 1772, 1754, 1756, 1773, 1749,
     1559, 1751, 1752, 1307, 1753, 1755, 1757, 1758, 1733, 1567,

     1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1568, 1767,
     1768, 1774, 1769, 1775, 1777, 1770, 1778, 1772, 1779, 1780,
     1773, 1781, 1782, 1783, 1784, 1785, 1786, 1787, 1788, 1789,
     1790, 1791, 1792, 1793, 1794, 1795, 1796, 1797, 1798, 1799,
     1800, 1801, 1802, 1774, 1803, 1775, 1804, 1805, 1806, 1807,
     1779, 1780, 1808, 1809, 1782, 1783, 1810, 1811, 1812, 1813,
     1814, 1815, 1816, 1817, 1818, 1819, 1820, 1821, 1822, 1823,
     1824, 1825, 1826, 1827, 1828, 1829, 1830, 1831, 1832, 1833,
     1834, 1835, 1836, 1837, 1838, 1839, 1840, 1841, 1842, 1843,
     1844, 1845, 1846, 1847, 1848, 1849, 1850, 1851, 1852, 1853,

     1854, 1855, 1856, 1857, 1859, 1750, 1299,  990, 1754, 1756,
     1860, 1862, 1862, 1863, 1864, 1862, 1865, 1866, 1867, 1868,
     1869, 1870, 1871, 1872, 1873, 1874, 1875, 1876, 1750, 1299,
      990, 1754, 1756, 1860, 1862, 1877, 1859, 1751, 1300,  991,
     1755, 1757, 1861, 1878, 1879, 1863, 1864, 1880, 1865, 1866,
     1867, 1868, 1869, 1870, 1871, 1872, 1873, 1881, 1875, 1876,
     1882, 1883, 1884, 1885,  214, 1886, 1887, 1888, 1889, 1890,
     1892, 1860, 1862, 1862, 1893, 1878, 1862, 1894, 1895, 1896,
     1897, 1898, 1899, 1900, 1901, 1902, 1903, 1904, 1905, 1906,
     1908, 1909, 1910, 1913, 1860, 1862, 1911, 1912, 1914, 1915,

     1916, 1917, 1892, 1861, 1918, 1919, 1893, 1920, 1921, 1894,
     1895, 1896, 1897, 1898, 1899, 1900, 1922, 1902, 1923, 1924,
     1925, 1926, 1908, 1909, 1413,  214, 1412, 1411, 1911, 1912,
     1410, 1915, 1916, 1409, 1408, 1407, 1918, 1406, 1405, 1404,
     1921, 1403, 1402, 1401, 1400, 1399, 1398, 1397, 1396, 1395,
     1394, 1924, 1393, 1926,   44,   44,   44,   44,   44,   44,
       44,   44,   44,   44,   44,   44,   44,   44,   44,   44,
       44,   44,   44,   44,   44,   44,   44,   44,   44,   44,
       44,   44,   44,   44,   44,   44,   44,   44,   44,   44,
       44,   44,   44,   44,   44,   44,   44,   44,   44,   44,

       44,   44,   44,   44,   44,   44,   44,   44,   44,   44,
       44,   44,   44,   44,   44,   44,   44,   44,   44,   44,
       44,   44,   44,   44,   44,   44,   44,   44,   44,   44,
       44,   44,   44,   44,   44,   44,   44,   44,   44,   44,
       44,   44,   44,   44,   44,   44,   44,   44,   44,   44,
       44,   44,   44,   44,   44,   44,   44,   44,   44,   44,
       44,   44,   44,   44,   44,   44,   44,   44,   44,   44,
       44,   44,   44,   44,   44,   44,   44,   44,   44,   44,
       44,   44,   44,   44,   44,   44,   44,   44,   44,   44,
       44,   44,   44,   44,   44,   44,   44,   44,   44,   44,

       44,   44,   44,   44,   44,   44,   44,   44,   44,   44,
       44,   44,   44,   44,   44,   44,   44,   44,   44,   44,
       44,   44,   44,   44,   44,   44,   44,   44,   44,   44,
       44,   44,   44,   44,   44,   44,   44,   44,   44,   44,
       44,   44,   44,   44,   44,   44,   44,   44,   44,   44,
       44,   44,   44,   44,   44,   44,   44,   44,   44,   44,
       44,   44,   44,   44,   44,   44,   44,   44,   44,   44,
       44,   44,   44,   44,   44,   44,   44,   44,   44,   44,
       44,   44,   44,   44,   44,   44,   44,   44,   44,   44,
       44,   44,   44,   44,   44,   44,   44,   44,   44,   44,

       44,   44,   44,   44,   44,   44,   44,   44,   44,   93,
       93,   93,   93,   93,   93,   93,   93,   93,   93,   93,
       93,   93,   93,   93,   93,   93,   93,   93,   93,   93,
       93,   93,   93,   93,   93,   93,   93,   93,   93,   93,
       93,   93,   93,   93,   93,   93,   93,   93,   93,   93,
       93,   93,   93,   93,   93,   93,   93,   93,   93,   93,
       93,   93,   93,   93,   93,   93,   93,   93,   93,   93,
       93,   93,   93,   93,   93,   93,   93,   93,   93,   93,
       93,   93,   93,   93,   93,   93,   93,   93,   93,   93,
       93,   93,   93,   93,   93,   93,   93,   93,   93,   93,

       93,   93,   93,   93,   93,   93,   93,   93,   93,   93,
       93,   93,   93,   93,   93,   93,   93,   93,   93,   93,
       93,   93,   93,   93,   93,   93,   93,   93,   93,   93,
       93,   93,   93,   93,   93,   93,   93,   93,   93,   93,
       93,   93,   93,   93,   93,   93,   93,   93,   93,   93,
       93,   93,   93,   93,   93,   93,   93,   93,   93,   93,
       93,   93,   93,   93,   93,   93,   93,   93,   93,   93,
       93,   93,   93,   93,   93,   93,   93,   93,   93,   93,
       93,   93,   93,   93,   93,   93,   93,   93,   93,   93,
       93,   93,   93,   93,   93,   93,   93,   93,   93,   93,

       93,   93,   93,   93,   93,   93,   93,   93,   93,   93,
       93,   93,   93,   93,   93,   93,   93,   93,   93,   93,
       93,   93,   93,   93,   93,   93,   93,   93,   93,   93,
       93,   93,   93,   93,   93,   93,   93,   93,   93,   93,
       93,   93,   93,   93,   93,   93,   93,   93,   93,   93,
       93,   93,   93,   93,   93,   93,   93,   93,   93,   93,
       93,   93,   93,   93,   97,   97,   97,   97,   97,   97,
       97,   97,   97,   97,   97,   97,   97,   97,   97,   97,
       97,   97,   97,   97,   97,   97,   97,   97,   97,   97,
       97,   97,   97,   97,   97,   97,   97,   97,   97,   97,

       97,   97,   97,   97,   97,   97,   97,   97,   97,   97,
       97,   97,   97,   97,   97,   97,   97,   97,   97,   97,
       97,   97,   97,   97,   97,   97,   97,   97,   97,   97,
       97,   97,   97,   97,   97,   97,   97,   97,   97,   97,
       97,   97,   97,   97,   97,   97,   97,   97,   97,   97,
       97,   97,   97,   97,   97,   97,   97,   97,   97,   97,
       97,   97,   97,   97,   97,   97,   97,   97,   97,   97,
       97,   97,   97,   97,   97,   97,   97,   97,   97,   97,
       97,   97,   97,   97,   97,   97,   97,   97,   97,   97,
       97,   97,   97,   97,   97,   97,   97,   97,   97,   97,

       97,   97,   97,   97,   97,   97,   97,   97,   97,   97,
       97,   97,   97,   97,   97,   97,   97,   97,   97,   97,
       97,   97,   97,   97,   97,   97,   97,   97,   97,   97,
       97,   97,   97,   97,   97,   97,   97,   97,   97,   97,
       97,   97,   97,   97,   97,   97,   97,   97,   97,   97,
       97,   97,   97,   97,   97,   97,   97,   97,   97,   97,
       97,   97,   97,   97,   97,   97,   97,   97,   97,   97,
       97,   97,   97,   97,   97,   97,   97,   97,   97,   97,
       97,   97,   97,   97,   97,   97,   97,   97,   97,   97,
       97,   97,   97,   97,   97,   97,   97,   97,   97,   97,

       97,   97,   97,   97,   97,   97,   97,   97,   97,   97,
       97,   97,   97,   97,   97,   97,   97,   97,   97,  104,
      104,  104,  104,  104,  104,  104,  104,  104,  104,  104,
      104,  104,  104,  104,  104,  104,  104,  104,  104,  104,
      104,  104,  104,  104,  104,  104,  104,  104,  104,  104,
      104,  104,  104,  104,  104,  104,  104,  104,  104,  104,
      104,  104,  104,  104,  104,  104,  104,  104,  104,  104,
      104,  104,  104,  104,  104,  104,  104,  104,  104,  104,
      104,  104,  104,  104,  104,  104,  104,  104,  104,  104,
      104,  104,  104,  104,  104,  104,  104,  104,  104,  104,

      104,  104,  104,  104,  104,  104,  104,  104,  104,  104,
      104,  104,  104,  104,  104,  104,  104,  104,  104,  104,
      104,  104,  104,  104,  104,  104,  104,  104,  104,  104,
      104,  104,  104,  104,  104,  104,  104,  104,  104,  104,
      104,  104,  104,  104,  104,  104,  104,  104,  104,  104,
      104,  104,  104,  104,  104,  104,  104,  104,  104,  104,
      104,  104,  104,  104,  104,  104,  104,  104,  104,  104,
      104,  104,  104,  104,  104,  104,  104,  104,  104,  104,
      104,  104,  104,  104,  104,  104,  104,  104,  104,  104,
      104,  104,  104,  104,  104,  104,  104,  104,  104,  104,

      104,  104,  104,  104,  104,  104,  104,  104,  104,  104,
      104,  104,  104,  104,  104,  104,  104,  104,  104,  104,
      104,  104,  104,  104,  104,  104,  104,  104,  104,  104,
      104,  104,  104,  104,  104,  104,  104,  104,  104,  104,
      104,  104,  104,  104,  104,  104,  104,  104,  104,  104,
      104,  104,  104,  104,  104,  104,  104,  104,  104,  104,
      104,  104,  104,  104,  104,  104,  104,  104,  104,  104,
      104,  104,  104,  104,   46,   46,   46,   46,   46,   46,
       46,   46,   46,   46,   46,   46,   46,   46,   46,   46,
       46,   46,   46,   46,   46,   46,   46,   46,   46,   46,

       46,   46,   46,   46,   46,   46,   46,   46,   46,   46,
       46,   46,   46,   46,   46,   46,   46,   46,   46,   46,
       46,   46,   46,   46,   46,   46,   46,   46,   46,   46,
       46,   46,   46,   46,   46,   46,   46,   46,   46,   46,
       46,   46,   46,   46,   46,   46,   46,   46,   46,   46,
       46,   46,   46,   46,   46,   46,   46,   46,   46,   46,
       46,   46,   46,   46,   46,   46,   46,   46,   46,   46,
       46,   46,   46,   46,   46,   46,   46,   46,   46,   46,
       46,   46,   46,   46,   46,   46,   46,   46,   46,   46,
       46,   46,   46,   46,   46,   46,   46,   46,   46,   46,

       46,   46,   46,   46,   46,   46,   46,   46,   46,   46,
       46,   46,   46,   46,   46,   46,   46,   46,   46,   46,
       46,   46,   46,   46,   46,   46,   46,   46,   46,   46,
       46,   46,   46,   46,   46,   46,   46,   46,   46,   46,
       46,   46,   46,   46,   46,   46,   46,   46,   46,   46,
       46,   46,   46,   46,   46,   46,   46,   46,   46,   46,
       46,   46,   46,   46,   46,   46,   46,   46,   46,   46,
       46,   46,   46,   46,   46,   46,   46,   46,   46,   46,
       46,   46,   46,   46,   46,   46,   46,   46,   46,   46,
       46,   46,   46,   46,   46,   46,   46,   46,   46,   46,

       46,   46,   46,   46,   46,   46,   46,   46,   46,   46,
       46,   46,   46,   46,   46,   46,   46,   46,   46,   46,
       46,   46,   46,   46,   46,   46,   46,   46,   46,  110,
      110,  110,  110,  110,  110,  110,  110,  110,  110,  110,
      110,  110,  110,  110,  110,  110,  110,  110,  110,  110,
      110,  110,  110,  110,  110,  110,  110,  110,  110,  110,
      110,  110,  110,  110,  110,  110,  110,  110,  110,  110,
      110,  110,  110,  110,  110,  110,  110,  110,  110,  110,
      110,  110,  110,  110,  110,  110,  110,  110,  110,  110,
      110,  110,  110,  110,  110,  110,  110,  110,  110,  110,

      110,  110,  110,  110,  110,  110,  110,  110,  110,  110,
      110,  110,  110,  110,  110,  110,  110,  110,  110,  110,
      110,  110,  110,  110,  110,  110,  110,  110,  110,  110,
      110,  110,  110,  110,  110,  110,  110,  110,  110,  110,
      110,  110,  110,  110,  110,  110,  110,  110,  110,  110,
      110,  110,  110,  110,  110,  110,  110,  110,  110,  110,
      110,  110,  110,  110,  110,  110,  110,  110,  110,  110,
      110,  110,  110,  110,  110,  110,  110,  110,  110,  110,
      110,  110,  110,  110,  110,  110,  110,  110,  110,  110,
      110,  110,  110,  110,  110,  110,  110,  110,  110,  110,

      110,  110,  110,  110,  110,  110,  110,  110,  110,  110,
      110,  110,  110,  110,  110,  110,  110,  110,  110,  110,
      110,  110,  110,  110,  110,  110,  110,  110,  110,  110,
      110,  110,  110,  110,  110,  110,  110,  110,  110,  110,
      110,  110,  110,  110,  110,  110,  110,  110,  110,  110,
      110,  110,  110,  110,  110,  110,  110,  110,  110,  110,
      110,  110,  110,  110,  110,  110,  110,  110,  110,  110,
      110,  110,  110,  110,  110,  110,  110,  110,  110,  110,
      110,  110,  110,  110,  111,  111,  111,  111,  111,  111,
      111,  111,  111,  111,  111,  111,  111,  111,  111,  111,

      111,  111,  111,  111,  111,  111,  111,  111,  111,  111,
      111,  111,  111,  111,  111,  111,  111,  111,  111,  111,
      111,  111,  111,  111,  111,  111,  111,  111,  111,  111,
      111,  111,  111,  111,  111,  111,  111,  111,  111,  111,
      111,  111,  111,  111,  111,  111,  111,  111,  111,  111,
      111,  111,  111,  111,  111,  111,  111,  111,  111,  111,
      111,  111,  111,  111,  111,  111,  111,  111,  111,  111,
      111,  111,  111,  111,  111,  111,  111,  111,  111,  111,
      111,  111,  111,  111,  111,  111,  111,  111,  111,  111,
      111,  111,  111,  111,  111,  111,  111,  111,  111,  111,

      111,  111,  111,  111,  111,  111,  111,  111,  111,  111,
      111,  111,  111,  111,  111,  111,  111,  111,  111,  111,
      111,  111,  111,  111,  111,  111,  111,  111,  111,  111,
      111,  111,  111,  111,  111,  111,  111,  111,  111,  111,
      111,  111,  111,  111,  111,  111,  111,  111,  111,  111,
      111,  111,  111,  111,  111,  111,  111,  111,  111,  111,
      111,  111,  111,  111,  111,  111,  111,  111,  111,  111,
      111,  111,  111,  111,  111,  111,  111,  111,  111,  111,
      111,  111,  111,  111,  111,  111,  111,  111,  111,  111,
      111,  111,  111,  111,  111,  111,  111,  111,  111,  111,

      111,  111,  111,  111,  111,  111,  111,  111,  111,  111,
      111,  111,  111,  111,  111,  111,  111,  111,  111,  111,
      111,  111,  111,  111,  111,  111,  111,  111,  111,  111,
      111,  111,  111,  111,  111,  111,  111,  111,  111,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,

       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,

       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,  120,  120,  120,  120,  120,  120,

      120,  120,  120,  120,  120,  120,  120,  120,  120,  120,
      120,  120,  120,  120,  120,  120,  120,  120,  120,  120,
      120,  120,  120,  120,  120,  120,  120,  120,  120,  120,
      120,  120,  120,  120,  120,  120,  120,  120,  120,  120,
      120,  120,  120,  120,  120,  120,  120,  120,  120,  120,
      120,  120,  120,  120,  120,  120,  120,  120,  120,  120,
      120,  120,  120,  120,  120,  120,  120,  120,  120,  120,
      120,  120,  120,  120,  120,  120,  120,  120,  120,  120,
      120,  120,  120,  120,  120,  120,  120,  120,  120,  120,
      120,  120,  120,  120,  120,  120,  120,  120,  120,  120,

      120,  120,  120,  120,  120,  120,  120,  120,  120,  120,
      120,  120,  120,  120,  120,  120,  120,  120,  120,  120,
      120,  120,  120,  120,  120,  120,  120,  120,  120,  120,
      120,  120,  120,  120,  120,  120,  120,  120,  120,  120,
      120,  120,  120,  120,  120,  120,  120,  120,  120,  120,
      120,  120,  120,  120,  120,  120,  120,  120,  120,  120,
      120,  120,  120,  120,  120,  120,  120,  120,  120,  120,
      120,  120,  120,  120,  120,  120,  120,  120,  120,  120,
      120,  120,  120,  120,  120,  120,  120,  120,  120,  120,
      120,  120,  120,  120,  120,  120,  120,  120,  120,  120,

      120,  120,  120,  120,  120,  120,  120,  120,  120,  120,
      120,  120,  120,  120,  120,  120,  120,  120,  120,  120,
      120,  120,  120,  120,  120,  120,  120,  120,  120,  120,
      120,  120,  120,  120,  120,  120,  120,  120,  120,  120,
      120,  120,  120,  120,  120,  120,  120,  120,  120,  125,
      125,  125,  125,  125,  125,  125,  125,  125,  125,  125,
      125,  125,  125,  125,  125,  125,  125,  125,  125,  125,
      125,  125,  125,  125,  125,  125,  125,  125,  125,  125,
      125,  125,  125,  125,  125,  125,  125,  125,  125,  125,
      125,  125,  125,  125,  125,  125,  125,  125,  125,  125,

      125,  125,  125,  125,  125,  125,  125,  125,  125,  125,
      125,  125,  125,  125,  125,  125,  125,  125,  125,  125,
      125,  125,  125,  125,  125,  125,  125,  125,  125,  125,
      125,  125,  125,  125,  125,  125,  125,  125,  125,  125,
      125,  125,  125,  125,  125,  125,  125,  125,  125,  125,
      125,  125,  125,  125,  125,  125,  125,  125,  125,  125,
      125,  125,  125,  125,  125,  125,  125,  125,  125,  125,
      125,  125,  125,  125,  125,  125,  125,  125,  125,  125,
      125,  125,  125,  125,  125,  125,  125,  125,  125,  125,
      125,  125,  125,  125,  125,  125,  125,  125,  125,  125,

      125,  125,  125,  125,  125,  125,  125,  125,  125,  125,
      125,  125,  125,  125,  125,  125,  125,  125,  125,  125,
      125,  125,  125,  125,  125,  125,  125,  125,  125,  125,
      125,  125,  125,  125,  125,  125,  125,  125,  125,  125,
      125,  125,  125,  125,  125,  125,  125,  125,  125,  125,
      125,  125,  125,  125,  125,  125,  125,  125,  125,  125,
      125,  125,  125,  125,  125,  125,  125,  125,  125,  125,
      125,  125,  125,  125,  125,  125,  125,  125,  125,  125,
      125,  125,  125,  125,  125,  125,  125,  125,  125,  125,
      125,  125,  125,  125,  125,  125,  125,  125,  125,  125,

      125,  125,  125,  125,  126,  126,  126,  126,  126,  126,
      126,  126,  126,  126,  126,  126,  126,  126,  126,  126,
      126,  126,  126,  126,  126,  126,  126,  126,  126,  126,
      126,  126,  126,  126,  126,  126,  126,  126,  126,  126,
      126,  126,  126,  126,  126,  126,  126,  126,  126,  126,
      126,  126,  126,  126,  126,  126,  126,  126,  126,  126,
      126,  126,  126,  126,  126,  126,  126,  126,  126,  126,
      126,  126,  126,  126,  126,  126,  126,  126,  126,  126,
      126,  126,  126,  126,  126,  126,  126,  126,  126,  126,
      126,  126,  126,  126,  126,  126,  126,  126,  126,  126,

      126,  126,  126,  126,  126,  126,  126,  126,  126,  126,
      126,  126,  126,  126,  126,  126,  126,  126,  126,  126,
      126,  126,  126,  126,  126,  126,  126,  126,  126,  126,
      126,  126,  126,  126,  126,  126,  126,  126,  126,  126,
      126,  126,  126,  126,  126,  126,  126,  126,  126,  126,
      126,  126,  126,  126,  126,  126,  126,  126,  126,  126,
      126,  126,  126,  126,  126,  126,  126,  126,  126,  126,
      126,  126,  126,  126,  126,  126,  126,  126,  126,  126,
      126,  126,  126,  126,  126,  126,  126,  126,  126,  126,
      126,  126,  126,  126,  126,  126,  126,  126,  126,  126,

      126,  126,  126,  126,  126,  126,  126,  126,  126,  126,
      126,  126,  126,  126,  126,  126,  126,  126,  126,  126,
      126,  126,  126,  126,  126,  126,  126,  126,  126,  126,
      126,  126,  126,  126,  126,  126,  126,  126,  126,  126,
      126,  126,  126,  126,  126,  126,  126,  126,  126,  126,
      126,  126,  126,  126,  126,  126,  126,  126,  126,  131,
      131,  131,  131,  131,  131,  131,  131,  131,  131,  131,
      131,  131,  131,  131,  131,  131,  131,  131,  131,  131,
      131,  131,  131,  131,  131,  131,  131,  131,  131,  131,
      131,  131,  131,  131,  131,  131,  131,  131,  131,  131,

      131,  131,  131,  131,  131,  131,  131,  131,  131,  131,
      131,  131,  131,  131,  131,  131,  131,  131,  131,  131,
      131,  131,  131,  131,  131,  131,  131,  131,  131,  131,
      131,  131,  131,  131,  131,  131,  131,  131,  131,  131,
      131,  131,  131,  131,  131,  131,  131,  131,  131,  131,
      131,  131,  131,  131,  131,  131,  131,  131,  131,  131,
      131,  131,  131,  131,  131,  131,  131,  131,  131,  131,
      131,  131,  131,  131,  131,  131,  131,  131,  131,  131,
      131,  131,  131,  131,  131,  131,  131,  131,  131,  131,
      131,  131,  131,  131,  131,  131,  131,  131,  131,  131,

      131,  131,  131,  131,  131,  131,  131,  131,  131,  131,
      131,  131,  131,  131,  131,  131,  131,  131,  131,  131,
      131,  131,  131,  131,  131,  131,  131,  131,  131,  131,
      131,  131,  131,  131,  131,  131,  131,  131,  131,  131,
      131,  131,  131,  131,  131,  131,  131,  131,  131,  131,
      131,  131,  131,  131,  131,  131,  131,  131,  131,  131,
      131,  131,  131,  131,  131,  131,  131,  131,  131,  131,
      131,  131,  131,  131,  131,  131,  131,  131,  131,  131,
      131,  131,  131,  131,  131,  131,  131,  131,  131,  131,
      131,  131,  131,  131,  131,  131,  131,  131,  131,  131,

      131,  131,  131,  131,  131,  131,  131,  131,  131,  131,
      131,  131,  131,  131,  138,  138,  138,  138,  138,  138,
      138,  138,  138,  138,  138,  138,  138,  138,  138,  138,
      138,  138,  138,  138,  138,  138,  138,  138,  138,  138,
      138,  138,  138,  138,  138,  138,  138,  138,  138,  138,
      138,  138,  138,  138,  138,  138,  138,  138,  138,  138,
      138,  138,  138,  138,  138,  138,  138,  138,  138,  138,
      138,  138,  138,  138,  138,  138,  138,  138,  138,  138,
      138,  138,  138,  138,  138,  138,  138,  138,  138,  138,
      138,  138,  138,  138,  138,  138,  138,  138,  138,  138,

      138,  138,  138,  138,  138,  138,  138,  138,  138,  138,
      138,  138,  138,  138,  138,  138,  138,  138,  138,  138,
      138,  138,  138,  138,  138,  138,  138,  138,  138,  138,
      138,  138,  138,  138,  138,  138,  138,  138,  138,  138,
      138,  138,  138,  138,  138,  138,  138,  138,  138,  138,
      138,  138,  138,  138,  138,  138,  138,  138,  138,  138,
      138,  138,  138,  138,  138,  138,  138,  138,  138,  138,
      138,  138,  138,  138,  138,  138,  138,  138,  138,  138,
      138,  138,  138,  138,  138,  138,  138,  138,  138,  138,
      138,  138,  138,  138,  138,  138,  138,  138,  138,  138,

      138,  138,  138,  138,  138,  138,  138,  138,  138,  138,
      138,  138,  138,  138,  138,  138,  138,  138,  138,  138,
      138,  138,  138,  138,  138,  138,  138,  138,  138,  138,
      138,  138,  138,  138,  138,  138,  138,  138,  138,  138,
      138,  138,  138,  138,  138,  138,  138,  138,  138,  138,
      138,  138,  138,  138,  138,  138,  138,  138,  138,  138,
      138,  138,  138,  138,  138,  138,  138,  138,  138,  142,
      142,  142,  142,  142,  142,  142,  142,  142,  142,  142,
      142,  142,  142,  142,  142,  142,  142,  142,  142,  142,
      142,  142,  142,  142,  142,  142,  142,  142,  142,  142,

      142,  142,  142,  142,  142,  142,  142,  142,  142,  142,
      142,  142,  142,  142,  142,  142,  142,  142,  142,  142,
      142,  142,  142,  142,  142,  142,  142,  142,  142,  142,
      142,  142,  142,  142,  142,  142,  142,  142,  142,  142,
      142,  142,  142,  142,  142,  142,  142,  142,  142,  142,
      142,  142,  142,  142,  142,  142,  142,  142,  142,  142,
      142,  142,  142,  142,  142,  142,  142,  142,  142,  142,
      142,  142,  142,  142,  142,  142,  142,  142,  142,  142,
      142,  142,  142,  142,  142,  142,  142,  142,  142,  142,
      142,  142,  142,  142,  142,  142,  142,  142,  142,  142,

      142,  142,  142,  142,  142,  142,  142,  142,  142,  142,
      142,  142,  142,  142,  142,  142,  142,  142,  142,  142,
      142,  142,  142,  142,  142,  142,  142,  142,  142,  142,
      142,  142,  142,  142,  142,  142,  142,  142,  142,  142,
      142,  142,  142,  142,  142,  142,  142,  142,  142,  142,
      142,  142,  142,  142,  142,  142,  142,  142,  142,  142,
      142,  142,  142,  142,  142,  142,  142,  142,  142,  142,
      142,  142,  142,  142,  142,  142,  142,  142,  142,  142,
      142,  142,  142,  142,  142,  142,  142,  142,  142,  142,
      142,  142,  142,  142,  142,  142,  142,  142,  142,  142,

      142,  142,  142,  142,  142,  142,  142,  142,  142,  142,
      142,  142,  142,  142,  142,  142,  142,  142,  142,  142,
      142,  142,  142,  142,  145,  145,  145,  145,  145,  145,
      145,  145,  145,  145,  145,  145,  145,  145,  145,  145,
      145,  145,  145,  145,  145,  145,  145,  145,  145,  145,
      145,  145,  145,  145,  145,  145,  145,  145,  145,  145,
      145,  145,  145,  145,  145,  145,  145,  145,  145,  145,
      145,  145,  145,  145,  145,  145,  145,  145,  145,  145,
      145,  145,  145,  145,  145,  145,  145,  145,  145,  145,
      145,  145,  145,  145,  145,  145,  145,  145,  145,  145,

      145,  145,  145,  145,  145,  145,  145,  145,  145,  145,
      145,  145,  145,  145,  145,  145,  145,  145,  145,  145,
      145,  145,  145,  145,  145,  145,  145,  145,  145,  145,
      145,  145,  145,  145,  145,  145,  145,  145,  145,  145,
      145,  145,  145,  145,  145,  145,  145,  145,  145,  145,
      145,  145,  145,  145,  145,  145,  145,  145,  145,  145,
      145,  145,  145,  145,  145,  145,  145,  145,  145,  145,
      145,  145,  145,  145,  145,  145,  145,  145,  145,  145,
      145,  145,  145,  145,  145,  145,  145,  145,  145,  145,
      145,  145,  145,  145,  145,  145,  145,  145,  145,  145,

      145,  145,  145,  145,  145,  145,  145,  145,  145,  145,
      145,  145,  145,  145,  145,  145,  145,  145,  145,  145,
      145,  145,  145,  145,  145,  145,  145,  145,  145,  145,
      145,  145,  145,  145,  145,  145,  145,  145,  145,  145,
      145,  145,  145,  145,  145,  145,  145,  145,  145,  145,
      145,  145,  145,  145,  145,  145,  145,  145,  145,  145,
      145,  145,  145,  145,  145,  145,  145,  145,  145,  145,
      145,  145,  145,  145,  145,  145,  145,  145,  145,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,

       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,

       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,

       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,  162,  162,  162,  162,  162,  162,
      162,  162,  162,  162,  162,  162,  162,  162,  162,  162,
      162,  162,  162,  162,  162,  162,  162,  162,  162,  162,
      162,  162,  162,  162,  162,  162,  162,  162,  162,  162,
      162,  162,  162,  162,  162,  162,  162,  162,  162,  162,
      162,  162,  162,  162,  162,  162,  162,  162,  162,  162,
      162,  162,  162,  162,  162,  162,  162,  162,  162,  162,

      162,  162,  162,  162,  162,  162,  162,  162,  162,  162,
      162,  162,  162,  162,  162,  162,  162,  162,  162,  162,
      162,  162,  162,  162,  162,  162,  162,  162,  162,  162,
      162,  162,  162,  162,  162,  162,  162,  162,  162,  162,
      162,  162,  162,  162,  162,  162,  162,  162,  162,  162,
      162,  162,  162,  162,  162,  162,  162,  162,  162,  162,
      162,  162,  162,  162,  162,  162,  162,  162,  162,  162,
      162,  162,  162,  162,  162,  162,  162,  162,  162,  162,
      162,  162,  162,  162,  162,  162,  162,  162,  162,  162,
      162,  162,  162,  162,  162,  162,  162,  162,  162,  162,

      162,  162,  162,  162,  162,  162,  162,  162,  162,  162,
      162,  162,  162,  162,  162,  162,  162,  162,  162,  162,
      162,  162,  162,  162,  162,  162,  162,  162,  162,  162,
      162,  162,  162,  162,  162,  162,  162,  162,  162,  162,
      162,  162,  162,  162,  162,  162,  162,  162,  162,  162,
      162,  162,  162,  162,  162,  162,  162,  162,  162,  162,
      162,  162,  162,  162,  162,  162,  162,  162,  162,  162,
      162,  162,  162,  162,  162,  162,  162,  162,  162,  162,
      162,  162,  162,  162,  162,  162,  162,  162,  162,  165,
      165,  165,  165,  165,  165,  165,  165,  165,  165,  165,

      165,  165,  165,  165,  165,  165,  165,  165,  165,  165,
      165,  165,  165,  165,  165,  165,  165,  165,  165,  165,
      165,  165,  165,  165,  165,  165,  165,  165,  165,  165,
      165,  165,  165,  165,  165,  165,  165,  165,  165,  165,
      165,  165,  165,  165,  165,  165,  165,  165, 1392,  165,
      165,  165,  165,  165,  165,  165,  165,  165,  165,  165,
      165,  165,  165,  165,  165,  165,  165,  165,  165,  165,
      165,  165,  165,  165,  165,  165,  165,  165,  165,  165,
      165,  165,  165,  165,  165,  165,  165,  165,  165,  165,
      165,  165,  165,  165,  165,  165,  165,  165,  165,  165,

      165,  165,  165,  165,  165,  165,  165,  165,  165,  165,
      165,  165,  165,  165,  165,  165,  165,  165,  165,  165,
      165,  165,  165,  165,  165,  165,  165,  165,  165,  165,
      165,  165,  165,  165,  165,  165,  165,  165,  165,  165,
      165,  165,  165,  165,  165,  165,  165,  165,  165,  165,
      165,  165,  165,  165,  165,  165,  165,  165,  165,  165,
      165,  165,  165,  165,  165,  165,  165,  165,  165,  165,
      165,  165,  165,  165,  165,  165,  165,  165,  165,  165,
      165,  165,  165,  165,  165,  165,  165,  165,  165,  165,
      165,  165,  165,  165,  165,  165,  165,  165,  165,  165,

      165,  165,  165,  165,  165,  165,  165,  165,  165,  165,
      165,  165,  165,  165,  165,  165,  165,  165,  165,  165,
      165,  165,  165,  165,  165,  165,  165,  165,  165,  165,
      165,  165,  165,  165,  165,  165,  165,  165,  165,  165,
      165,  165,  165,  165,  170,  170,  170,  170,  170,  170,
      170,  170,  170,  170,  170,  170,  170,  170,  170,  170,
      170,  170,  170,  170,  170,  170,  170,  170,  170,  170,
      170,  170,  170,  170,  170,  170,  170,  170,  170,  170,
      170,  170,  170,  170,  170,  170,  170,  170,  170,  170,
      170,  170,  170,  170,  170,  170,  170,  170,  170,  170,

      170,  170,  170,  170,  170,  170,  170,  170,  170,  170,
      170,  170,  170,  170,  170,  170,  170,  170,  170,  170,
      170,  170,  170,  170,  170,  170,  170,  170,  170,  170,
      170,  170,  170,  170,  170,  170,  170,  170,  170,  170,
      170,  170,  170,  170,  170,  170,  170,  170,  170,  170,
      170,  170,  170,  170,  170,  170,  170,  170,  170,  170,
      170,  170,  170,  170,  170,  170,  170,  170,  170,  170,
      170,  170,  170,  170,  170,  170,  170,  170,  170,  170,
      170,  170,  170,  170,  170,  170,  170,  170,  170,  170,
      170,  170,  170,  170,  170,  170,  170,  170,  170,  170,

      170,  170,  170,  170,  170,  170,  170,  170,  170,  170,
      170,  170,  170,  170,  170,  170,  170,  170,  170,  170,
      170,  170,  170,  170,  170,  170,  170,  170,  170,  170,
      170,  170,  170,  170,  170,  170,  170,  170,  170,  170,
      170,  170,  170,  170,  170,  170,  170,  170,  170,  170,
      170,  170,  170,  170,  170,  170,  170,  170,  170,  170,
      170,  170,  170,  170,  170,  170,  170,  170,  170,  170,
      170,  170,  170,  170,  170,  170,  170,  170,  170,  170,
      170,  170,  170,  170,  170,  170,  170,  170,  170,  170,
      170,  170,  170,  170,  170,  170,  170,  170,  170,  173,

      173,  173,  173,  173,  173,  173,  173,  173,  173,  173,
      173,  173,  173,  173,  173,  173,  173,  173,  173,  173,
      173,  173,  173,  173,  173, 1391, 1390, 1389, 1388,  173,
     1387,  173,  173,  173,  173,  173,  173,  173,  173,  173,
      173,  173,  173,  173,  173,  173,  173,  173,  173,  173,
      173,  173,  173,  173,  173,  173,  173, 1386, 1385, 1384,
     1383,  173,  173,  173,  173,  173,  173,  173,  173,  173,
      173,  173,  173,  173,  173,  173,  173,  173,  173,  173,
      173,  173,  173,  173,  173,  173,  173,  173,  173,  173,
      173,  173,  173,  173,  173,  173,  173,  173,  173,  173,

      173,  173,  173,  173,  173,  173,  173,  173,  173,  173,
      173,  173,  173,  173,  173,  173,  173,  173,  173,  173,
      173,  173,  173,  173,  173,  173,  173,  173,  173,  173,
      173,  173,  173,  173,  173,  173,  173,  173,  173,  173,
      173,  173,  173,  173,  173,  173,  173,  173,  173,  173,
      173,  173,  173,  173,  173,  173,  173,  173,  173,  173,
      173,  173,  173,  173,  173,  173,  173,  173,  173,  173,
      173,  173,  173,  173,  173,  173,  173,  173,  173,  173,
      173,  173,  173,  173,  173,  173,  173,  173,  173,  173,
      178,  178,  178,  178,  178,  178,  178,  178,  178,  178,

      178,  178,  178,  178,  178,  178,  178,  178,  178,  178,
      178,  178,  178,  178,  178,  178,  178,  178,  178,  178,
      178,  178,  178,  178,  178,  178,  178,  178,  178,  178,
      178,  178,  178,  178,  178,  178,  178,  178,  178,  178,
      178,  178,  178,  178,  178,  178,  178,  178,  178,  178,
      178,  178,  178,  178,  178,  178,  178,  178,  178,  178,
      178,  178,  178,  178,  178,  178,  178,  178,  178,  178,
      178,  178,  178,  178,  178,  178,  178,  178,  178,  178,
      178,  178,  178,  178,  178,  178,  178,  178,  178,  178,
      178,  178,  178,  178,  178,  178,  178,  178,  178,  178,

      178,  178,  178,  178,  178,  178,  178,  178,  178,  178,
      178,  178,  178,  178,  178,  178,  178,  178,  178,  178,
      178,  178,  178,  178,  178,  178,  178,  178,  178,  178,
      178,  178,  178,  178,  178,  178,  178,  178,  178,  178,
      178,  178,  178,  178,  178,  178,  178,  178,  178,  178,
      178,  178,  178,  178,  178,  178,  178,  178,  178,  178,
      178,  178,  178,  178,  178,  178,  178,  178,  178,  178,
      178,  178,  178,  178,  178,  178,  178,  178,  178,  178,
      178,  178,  178,  178,  178,  178,  178,  178,  178,  178,
      178,  178,  178,  178,  178,  178,  178,  178,  178,  178,

      178,  178,  178,  178,  178,  178,  178,  178,  178,  178,
      178,  178,  178,  178,  178,  178,  178,  178,  178,  178,
      178,  178,  178,  178,  178,  178,  178,  178,  178,  178,
      178,  178,  178,  178,  178,  178,  178,  178,  178,  178,
      178,  178,  178,  178,  178,  215,  215,  215,  215,  215,
      215,  215,  215,  215,  215, 1382, 1381, 1380, 1379, 1378,
     1377, 1376,  215,  215,  215,  215,  215,  215,  215,  215,
      215,  215,  215,  215,  215,  215,  215,  215,  215,  215,
      215,  215,  215,  215,  215,  215,  215,  215, 1375, 1374,
     1373, 1372,  215, 1371,  215,  215,  215,  215,  215,  215,

      215,  215,  215,  215,  215,  215,  215,  215,  215,  215,
      215,  215,  215,  215,  215,  215,  215,  215,  215,  215,
     1370, 1369, 1368, 1367,  215,  215,  215,  215,  215,  215,
      215,  215,  215,  215,  215,  215,  215,  215,  215,  215,
      215,  215,  215,  215,  215,  215,  215,  215,  215,  215,
      215,  215,  215,  215,  215,  215,  215,  215,  215,  215,
      215,  215,  215,  215,  215,  215,  215,  215,  215,  215,
      215,  215,  215,  215,  215,  215,  215,  215,  215,  215,
      215,  215,  215,  215,  215,  215,  215,  215,  215,  215,
      215,  215,  215,  215,  215,  215,  215,  215,  215,  215,

      215,  215,  215,  215,  215,  215,  215,  215,  215,  215,
      215,  215,  215,  215,  215,  215,  215,  215,  215,  215,
      215,  215,  215,  215,  215,  215,  215,  215,  215,  215,
      215,  215,  215,  215,  215,  215,  215,  215,  215,  215,
      215,  215,  215,  215,  215,  215,  215,  215,  215,  215,
      215,  215,  215,  264,  264,  264,  264,  264,  264,  264,
      264,  264,  264,  264,  264,  264,  264,  264,  264,  264,
      264,  264,  264,  264,  264,  264,  264,  264,  264,  264,
      264,  264,  264,  264,  264,  264,  264,  264,  264,  264,
      264,  264,  264,  264,  264,  264,  264,  264,  264,  264,

      264,  264,  264,  264,  264,  264,  264,  264,  264,  264,
      264,  264,  264,  264,  264,  264,  264,  264,  264,  264,
      264,  264,  264,  264,  264,  264,  264,  264,  264,  264,
      264,  264,  264,  264,  264,  264,  264,  264,  264,  264,
      264,  264,  264,  264,  264,  264,  264,  264,  264,  264,
      264,  264,  264,  264,  264,  264,  264,  264,  264,  264,
      264,  264,  264,  264,  264,  264,  264,  264,  264,  264,
      264,  264,  264,  264,  264,  264,  264,  264,  264,  264,
      264,  264,  264,  264,  264,  264,  264,  264,  264,  264,
      264,  264,  264,  264,  264,  264,  264,  264,  264,  264,

      264,  264,  264,  264,  264,  264,  264,  264,  264,  264,
      264,  264,  264,  264,  264,  264,  264,  264,  264,  264,
      264,  264,  264,  264,  264,  264,  264,  264,  264,  264,
      264,  264,  264,  264,  264,  264,  264,  264,  264,  264,
      264,  264,  264,  264,  264,  264,  264,  264,  264,  264,
      264,  264,  264,  264,  264,  264,  264,  264,  264,  264,
      264,  264,  264,  264,  264,  264,  264,  264,  264,  264,
      264,  264,  264,  264,  264,  264,  264,  264,  264,  264,
      264,  264,  264,  264,  264,  264,  264,  264,  264,  264,
      264,  264,  264,  264,  264,  264,  264,  264,  264,  264,

      264,  264,  264,  264,  264,  264,  264,  264,  268,  268,
      268,  268,  268,  268,  268,  268,  268, 1366,  268,  268,
     1365,  268,  268,  268,  268,  268,  268,  268,  268,  268,
      268,  268,  268,  268,  268,  268,  268,  268,  268,  268,
      268,  268,  268,  268,  268,  268,  268,  268,  268, 1364,
      268,  268,  268,  268,  268,  268,  268,  268,  268,  268,
      268,  268,  268,  268,  268,  268,  268,  268,  268,  268,
      268,  268,  268,  268,  268,  268,  268,  268,  268,  268,
      268,  268,  268,  268,  268,  268,  268,  268,  268,  268,
      268,  268,  268,  268,  268,  268,  268,  268,  268,  268,

      268,  268,  268,  268,  268,  268,  268,  268,  268,  268,
      268,  268,  268,  268,  268,  268,  268,  268,  268,  268,
      268,  268,  268,  268,  268,  268,  268,  268,  268,  268,
      268,  268,  268,  268,  268,  268,  268,  268,  268,  268,
      268,  268,  268,  268,  268,  268,  268,  268,  268,  268,
      268,  268,  268,  268,  268,  268,  268,  268,  268,  268,
      268,  268,  268,  268,  268,  268,  268,  268,  268,  268,
      268,  268,  268,  268,  268,  268,  268,  268,  268,  268,
      268,  268,  268,  268,  268,  268,  268,  268,  268,  268,
      268,  268,  268,  268,  268,  268,  268,  268,  268,  268,

      268,  268,  268,  268,  268,  268,  268,  268,  268,  268,
      268,  268,  268,  268,  268,  268,  268,  268,  268,  268,
      268,  268,  268,  268,  268,  268,  268,  268,  268,  268,
      268,  268,  268,  268,  268,  268,  268,  268,  268,  268,
      268,  268,  268,  268,  268,  268,  268,  268,  268,  268,
      268,  268,  268,  268,  268,  268,  268,  268,  268,  268,
      268,  268,  268,  271,  271,  271,  271,  271,  271,  271,
      271,  271, 1363,  271,  271, 1362,  271,  271,  271,  271,
      271,  271,  271,  271,  271,  271,  271,  271,  271,  271,
      271,  271,  271,  271,  271,  271,  271,  271,  271,  271,

      271,  271,  271,  271,  271,  271,  271,  271,  271,  271,
      271,  271,  271,  271,  271,  271,  271,  271,  271,  271,
      271,  271,  271,  271,  271, 1361,  271,  271,  271,  271,
      271,  271,  271,  271,  271,  271,  271,  271,  271,  271,
      271,  271,  271,  271,  271,  271,  271,  271,  271,  271,
      271,  271,  271,  271,  271,  271,  271,  271,  271,  271,
      271,  271,  271,  271,  271,  271,  271,  271,  271,  271,
      271,  271,  271,  271,  271,  271,  271,  271,  271,  271,
      271,  271,  271,  271,  271,  271,  271,  271,  271,  271,
      271,  271,  271,  271,  271,  271,  271,  271,  271,  271,

      271,  271,  271,  271,  271,  271,  271,  271,  271,  271,
      271,  271,  271,  271,  271,  271,  271,  271,  271,  271,
      271,  271,  271,  271,  271,  271,  271,  271,  271,  271,
      271,  271,  271,  271,  271,  271,  271,  271,  271,  271,
      271,  271,  271,  271,  271,  271,  271,  271,  271,  271,
      271,  271,  271,  271,  271,  271,  271,  271,  271,  271,
      271,  271,  271,  271,  271,  271,  271,  271,  271,  271,
      271,  271,  271,  271,  271,  271,  271,  271,  271,  271,
      271,  271,  271,  271,  271,  271,  271,  271,  271,  271,
      271,  271,  271,  271,  271,  271,  271,  271,  271,  271,

      271,  271,  271,  271,  271,  271,  271,  271,  271,  271,
      271,  271,  271,  271,  271,  271,  271,  271,  275,  275,
      275,  275,  275,  275,  275,  275,  275,  275,  275,  275,
      275,  275,  275,  275,  275,  275,  275,  275,  275,  275,
      275,  275,  275,  275, 1360, 1359, 1358, 1357,  275, 1356,
      275,  275,  275,  275,  275,  275,  275,  275,  275,  275,
      275,  275,  275,  275,  275,  275,  275,  275,  275,  275,
      275,  275,  275,  275,  275,  275, 1355, 1354, 1353, 1352,
      275,  275,  275,  275,  275,  275,  275,  275,  275,  275,
      275,  275,  275,  275,  275,  275,  275,  275,  275,  275,

      275,  275,  275,  275,  275,  275,  275,  275,  275,  275,
      275,  275,  275,  275,  275,  275,  275,  275,  275,  275,
      275,  275,  275,  275,  275,  275,  275,  275,  275,  275,
      275,  275,  275,  275,  275,  275,  275,  275,  275,  275,
      275,  275,  275,  275,  275,  275,  275,  275,  275,  275,
      275,  275,  275,  275,  275,  275,  275,  275,  275,  275,
      275,  275,  275,  275,  275,  275,  275,  275,  275,  275,
      275,  275,  275,  275,  275,  275,  275,  275,  275,  275,
      275,  275,  275,  275,  275,  275,  275,  275,  275,  275,
      275,  275,  275,  275,  275,  275,  275,  275,  275,  275,

      275,  275,  275,  275,  275,  275,  275,  275,  275,  276,
      276,  276,  276,  276,  276,  276,  276,  276,  276,  276,
      276,  276,  276,  276,  276,  276,  276,  276,  276,  276,
      276,  276,  276,  276,  276, 1351, 1350, 1349, 1348,  276,
     1341,  276,  276,  276,  276,  276,  276,  276,  276,  276,
      276,  276,  276,  276,  276,  276,  276,  276,  276,  276,
      276,  276,  276,  276,  276,  276,  276, 1287, 1286, 1285,
     1284,  276,  276,  276,  276,  276,  276,  276,  276,  276,
      276,  276,  276,  276,  276,  276,  276,  276,  276,  276,
      276,  276,  276,  276,  276,  276,  276,  276,  276,  276,

      276,  276,  276,  276,  276,  276,  276,  276,  276,  276,
      276,  276,  276,  276,  276,  276,  276,  276,  276,  276,
      276,  276,  276,  276,  276,  276,  276,  276,  276,  276,
      276,  276,  276,  276,  276,  276,  276,  276,  276,  276,
      276,  276,  276,  276,  276,  276,  276,  276,  276,  276,
      276,  276,  276,  276,  276,  276,  276,  276,  276,  276,
      276,  276,  276,  276,  276,  276,  276,  276,  276,  276,
      276,  276,  276,  276,  276,  276,  276,  276,  276,  276,
      276,  276,  276,  276,  276,  276,  276,  276,  276,  276,
      276,  276,  276,  276,  276,  276,  276,  276,  276,  276,

      277,  277,  277,  277,  277,  277,  277,  277,  277,  277,
     1283, 1282, 1281, 1280, 1279, 1278, 1277,  277,  277,  277,
      277,  277,  277,  277,  277,  277,  277,  277,  277,  277,
      277,  277,  277,  277,  277,  277,  277,  277,  277,  277,
      277,  277,  277, 1276, 1275, 1274, 1273,  277, 1272,  277,
      277,  277,  277,  277,  277,  277,  277,  277,  277,  277,
      277,  277,  277,  277,  277,  277,  277,  277,  277,  277,
      277,  277,  277,  277,  277, 1271, 1270, 1269, 1268,  277,
      277,  277,  277,  277,  277,  277,  277,  277,  277,  277,
      277,  277,  277,  277,  277,  277,  277,  277,  277,  277,

      277,  277,  277,  277,  277,  277,  277,  277,  277,  277,
      277,  277,  277,  277,  277,  277,  277,  277,  277,  277,
      277,  277,  277,  277,  277,  277,  277,  277,  277,  277,
      277,  277,  277,  277,  277,  277,  277,  277,  277,  277,
      277,  277,  277,  277,  277,  277,  277,  277,  277,  277,
      277,  277,  277,  277,  277,  277,  277,  277,  277,  277,
      277,  277,  277,  277,  277,  277,  277,  277,  277,  277,
      277,  277,  277,  277,  277,  277,  277,  277,  277,  277,
      277,  277,  277,  277,  277,  277,  277,  277,  277,  277,
      277,  277,  277,  277,  277,  277,  277,  277,  277,  277,

      277,  277,  277,  277,  277,  277,  277,  277,  279,  279,
      279,  279,  279,  279,  279,  279,  279, 1267,  279,  279,
     1266,  279,  279,  279,  279,  279,  279,  279,  279,  279,
      279,  279,  279,  279,  279,  279,  279,  279,  279,  279,
      279,  279,  279,  279,  279,  279,  279,  279,  279,  279,
      279,  279,  279,  279,  279,  279,  279,  279,  279,  279,
      279,  279,  279,  279,  279,  279,  279,  279,  279,  279,
      279,  279,  279,  279,  279,  279,  279,  279,  279,  279,
      279,  279,  279,  279,  279,  279,  279,  279,  279,  279,
      279,  279,  279,  279,  279,  279,  279,  279,  279,  279,

      279,  279,  279,  279,  279,  279,  279,  279,  279,  279,
      279,  279,  279,  279,  279,  279,  279,  279,  279,  279,
      279,  279,  279,  279,  279,  279,  279,  279,  279,  279,
      279,  279,  279,  279,  279,  279,  279,  279,  279,  279,
      279,  279,  279,  279,  279,  279,  279,  279,  279,  279,
      279,  279,  279,  279,  279,  279,  279,  279,  279,  279,
      279,  279,  279,  279,  279,  279,  279,  279,  279,  279,
      279,  279,  279,  279,  279,  279,  279,  279,  279,  279,
      279,  279,  279,  279,  279,  279,  279,  279,  279,  279,
      279,  279,  279,  279,  279,  279,  279,  279,  279,  279,

      279,  279,  279,  279,  279,  279,  279,  279,  279,  279,
      279,  279,  279,  279,  279,  279,  279,  279,  279,  279,
      279,  279,  279,  279,  279,  279,  279,  279,  279,  279,
      279,  279,  279,  279,  279,  279,  279,  279,  279,  279,
      279,  279,  279,  279,  279,  279,  279,  279,  279,  279,
      279,  279,  279,  279,  279,  279,  279,  279,  279,  279,
      279,  279,  279,  283,  283,  283,  283,  283,  283,  283,
      283,  283,  283,  283,  283,  283,  283,  283,  283,  283,
      283,  283,  283,  283,  283,  283,  283,  283,  283,  283,
      283,  283,  283,  283,  283,  283,  283,  283,  283,  283,

      283,  283,  283,  283,  283,  283,  283,  283,  283,  283,
      283,  283,  283,  283,  283,  283,  283,  283,  283,  283,
      283,  283,  283,  283,  283,  283,  283,  283,  283,  283,
      283,  283,  283,  283,  283,  283,  283,  283,  283,  283,
      283,  283,  283,  283,  283,  283,  283,  283,  283,  283,
      283,  283,  283,  283,  283,  283,  283,  283,  283,  283,
      283,  283,  283,  283,  283,  283,  283,  283,  283,  283,
      283,  283,  283,  283,  283,  283,  283,  283,  283,  283,
      283,  283,  283,  283,  283,  283,  283,  283,  283,  283,
      283,  283,  283,  283,  283,  283,  283,  283,  283,  283,

      283,  283,  283,  283,  283,  283,  283,  283,  283,  283,
      283,  283,  283,  283,  283,  283,  283,  283,  283,  283,
      283,  283,  283,  283,  283,  283,  283,  283,  283,  283,
      283,  283,  283,  283,  283,  283,  283,  283,  283,  283,
      283,  283,  283,  283,  283,  283,  283,  283,  283,  283,
      283,  283,  283,  283,  283,  283,  283,  283,  283,  283,
      283,  283,  283,  283,  283,  283,  283,  283,  283,  283,
      283,  283,  283,  283,  283,  283,  283,  283,  283,  283,
      283,  283,  283,  283,  283,  283,  283,  283,  283,  283,
      283,  283,  283,  283,  283,  283,  283,  283,  283,  283,

      283,  283,  283,  283,  283,  283,  283,  283,  283,  283,
      283,  283,  283,  283,  283,  283,  283,  283,  285,  285,
      285,  285,  285,  285,  285,  285,  285,  285,  285,  285,
      285,  285,  285,  285,  285,  285,  285,  285,  285,  285,
      285,  285,  285,  285,  285,  285,  285,  285,  285,  285,
      285,  285,  285,  285,  285,  285,  285,  285,  285,  285,
      285,  285,  285,  285,  285,  285,  285,  285,  285,  285,
      285,  285,  285,  285,  285,  285,  285,  285,  285,  285,
      285,  285,  285,  285,  285,  285,  285,  285,  285,  285,
      285,  285,  285,  285,  285,  285,  285,  285,  285,  285,

      285,  285,  285,  285,  285,  285,  285,  285,  285,  285,
      285,  285,  285,  285,  285,  285,  285,  285,  285,  285,
      285,  285,  285,  285,  285,  285,  285,  285,  285,  285,
      285,  285,  285,  285,  285,  285,  285,  285,  285,  285,
      285,  285,  285,  285,  285,  285,  285,  285,  285,  285,
      285,  285,  285,  285,  285,  285,  285,  285,  285,  285,
      285,  285,  285,  285,  285,  285,  285,  285,  285,  285,
      285,  285,  285,  285,  285,  285,  285,  285,  285,  285,
      285,  285,  285,  285,  285,  285,  285,  285,  285,  285,
      285,  285,  285,  285,  285,  285,  285,  285,  285,  285,

      285,  285,  285,  285,  285,  285,  285,  285,  285,  285,
      285,  285,  285,  285,  285,  285,  285,  285,  285,  285,
      285,  285,  285,  285,  285,  285,  285,  285,  285,  285,
      285,  285,  285,  285,  285,  285,  285,  285,  285,  285,
      285,  285,  285,  285,  285,  285,  285,  285,  285,  285,
      285,  285,  285,  285,  285,  285,  285,  285,  285,  285,
      285,  285,  285,  285,  285,  285,  285,  285,  285,  285,
      285,  285,  285,  215, 1263, 1262, 1256, 1253,  215, 1252,
     1251, 1250, 1249, 1248, 1247, 1246, 1245,  215,  215,  215,
      215,  215,  215,  215,  215,  215,  215, 1244, 1243,  215,

     1242, 1241, 1240, 1239,  215,  215,  215,  215,  215,  215,
      215,  215,  215,  215,  215,  215,  215,  215,  215,  215,
      215,  215,  215,  215,  215,  215,  215,  215,  215,  215,
     1238, 1237, 1236, 1235,  215, 1234,  215,  215,  215,  215,
      215,  215,  215,  215,  215,  215,  215,  215,  215,  215,
      215,  215,  215,  215,  215,  215,  215,  215,  215,  215,
      215,  215, 1233, 1232, 1231, 1230,  215,  215,  215,  215,
      215,  215,  215,  215,  215,  215,  215,  215,  215,  215,
      215,  215,  215,  215,  215,  215,  215,  215,  215,  215,
      215,  215,  215,  215,  215,  215,  215,  215,  215,  215,

      215,  215,  215,  215,  215,  215,  215,  215,  215,  215,
      215,  215,  215,  215,  215,  215,  215,  215,  215,  215,
      215,  215,  215,  215,  215,  215,  215,  215,  215,  215,
      215,  215,  215,  215,  215,  215,  215,  215,  215,  215,
      215,  215,  215,  215,  215,  215,  215,  215,  215,  215,
      215,  215,  215,  215,  215,  215,  215,  215,  215,  215,
      215,  215,  215,  215,  215,  215,  215,  215,  215,  215,
      215,  215,  215,  215,  215,  215,  215,  215,  215,  215,
      215,  215,  215,  215,  215,  215,  215,  215,  215,  215,
      215,  215,  215,  215,  215,  291,  291,  291,  291,  291,

      291,  291,  291,  291,  291, 1229, 1226, 1225, 1224, 1223,
     1222, 1217,  291,  291,  291,  291,  291,  291,  291,  291,
      291,  291,  291,  291,  291,  291,  291,  291,  291,  291,
      291,  291,  291,  291,  291,  291,  291,  291, 1214, 1211,
     1210, 1209,  291, 1208,  291,  291,  291,  291,  291,  291,
      291,  291,  291,  291,  291,  291,  291,  291,  291,  291,
      291,  291,  291,  291,  291,  291,  291,  291,  291,  291,
     1207, 1206, 1205, 1204,  291,  291,  291,  291,  291,  291,
      291,  291,  291,  291,  291,  291,  291,  291,  291,  291,
      291,  291,  291,  291,  291,  291,  291,  291,  291,  291,

      291,  291,  291,  291,  291,  291,  291,  291,  291,  291,
      291,  291,  291,  291,  291,  291,  291,  291,  291,  291,
      291,  291,  291,  291,  291,  291,  291,  291,  291,  291,
      291,  291,  291,  291,  291,  291,  291,  291,  291,  291,
      291,  291,  291,  291,  291,  291,  291,  291,  291,  291,
      291,  291,  291,  291,  291,  291,  291,  291,  291,  291,
      291,  291,  291,  291,  291,  291,  291,  291,  291,  291,
      291,  291,  291,  291,  291,  291,  291,  291,  291,  291,
      291,  291,  291,  291,  291,  291,  291,  291,  291,  291,
      291,  291,  291,  291,  291,  291,  291,  291,  291,  291,

      291,  291,  291,  294,  294,  294,  294,  294,  294,  294,
      294,  294,  294, 1203, 1202, 1199, 1198, 1197, 1196, 1195,
      294,  294,  294,  294,  294,  294,  294,  294,  294,  294,
      294,  294,  294,  294,  294,  294,  294,  294,  294,  294,
      294,  294,  294,  294,  294,  294, 1194, 1193, 1192, 1191,
      294, 1190,  294,  294,  294,  294,  294,  294,  294,  294,
      294,  294,  294,  294,  294,  294,  294,  294,  294,  294,
      294,  294,  294,  294,  294,  294,  294,  294, 1189, 1188,
     1187, 1186,  294,  294,  294,  294,  294,  294,  294,  294,
      294,  294,  294,  294,  294,  294,  294,  294,  294,  294,

      294,  294,  294,  294,  294,  294,  294,  294,  294,  294,
      294,  294,  294,  294,  294,  294,  294,  294,  294,  294,
      294,  294,  294,  294,  294,  294,  294,  294,  294,  294,
      294,  294,  294,  294,  294,  294,  294,  294,  294,  294,
      294,  294,  294,  294,  294,  294,  294,  294,  294,  294,
      294,  294,  294,  294,  294,  294,  294,  294,  294,  294,
      294,  294,  294,  294,  294,  294,  294,  294,  294,  294,
      294,  294,  294,  294,  294,  294,  294,  294,  294,  294,
      294,  294,  294,  294,  294,  294,  294,  294,  294,  294,
      294,  294,  294,  294,  294,  294,  294,  294,  294,  294,

      294,  294,  294,  294,  294,  294,  294,  294,  294,  294,
      294,  295,  295,  295,  295,  295,  295,  295,  295,  295,
      295,  295,  295,  295,  295,  295,  295,  295,  295,  295,
      295,  295,  295,  295,  295,  295,  295,  295,  295,  295,
      295,  295,  295,  295, 1185,  295,  295,  295, 1184, 1183,
      295,  295,  295,  295,  295,  295,  295,  295,  295,  295,
      295,  295,  295,  295,  295,  295,  295,  295,  295,  295,
      295,  295,  295,  295,  295,  295,  295,  295,  295,  295,
      295,  295,  295,  295,  295,  295,  295,  295,  295,  295,
      295,  295,  295,  295,  295,  295,  295,  295,  295,  295,

      295,  295, 1182,  295,  295,  295,  295,  295,  295,  295,
      295,  295,  295,  295,  295,  295,  295,  295,  295,  295,
      295,  295,  295,  295,  295,  295,  295,  295,  295,  295,
      295,  295,  295,  295,  295,  295,  295,  295,  295,  295,
      295,  295,  295,  295,  295,  295,  295,  295,  295,  295,
      295,  295,  295,  295,  295,  295,  295,  295,  295,  295,
      295,  295,  295,  295,  295,  295,  295,  295,  295,  295,
      295,  295,  295,  295,  295,  295,  295,  295,  295,  295,
      295,  295,  295,  295,  295,  295,  295,  295,  295,  295,
      295,  295,  295,  295,  295,  295,  295,  295,  295,  295,

      295,  295,  295,  295,  295,  295,  295,  295,  295,  295,
      295,  295,  295,  295,  295,  295,  295,  295,  295,  295,
      295,  295,  295,  295,  295,  295,  295,  295,  295,  295,
      295,  295,  295,  295,  295,  295,  295,  295,  295,  295,
      295,  295,  295,  295,  295,  295,  295,  295,  295,  295,
      295,  295,  295,  295,  295,  295,  295,  295,  295,  295,
      295,  295,  295,  295,  295,  295,  342,  342,  342,  342,
      342,  342,  342,  342,  342,  342, 1181, 1180,  342,  342,
      342,  342,  342,  342,  342,  342,  342,  342,  342,  342,
      342,  342,  342,  342,  342,  342,  342,  342,  342,  342,

      342,  342,  342, 1179, 1178,  342,  342,  342,  342,  342,
      342,  342,  342,  342,  342,  342,  342,  342,  342,  342,
      342,  342,  342,  342,  342, 1177,  342, 1176,  342,  342,
      342,  342,  342,  342,  342,  342,  342,  342,  342,  342,
      342,  342,  342,  342,  342,  342,  342,  342,  342,  342,
      342,  342,  342,  342,  342,  342,  342, 1175,  342,  342,
      342,  342,  342,  342,  342,  342,  342,  342,  342,  342,
      342,  342,  342,  342,  342,  342,  342,  342,  342,  342,
      342,  342,  342,  342,  342,  342,  342,  342, 1174,  342,
      342,  342,  342,  342,  342,  342,  342,  342,  342,  342,

      342,  342,  342,  342,  342,  342,  342,  342,  342,  342,
      342,  342,  342,  342,  342,  342,  342,  342,  342,  342,
      342,  342,  342,  342,  342, 1173,  342,  342,  342,  342,
      342,  342,  342,  342,  342,  342,  342,  342,  342,  342,
      342,  342,  342,  342,  342,  342,  342,  342,  342,  342,
      342,  342,  342,  342,  342,  342,  342,  342,  342,  342,
      342,  342,  342,  342,  342,  342,  342,  342,  342,  342,
      342,  342,  342,  342,  342,  342,  342,  342,  342,  342,
      342,  342,  342,  342,  342,  342,  342,  342,  342,  342,
      342,  342,  342,  342,  342,  342,  342,  342,  342,  342,

      342,  342,  342,  342,  342,  342,  342,  342,  342,  342,
      342,  342,  342,  342,  342,  342,  342,  342,  342,  342,
      342,  349,  349,  349,  349,  349,  349,  349,  349,  349,
      349,  349,  349,  349,  349,  349,  349,  349,  349,  349,
      349,  349,  349,  349,  349,  349,  349,  349,  349,  349,
      349,  349,  349,  349,  349,  349,  349,  349,  349,  349,
      349,  349,  349,  349,  349,  349,  349,  349,  349,  349,
      349,  349,  349,  349,  349,  349,  349,  349,  349,  349,
      349,  349,  349,  349,  349,  349,  349,  349,  349,  349,
      349,  349,  349,  349,  349,  349,  349,  349,  349,  349,

      349,  349,  349,  349,  349,  349,  349,  349,  349,  349,
      349,  349,  349,  349,  349,  349,  349,  349,  349,  349,
      349,  349,  349,  349,  349,  349,  349,  349,  349,  349,
      349,  349,  349,  349,  349,  349,  349,  349,  349,  349,
      349,  349,  349,  349,  349,  349,  349,  349,  349,  349,
      349,  349,  349,  349,  349,  349,  349,  349,  349,  349,
      349,  349,  349,  349,  349,  349,  349,  349,  349,  349,
      349,  349,  349,  349,  349,  349,  349,  349,  349,  349,
      349,  349,  349,  349,  349,  349,  349,  349,  349,  349,
      349,  349,  349,  349,  349,  349,  349,  349,  349,  349,

      349,  349,  349,  349,  349,  349,  349,  349,  349,  349,
      349,  349,  349,  349,  349,  349,  349,  349,  349,  349,
      349,  349,  349,  349,  349,  349,  349,  349,  349,  349,
      349,  349,  349,  349,  349,  349,  349,  349,  349,  349,
      349,  349,  349,  349,  349,  349,  349,  349,  349,  349,
      349,  349,  349,  349,  349,  349,  349,  349,  349,  349,
      349,  349,  349,  349,  349,  349,  349,  349,  349,  349,
      349,  349,  349,  349,  349,  349,  359,  359,  359,  359,
      359,  359,  359,  359,  359,  359, 1172, 1171, 1170, 1169,
     1168, 1167, 1166,  359,  359,  359,  359,  359,  359,  359,

      359,  359,  359,  359,  359,  359,  359,  359,  359,  359,
      359,  359,  359,  359,  359,  359,  359,  359,  359, 1165,
     1164, 1163, 1162,  359, 1159,  359,  359,  359,  359,  359,
      359,  359,  359,  359,  359,  359,  359,  359,  359,  359,
      359,  359,  359,  359,  359,  359,  359,  359,  359,  359,
      359, 1158, 1157, 1156, 1155,  359,  359,  359,  359,  359,
      359,  359,  359,  359,  359,  359,  359,  359,  359,  359,
      359,  359,  359,  359,  359,  359,  359,  359,  359,  359,
      359,  359,  359,  359,  359,  359,  359,  359,  359,  359,
      359,  359,  359,  359,  359,  359,  359,  359,  359,  359,

      359,  359,  359,  359,  359,  359,  359,  359,  359,  359,
      359,  359,  359,  359,  359,  359,  359,  359,  359,  359,
      359,  359,  359,  359,  359,  359,  359,  359,  359,  359,
      359,  359,  359,  359,  359,  359,  359,  359,  359,  359,
      359,  359,  359,  359,  359,  359,  359,  359,  359,  359,
      359,  359,  359,  359,  359,  359,  359,  359,  359,  359,
      359,  359,  359,  359,  359,  359,  359,  359,  359,  359,
      359,  359,  359,  359,  359,  359,  359,  359,  359,  359,
      359,  359,  359,  359,  165,  165,  165,  165,  165,  165,
      165,  165,  165,  165,  165,  165,  165,  165,  165,  165,

      165,  165,  165,  165,  165,  165,  165,  165,  165,  165,
      165,  165,  165,  165,  165,  165,  165,  165,  165,  165,
      165,  165,  165,  165,  165,  165,  165,  165,  165,  165,
      165,  165,  165,  165,  165,  165,  165,  165,  165,  165,
      165,  165,  165, 1154,  165,  165,  165,  165,  165,  165,
      165,  165,  165,  165,  165,  165,  165,  165,  165,  165,
      165,  165,  165,  165,  165,  165,  165,  165,  165,  165,
      165,  165,  165,  165,  165,  165,  165,  165,  165,  165,
      165,  165,  165,  165,  165,  165,  165,  165,  165,  165,
      165,  165,  165,  165,  165,  165,  165,  165,  165,  165,

      165,  165,  165,  165,  165,  165,  165,  165,  165,  165,
      165,  165,  165,  165,  165,  165,  165,  165,  165,  165,
      165,  165,  165,  165,  165,  165,  165,  165,  165,  165,
      165,  165,  165,  165,  165,  165,  165,  165,  165,  165,
      165,  165,  165,  165,  165,  165,  165,  165,  165,  165,
      165,  165,  165,  165,  165,  165,  165,  165,  165,  165,
      165,  165,  165,  165,  165,  165,  165,  165,  165,  165,
      165,  165,  165,  165,  165,  165,  165,  165,  165,  165,
      165,  165,  165,  165,  165,  165,  165,  165,  165,  165,
      165,  165,  165,  165,  165,  165,  165,  165,  165,  165,

      165,  165,  165,  165,  165,  165,  165,  165,  165,  165,
      165,  165,  165,  165,  165,  165,  165,  165,  165,  165,
      165,  165,  165,  165,  165,  165,  165,  165,  165,  165,
      165,  165,  165,  165,  165,  165,  165,  165,  165,  170,
      170,  170,  170,  170,  170,  170,  170,  170,  170,  170,
      170,  170,  170,  170,  170,  170,  170,  170,  170,  170,
      170,  170,  170,  170,  170,  170,  170,  170,  170,  170,
      170,  170,  170,  170,  170,  170,  170,  170,  170,  170,
      170,  170,  170,  170,  170,  170,  170,  170,  170,  170,
      170,  170,  170,  170,  170,  170,  170,  170,  170,  170,

      170,  170,  170,  170,  170,  170,  170,  170,  170,  170,
      170,  170,  170,  170,  170,  170,  170,  170,  170,  170,
      170,  170,  170,  170,  170,  170,  170,  170,  170,  170,
      170,  170,  170,  170,  170,  170,  170,  170,  170,  170,
      170,  170,  170,  170,  170,  170,  170,  170,  170,  170,
      170,  170,  170,  170,  170,  170,  170,  170,  170,  170,
      170,  170,  170,  170,  170,  170,  170,  170,  170,  170,
      170,  170,  170,  170,  170,  170,  170,  170,  170,  170,
      170,  170,  170,  170,  170,  170,  170,  170,  170,  170,
      170,  170,  170,  170,  170,  170,  170,  170,  170,  170,

      170,  170,  170,  170,  170,  170,  170,  170,  170,  170,
      170,  170,  170,  170,  170,  170,  170,  170,  170,  170,
      170,  170,  170,  170,  170,  170,  170,  170,  170,  170,
      170,  170,  170,  170,  170,  170,  170,  170,  170,  170,
      170,  170,  170,  170,  170,  170,  170,  170,  170,  170,
      170,  170,  170,  170,  170,  170,  170,  170,  170,  170,
      170,  170,  170,  170,  170,  170,  170,  170,  170,  170,
      170,  170,  170,  170,  170,  170,  170,  170,  170,  170,
      170,  170,  170,  170,  170,  170,  170,  170,  170,  170,
      170,  170,  170,  170,  367,  367,  367,  367,  367,  367,

      367,  367,  367,  367,  367,  367,  367,  367,  367,  367,
      367,  367,  367,  367,  367,  367,  367,  367,  367,  367,
      367,  367,  367,  367,  367,  367,  367,  367,  367,  367,
      367,  367,  367,  367,  367,  367,  367,  367,  367,  367,
      367,  367,  367,  367,  367,  367,  367,  367,  367,  367,
      367,  367,  367,  367,  367,  367,  367,  367,  367,  367,
      367,  367,  367,  367,  367,  367,  367,  367,  367,  367,
      367,  367,  367,  367,  367,  367,  367,  367,  367,  367,
      367,  367,  367,  367,  367,  367,  367,  367,  367,  367,
      367,  367,  367,  367,  367,  367,  367,  367,  367,  367,

      367,  367,  367,  367,  367,  367,  367,  367,  367,  367,
      367,  367,  367,  367,  367,  367,  367,  367,  367,  367,
      367,  367,  367,  367,  367,  367,  367,  367,  367,  367,
      367,  367,  367,  367,  367,  367,  367,  367,  367,  367,
      367,  367,  367,  367,  367,  367,  367,  367,  367,  367,
      367,  367,  367,  367,  367,  367,  367,  367,  367,  367,
      367,  367,  367,  367,  367,  367,  367,  367,  367,  367,
      367,  367,  367,  367,  367,  367,  367,  367,  367,  367,
      367,  367,  367,  367,  367,  367,  367,  367,  367,  367,
      367,  367,  367,  367,  367,  367,  367,  367,  367,  367,

      367,  367,  367,  367,  367,  367,  367,  367,  367,  367,
      367,  367,  367,  367,  367,  367,  367,  367,  367,  367,
      367,  367,  367,  367,  367,  367,  367,  367,  367,  367,
      367,  367,  367,  367,  367,  367,  367,  367,  367,  367,
      367,  367,  367,  367,  367,  367,  367,  367,  367,  368,
      368,  368,  368,  368,  368,  368,  368,  368,  368, 1153,
     1152, 1151, 1150, 1149, 1148, 1147,  368,  368,  368,  368,
      368,  368,  368,  368,  368,  368,  368,  368,  368,  368,
      368,  368,  368,  368,  368,  368,  368,  368,  368,  368,
      368,  368, 1146, 1145, 1144, 1143,  368, 1142,  368,  368,

      368,  368,  368,  368,  368,  368,  368,  368,  368,  368,
      368,  368,  368,  368,  368,  368,  368,  368,  368,  368,
      368,  368,  368,  368, 1141, 1140, 1139, 1138,  368,  368,
      368,  368,  368,  368,  368,  368,  368,  368,  368,  368,
      368,  368,  368,  368,  368,  368,  368,  368,  368,  368,
      368,  368,  368,  368,  368,  368,  368,  368,  368,  368,
      368,  368,  368,  368,  368,  368,  368,  368,  368,  368,
      368,  368,  368,  368,  368,  368,  368,  368,  368,  368,
      368,  368,  368,  368,  368,  368,  368,  368,  368,  368,
      368,  368,  368,  368,  368,  368,  368,  368,  368,  368,

      368,  368,  368,  368,  368,  368,  368,  368,  368,  368,
      368,  368,  368,  368,  368,  368,  368,  368,  368,  368,
      368,  368,  368,  368,  368,  368,  368,  368,  368,  368,
      368,  368,  368,  368,  368,  368,  368,  368,  368,  368,
      368,  368,  368,  368,  368,  368,  368,  368,  368,  368,
      368,  368,  368,  368,  368,  368,  368,  178,  178,  178,
      178,  178,  178,  178,  178,  178,  178,  178,  178,  178,
      178,  178,  178,  178,  178,  178,  178,  178,  178,  178,
      178,  178,  178,  178,  178,  178,  178,  178,  178,  178,
      178,  178,  178,  178,  178,  178,  178,  178,  178,  178,

      178,  178,  178,  178,  178,  178,  178,  178,  178,  178,
      178,  178,  178,  178,  178,  178,  178,  178,  178,  178,
      178,  178,  178,  178,  178,  178,  178,  178,  178,  178,
      178,  178,  178,  178,  178,  178,  178,  178,  178,  178,
      178,  178,  178,  178,  178,  178,  178,  178,  178,  178,
      178,  178,  178,  178,  178,  178,  178,  178,  178,  178,
      178,  178,  178,  178,  178,  178,  178,  178,  178,  178,
      178,  178,  178,  178,  178,  178,  178,  178,  178,  178,
      178,  178,  178,  178,  178,  178,  178,  178,  178,  178,
      178,  178,  178,  178,  178,  178,  178,  178,  178,  178,

      178,  178,  178,  178,  178,  178,  178,  178,  178,  178,
      178,  178,  178,  178,  178,  178,  178,  178,  178,  178,
      178,  178,  178,  178,  178,  178,  178,  178,  178,  178,
      178,  178,  178,  178,  178,  178,  178,  178,  178,  178,
      178,  178,  178,  178,  178,  178,  178,  178,  178,  178,
      178,  178,  178,  178,  178,  178,  178,  178,  178,  178,
      178,  178,  178,  178,  178,  178,  178,  178,  178,  178,
      178,  178,  178,  178,  178,  178,  178,  178,  178,  178,
      178,  178,  178,  178,  178,  178,  178,  178,  178,  178,
      178,  178,  178,  178,  178,  178,  178,  178,  178,  178,

      178,  178,  178,  178,  178,  178,  178,  178,  178,  178,
      178,  178,  369,  369,  369,  369,  369,  369,  369,  369,
      369,  369,  369,  369,  369,  369,  369,  369,  369,  369,
      369,  369,  369,  369,  369,  369,  369,  369,  369,  369,
      369,  369,  369,  369,  369,  369,  369,  369,  369,  369,
      369,  369,  369,  369,  369,  369,  369,  369,  369,  369,
      369,  369,  369,  369,  369,  369,  369,  369,  369,  369,
      369,  369,  369,  369,  369,  369,  369,  369,  369,  369,
      369,  369,  369,  369,  369,  369,  369,  369,  369,  369,
      369,  369,  369,  369,  369,  369,  369,  369,  369,  369,

      369,  369,  369,  369,  369,  369,  369,  369,  369,  369,
      369,  369,  369,  369,  369,  369,  369,  369,  369,  369,
      369,  369,  369,  369,  369,  369,  369,  369,  369,  369,
      369,  369,  369,  369,  369,  369,  369,  369,  369,  369,
      369,  369,  369,  369,  369,  369,  369,  369,  369,  369,
      369,  369,  369,  369,  369,  369,  369,  369,  369,  369,
      369,  369,  369,  369,  369,  369,  369,  369,  369,  369,
      369,  369,  369,  369,  369,  369,  369,  369,  369,  369,
      369,  369,  369,  369,  369,  369,  369,  369,  369,  369,
      369,  369,  369,  369,  369,  369,  369,  369,  369,  369,

      369,  369,  369,  369,  369,  369,  369,  369,  369,  369,
      369,  369,  369,  369,  369,  369,  369,  369,  369,  369,
      369,  369,  369,  369,  369,  369,  369,  369,  369,  369,
      369,  369,  369,  369,  369,  369,  369,  369,  369,  369,
      369,  369,  369,  369,  369,  369,  369,  369,  369,  369,
      369,  369,  369,  369,  369,  369,  369,  369,  369,  369,
      369,  369,  369,  369,  369,  369,  369,  215,  215,  215,
      215,  215,  215,  215,  215,  215,  215, 1137, 1136, 1135,
     1134, 1133, 1132, 1131,  215,  215,  215,  215,  215,  215,
      215,  215,  215,  215,  215,  215,  215,  215,  215,  215,

      215,  215,  215,  215,  215,  215,  215,  215,  215,  215,
     1130, 1129, 1128, 1127,  215, 1126,  215,  215,  215,  215,
      215,  215,  215,  215,  215,  215,  215,  215,  215,  215,
      215,  215,  215,  215,  215,  215,  215,  215,  215,  215,
      215,  215, 1125, 1124, 1123, 1122,  215,  215,  215,  215,
      215,  215,  215,  215,  215,  215,  215,  215,  215,  215,
      215,  215,  215,  215,  215,  215,  215,  215,  215,  215,
      215,  215,  215,  215,  215,  215,  215,  215,  215,  215,
      215,  215,  215,  215,  215,  215,  215,  215,  215,  215,
      215,  215,  215,  215,  215,  215,  215,  215,  215,  215,

      215,  215,  215,  215,  215,  215,  215,  215,  215,  215,
      215,  215,  215,  215,  215,  215,  215,  215,  215,  215,
      215,  215,  215,  215,  215,  215,  215,  215,  215,  215,
      215,  215,  215,  215,  215,  215,  215,  215,  215,  215,
      215,  215,  215,  215,  215,  215,  215,  215,  215,  215,
      215,  215,  215,  215,  215,  215,  215,  215,  215,  215,
      215,  215,  215,  215,  215,  215,  215,  215,  215,  215,
      215,  215,  215,  215,  215,  264,  264,  264,  264,  264,
      264,  264,  264,  264,  264,  264,  264,  264,  264,  264,
      264,  264,  264,  264,  264,  264,  264,  264,  264,  264,

      264,  264,  264,  264,  264,  264,  264,  264,  264,  264,
      264,  264,  264,  264,  264,  264,  264,  264,  264,  264,
      264,  264,  264,  264,  264,  264,  264,  264,  264,  264,
      264,  264,  264,  264,  264,  264,  264,  264,  264,  264,
      264,  264,  264,  264,  264,  264,  264,  264,  264,  264,
      264,  264,  264,  264,  264,  264,  264,  264,  264,  264,
      264,  264,  264,  264,  264,  264,  264,  264,  264,  264,
      264,  264,  264,  264,  264,  264,  264,  264,  264,  264,
      264,  264,  264,  264,  264,  264,  264,  264,  264,  264,
      264,  264,  264,  264,  264,  264,  264,  264,  264,  264,

      264,  264,  264,  264,  264,  264,  264,  264,  264,  264,
      264,  264,  264,  264,  264,  264,  264,  264,  264,  264,
      264,  264,  264,  264,  264,  264,  264,  264,  264,  264,
      264,  264,  264,  264,  264,  264,  264,  264,  264,  264,
      264,  264,  264,  264,  264,  264,  264,  264,  264,  264,
      264,  264,  264,  264,  264,  264,  264,  264,  264,  264,
      264,  264,  264,  264,  264,  264,  264,  264,  264,  264,
      264,  264,  264,  264,  264,  264,  264,  264,  264,  264,
      264,  264,  264,  264,  264,  264,  264,  264,  264,  264,
      264,  264,  264,  264,  264,  264,  264,  264,  264,  264,

      264,  264,  264,  264,  264,  264,  264,  264,  264,  264,
      264,  264,  264,  264,  264,  264,  264,  264,  264,  264,
      264,  264,  264,  264,  264,  264,  264,  264,  264,  264,
      268,  268,  268,  268,  268,  268,  268,  268,  268, 1121,
      268,  268, 1120,  268,  268,  268,  268,  268,  268,  268,
      268,  268,  268,  268,  268,  268,  268,  268,  268,  268,
      268,  268,  268,  268,  268,  268,  268,  268,  268,  268,
      268, 1119,  268,  268,  268,  268,  268,  268,  268,  268,
      268,  268,  268,  268,  268,  268,  268,  268,  268,  268,
      268,  268,  268,  268,  268,  268,  268,  268,  268,  268,

      268,  268,  268,  268,  268,  268,  268,  268,  268,  268,
      268,  268,  268,  268,  268,  268,  268,  268,  268,  268,
      268,  268,  268,  268,  268,  268,  268,  268,  268,  268,
      268,  268,  268,  268,  268,  268,  268,  268,  268,  268,
      268,  268,  268,  268,  268,  268,  268,  268,  268,  268,
      268,  268,  268,  268,  268,  268,  268,  268,  268,  268,
      268,  268,  268,  268,  268,  268,  268,  268,  268,  268,
      268,  268,  268,  268,  268,  268,  268,  268,  268,  268,
      268,  268,  268,  268,  268,  268,  268,  268,  268,  268,
      268,  268,  268,  268,  268,  268,  268,  268,  268,  268,

      268,  268,  268,  268,  268,  268,  268,  268,  268,  268,
      268,  268,  268,  268,  268,  268,  268,  268,  268,  268,
      268,  268,  268,  268,  268,  268,  268,  268,  268,  268,
      268,  268,  268,  268,  268,  268,  268,  268,  268,  268,
      268,  268,  268,  268,  268,  268,  268,  268,  268,  268,
      268,  268,  268,  268,  268,  268,  268,  268,  268,  268,
      268,  268,  268,  268,  268,  268,  268,  268,  268,  268,
      268,  268,  268,  268,  268,  268,  268,  268,  268,  268,
      268,  268,  268,  268,  268,  271,  271,  271,  271,  271,
      271,  271,  271,  271, 1118,  271,  271, 1117,  271,  271,

      271,  271,  271,  271,  271,  271,  271,  271,  271,  271,
      271,  271,  271,  271,  271,  271,  271,  271,  271,  271,
      271,  271,  271,  271,  271,  271,  271,  271,  271,  271,
      271,  271,  271,  271,  271,  271,  271,  271,  271,  271,
      271,  271,  271,  271,  271,  271,  271, 1116,  271,  271,
      271,  271,  271,  271,  271,  271,  271,  271,  271,  271,
      271,  271,  271,  271,  271,  271,  271,  271,  271,  271,
      271,  271,  271,  271,  271,  271,  271,  271,  271,  271,
      271,  271,  271,  271,  271,  271,  271,  271,  271,  271,
      271,  271,  271,  271,  271,  271,  271,  271,  271,  271,

      271,  271,  271,  271,  271,  271,  271,  271,  271,  271,
      271,  271,  271,  271,  271,  271,  271,  271,  271,  271,
      271,  271,  271,  271,  271,  271,  271,  271,  271,  271,
      271,  271,  271,  271,  271,  271,  271,  271,  271,  271,
      271,  271,  271,  271,  271,  271,  271,  271,  271,  271,
      271,  271,  271,  271,  271,  271,  271,  271,  271,  271,
      271,  271,  271,  271,  271,  271,  271,  271,  271,  271,
      271,  271,  271,  271,  271,  271,  271,  271,  271,  271,
      271,  271,  271,  271,  271,  271,  271,  271,  271,  271,
      271,  271,  271,  271,  271,  271,  271,  271,  271,  271,

      271,  271,  271,  271,  271,  271,  271,  271,  271,  271,
      271,  271,  271,  271,  271,  271,  271,  271,  271,  271,
      271,  271,  271,  271,  271,  271,  271,  271,  271,  271,
      271,  271,  271,  271,  271,  271,  271,  271,  271,  271,
      448, 1115, 1114, 1113, 1112, 1111, 1110, 1109, 1108, 1107,
     1106, 1105, 1104, 1103,  448,  448,  448,  448,  448,  448,
      448,  448,  448,  448, 1102, 1101, 1100, 1099, 1098, 1097,
     1096,  448,  448,  448,  448,  448,  448,  448,  448,  448,
      448,  448,  448,  448,  448,  448,  448,  448,  448,  448,
      448,  448,  448,  448,  448,  448,  448, 1095, 1094, 1093,

     1092,  448, 1091,  448,  448,  448,  448,  448,  448,  448,
      448,  448,  448,  448,  448,  448,  448,  448,  448,  448,
      448,  448,  448,  448,  448,  448,  448,  448,  448, 1090,
     1089, 1088, 1087,  448,  448,  448,  448,  448,  448,  448,
      448,  448,  448,  448,  448,  448,  448,  448,  448,  448,
      448,  448,  448,  448,  448,  448,  448,  448,  448,  448,
      448,  448,  448,  448,  448,  448,  448,  448,  448,  448,
      448,  448,  448,  448,  448,  448,  448,  448,  448,  448,
      448,  448,  448,  448,  448,  448,  448,  448,  448,  448,
      448,  448,  448,  448,  448,  448,  448,  448,  448,  448,

      448,  448,  448,  448,  448,  448,  448,  448,  448,  448,
      448,  448,  448,  448,  448,  448,  448,  448,  448,  448,
      448,  448,  448,  448,  448,  448,  448,  448,  448,  448,
      448,  448,  448,  448,  448,  448,  448,  448,  448,  448,
      448,  448,  448,  448,  448,  448,  448,  448,  448,  448,
      448,  448,  448,  448,  448,  448,  448,  448,  448,  448,
      448,  448,  449, 1086, 1085, 1084, 1083, 1082, 1081, 1080,
     1079,  449,  449,  449,  449,  449,  449,  449,  449,  449,
      449, 1078, 1077, 1076, 1075, 1074, 1073, 1072,  449,  449,
      449,  449,  449,  449,  449,  449,  449,  449,  449,  449,

      449,  449,  449,  449,  449,  449,  449,  449,  449,  449,
      449,  449,  449,  449, 1071, 1070, 1069, 1068,  449, 1067,
      449,  449,  449,  449,  449,  449,  449,  449,  449,  449,
      449,  449,  449,  449,  449,  449,  449,  449,  449,  449,
      449,  449,  449,  449,  449,  449, 1066, 1065, 1064, 1063,
      449,  449,  449,  449,  449,  449,  449,  449,  449,  449,
      449,  449,  449,  449,  449,  449,  449,  449,  449,  449,
      449,  449,  449,  449,  449,  449,  449,  449,  449,  449,
      449,  449,  449,  449,  449,  449,  449,  449,  449,  449,
      449,  449,  449,  449,  449,  449,  449,  449,  449,  449,

      449,  449,  449,  449,  449,  449,  449,  449,  449,  449,
      449,  449,  449,  449,  449,  449,  449,  449,  449,  449,
      449,  449,  449,  449,  449,  449,  449,  449,  449,  449,
      449,  449,  449,  449,  449,  449,  449,  449,  449,  449,
      449,  449,  449,  449,  449,  449,  449,  449,  449,  449,
      449,  449,  449,  449,  449,  449,  449,  449,  449,  449,
      449,  449,  449,  449,  449,  449,  449,  449,  449,  449,
      449,  449,  449,  449,  449,  449,  449,  449,  449,  277,
      277,  277,  277,  277,  277,  277,  277,  277,  277, 1062,
     1061, 1060, 1059, 1058, 1057, 1056,  277,  277,  277,  277,

      277,  277,  277,  277,  277,  277,  277,  277,  277,  277,
      277,  277,  277,  277,  277,  277,  277,  277,  277,  277,
      277,  277, 1055, 1054, 1053, 1052,  277, 1051,  277,  277,
      277,  277,  277,  277,  277,  277,  277,  277,  277,  277,
      277,  277,  277,  277,  277,  277,  277,  277,  277,  277,
      277,  277,  277,  277, 1050,  972,  971,  970,  277,  277,
      277,  277,  277,  277,  277,  277,  277,  277,  277,  277,
      277,  277,  277,  277,  277,  277,  277,  277,  277,  277,
      277,  277,  277,  277,  277,  277,  277,  277,  277,  277,
      277,  277,  277,  277,  277,  277,  277,  277,  277,  277,

      277,  277,  277,  277,  277,  277,  277,  277,  277,  277,
      277,  277,  277,  277,  277,  277,  277,  277,  277,  277,
      277,  277,  277,  277,  277,  277,  277,  277,  277,  277,
      277,  277,  277,  277,  277,  277,  277,  277,  277,  277,
      277,  277,  277,  277,  277,  277,  277,  277,  277,  277,
      277,  277,  277,  277,  277,  277,  277,  277,  277,  277,
      277,  277,  277,  277,  277,  277,  277,  277,  277,  277,
      277,  277,  277,  277,  277,  277,  277,  277,  277,  277,
      277,  277,  277,  277,  277,  277,  277,  279,  279,  279,
      279,  279,  279,  279,  279,  279,  969,  279,  279,  968,

      279,  279,  279,  279,  279,  279,  279,  279,  279,  279,
      279,  279,  279,  279,  279,  279,  279,  279,  279,  279,
      279,  279,  279,  279,  279,  279,  279,  279,  279,  279,
      279,  279,  279,  279,  279,  279,  279,  279,  279,  279,
      279,  279,  279,  279,  279,  279,  279,  279,  279,  279,
      279,  279,  279,  279,  279,  279,  279,  279,  279,  279,
      279,  279,  279,  279,  279,  279,  279,  279,  279,  279,
      279,  279,  279,  279,  279,  279,  279,  279,  279,  279,
      279,  279,  279,  279,  279,  279,  279,  279,  279,  279,
      279,  279,  279,  279,  279,  279,  279,  279,  279,  279,

      279,  279,  279,  279,  279,  279,  279,  279,  279,  279,
      279,  279,  279,  279,  279,  279,  279,  279,  279,  279,
      279,  279,  279,  279,  279,  279,  279,  279,  279,  279,
      279,  279,  279,  279,  279,  279,  279,  279,  279,  279,
      279,  279,  279,  279,  279,  279,  279,  279,  279,  279,
      279,  279,  279,  279,  279,  279,  279,  279,  279,  279,
      279,  279,  279,  279,  279,  279,  279,  279,  279,  279,
      279,  279,  279,  279,  279,  279,  279,  279,  279,  279,
      279,  279,  279,  279,  279,  279,  279,  279,  279,  279,
      279,  279,  279,  279,  279,  279,  279,  279,  279,  279,

      279,  279,  279,  279,  279,  279,  279,  279,  279,  279,
      279,  279,  279,  279,  279,  279,  279,  279,  279,  279,
      279,  279,  279,  279,  279,  279,  279,  279,  279,  279,
      279,  279,  279,  279,  279,  279,  279,  279,  279,  279,
      279,  279,  283,  283,  283,  283,  283,  283,  283,  283,
      283,  283,  283,  283,  283,  283,  283,  283,  283,  283,
      283,  283,  283,  283,  283,  283,  283,  283,  283,  283,
      283,  283,  283,  283,  283,  283,  283,  283,  283,  283,
      283,  283,  283,  283,  283,  283,  283,  283,  283,  283,
      283,  283,  283,  283,  283,  283,  283,  283,  283,  283,

      283,  283,  283,  283,  283,  283,  283,  283,  283,  283,
      283,  283,  283,  283,  283,  283,  283,  283,  283,  283,
      283,  283,  283,  283,  283,  283,  283,  283,  283,  283,
      283,  283,  283,  283,  283,  283,  283,  283,  283,  283,
      283,  283,  283,  283,  283,  283,  283,  283,  283,  283,
      283,  283,  283,  283,  283,  283,  283,  283,  283,  283,
      283,  283,  283,  283,  283,  283,  283,  283,  283,  283,
      283,  283,  283,  283,  283,  283,  283,  283,  283,  283,
      283,  283,  283,  283,  283,  283,  283,  283,  283,  283,
      283,  283,  283,  283,  283,  283,  283,  283,  283,  283,

      283,  283,  283,  283,  283,  283,  283,  283,  283,  283,
      283,  283,  283,  283,  283,  283,  283,  283,  283,  283,
      283,  283,  283,  283,  283,  283,  283,  283,  283,  283,
      283,  283,  283,  283,  283,  283,  283,  283,  283,  283,
      283,  283,  283,  283,  283,  283,  283,  283,  283,  283,
      283,  283,  283,  283,  283,  283,  283,  283,  283,  283,
      283,  283,  283,  283,  283,  283,  283,  283,  283,  283,
      283,  283,  283,  283,  283,  283,  283,  283,  283,  283,
      283,  283,  283,  283,  283,  283,  283,  283,  283,  283,
      283,  283,  283,  283,  283,  283,  283,  285,  285,  285,

      285,  285,  285,  285,  285,  285,  285,  285,  285,  285,
      285,  285,  285,  285,  285,  285,  285,  285,  285,  285,
      285,  285,  285,  285,  285,  285,  285,  285,  285,  285,
      285,  285,  285,  285,  285,  285,  285,  285,  285,  285,
      285,  285,  285,  285,  285,  285,  285,  285,  285,  285,
      285,  285,  285,  285,  285,  285,  285,  285,  285,  285,
      285,  285,  285,  285,  285,  285,  285,  285,  285,  285,
      285,  285,  285,  285,  285,  285,  285,  285,  285,  285,
      285,  285,  285,  285,  285,  285,  285,  285,  285,  285,
      285,  285,  285,  285,  285,  285,  285,  285,  285,  285,

      285,  285,  285,  285,  285,  285,  285,  285,  285,  285,
      285,  285,  285,  285,  285,  285,  285,  285,  285,  285,
      285,  285,  285,  285,  285,  285,  285,  285,  285,  285,
      285,  285,  285,  285,  285,  285,  285,  285,  285,  285,
      285,  285,  285,  285,  285,  285,  285,  285,  285,  285,
      285,  285,  285,  285,  285,  285,  285,  285,  285,  285,
      285,  285,  285,  285,  285,  285,  285,  285,  285,  285,
      285,  285,  285,  285,  285,  285,  285,  285,  285,  285,
      285,  285,  285,  285,  285,  285,  285,  285,  285,  285,
      285,  285,  285,  285,  285,  285,  285,  285,  285,  285,

      285,  285,  285,  285,  285,  285,  285,  285,  285,  285,
      285,  285,  285,  285,  285,  285,  285,  285,  285,  285,
      285,  285,  285,  285,  285,  285,  285,  285,  285,  285,
      285,  285,  285,  285,  285,  285,  285,  285,  285,  285,
      285,  285,  285,  285,  285,  285,  285,  285,  285,  285,
      285,  285,  291,  291,  291,  291,  291,  291,  291,  291,
      291,  291,  967,  966,  965,  962,  961,  958,  957,  291,
      291,  291,  291,  291,  291,  291,  291,  291,  291,  291,
      291,  291,  291,  291,  291,  291,  291,  291,  291,  291,
      291,  291,  291,  291,  291,  950,  949,  945,  944,  291,

      941,  291,  291,  291,  291,  291,  291,  291,  291,  291,
      291,  291,  291,  291,  291,  291,  291,  291,  291,  291,
      291,  291,  291,  291,  291,  291,  291,  940,  939,  938,
      937,  291,  291,  291,  291,  291,  291,  291,  291,  291,
      291,  291,  291,  291,  291,  291,  291,  291,  291,  291,
      291,  291,  291,  291,  291,  291,  291,  291,  291,  291,
      291,  291,  291,  291,  291,  291,  291,  291,  291,  291,
      291,  291,  291,  291,  291,  291,  291,  291,  291,  291,
      291,  291,  291,  291,  291,  291,  291,  291,  291,  291,
      291,  291,  291,  291,  291,  291,  291,  291,  291,  291,

      291,  291,  291,  291,  291,  291,  291,  291,  291,  291,
      291,  291,  291,  291,  291,  291,  291,  291,  291,  291,
      291,  291,  291,  291,  291,  291,  291,  291,  291,  291,
      291,  291,  291,  291,  291,  291,  291,  291,  291,  291,
      291,  291,  291,  291,  291,  291,  291,  291,  291,  291,
      291,  291,  291,  291,  291,  291,  291,  291,  291,  291,
      294,  294,  294,  294,  294,  294,  294,  294,  294,  294,
      934,  933,  932,  929,  928,  923,  922,  294,  294,  294,
      294,  294,  294,  294,  294,  294,  294,  294,  294,  294,
      294,  294,  294,  294,  294,  294,  294,  294,  294,  294,

      294,  294,  294,  921,  918,  917,  914,  294,  913,  294,
      294,  294,  294,  294,  294,  294,  294,  294,  294,  294,
      294,  294,  294,  294,  294,  294,  294,  294,  294,  294,
      294,  294,  294,  294,  294,  912,  911,  910,  909,  294,
      294,  294,  294,  294,  294,  294,  294,  294,  294,  294,
      294,  294,  294,  294,  294,  294,  294,  294,  294,  294,
      294,  294,  294,  294,  294,  294,  294,  294,  294,  294,
      294,  294,  294,  294,  294,  294,  294,  294,  294,  294,
      294,  294,  294,  294,  294,  294,  294,  294,  294,  294,
      294,  294,  294,  294,  294,  294,  294,  294,  294,  294,

      294,  294,  294,  294,  294,  294,  294,  294,  294,  294,
      294,  294,  294,  294,  294,  294,  294,  294,  294,  294,
      294,  294,  294,  294,  294,  294,  294,  294,  294,  294,
      294,  294,  294,  294,  294,  294,  294,  294,  294,  294,
      294,  294,  294,  294,  294,  294,  294,  294,  294,  294,
      294,  294,  294,  294,  294,  294,  294,  294,  294,  294,
      294,  294,  294,  294,  294,  294,  294,  294,  295,  295,
      295,  295,  295,  295,  295,  295,  295,  295,  295,  295,
      295,  295,  295,  295,  295,  295,  295,  295,  295,  295,
      295,  295,  295,  295,  295,  295,  295,  295,  295,  295,

      295,  906,  295,  295,  295,  903,  902,  295,  295,  295,
      295,  295,  295,  295,  295,  295,  295,  295,  295,  295,
      295,  295,  295,  295,  295,  295,  295,  295,  295,  295,
      295,  295,  295,  295,  295,  295,  295,  295,  295,  295,
      295,  295,  295,  295,  295,  295,  295,  295,  295,  295,
      295,  295,  295,  295,  295,  295,  295,  295,  295,  901,
      295,  295,  295,  295,  295,  295,  295,  295,  295,  295,
      295,  295,  295,  295,  295,  295,  295,  295,  295,  295,
      295,  295,  295,  295,  295,  295,  295,  295,  295,  295,
      295,  295,  295,  295,  295,  295,  295,  295,  295,  295,

      295,  295,  295,  295,  295,  295,  295,  295,  295,  295,
      295,  295,  295,  295,  295,  295,  295,  295,  295,  295,
      295,  295,  295,  295,  295,  295,  295,  295,  295,  295,
      295,  295,  295,  295,  295,  295,  295,  295,  295,  295,
      295,  295,  295,  295,  295,  295,  295,  295,  295,  295,
      295,  295,  295,  295,  295,  295,  295,  295,  295,  295,
      295,  295,  295,  295,  295,  295,  295,  295,  295,  295,
      295,  295,  295,  295,  295,  295,  295,  295,  295,  295,
      295,  295,  295,  295,  295,  295,  295,  295,  295,  295,
      295,  295,  295,  295,  295,  295,  295,  295,  295,  295,

      295,  295,  295,  295,  295,  295,  295,  295,  295,  295,
      295,  295,  295,  295,  295,  295,  295,  295,  295,  295,
      295,  295,  295,  342,  342,  342,  342,  342,  342,  342,
      342,  342,  342,  900,  899,  342,  342,  342,  342,  342,
      342,  342,  342,  342,  342,  342,  342,  342,  342,  342,
      342,  342,  342,  342,  342,  342,  342,  342,  342,  342,
      898,  897,  342,  342,  342,  342,  342,  342,  342,  342,
      342,  342,  342,  342,  342,  342,  342,  342,  342,  342,
      342,  342,  896,  342,  895,  342,  342,  342,  342,  342,
      342,  342,  342,  342,  342,  342,  342,  342,  342,  342,

      342,  342,  342,  342,  342,  342,  342,  342,  342,  342,
      342,  342,  342,  342,  894,  342,  342,  342,  342,  342,
      342,  342,  342,  342,  342,  342,  342,  342,  342,  342,
      342,  342,  342,  342,  342,  342,  342,  342,  342,  342,
      342,  342,  342,  342,  342,  893,  342,  342,  342,  342,
      342,  342,  342,  342,  342,  342,  342,  342,  342,  342,
      342,  342,  342,  342,  342,  342,  342,  342,  342,  342,
      342,  342,  342,  342,  342,  342,  342,  342,  342,  342,
      342,  342,  892,  342,  342,  342,  342,  342,  342,  342,
      342,  342,  342,  342,  342,  342,  342,  342,  342,  342,

      342,  342,  342,  342,  342,  342,  342,  342,  342,  342,
      342,  342,  342,  342,  342,  342,  342,  342,  342,  342,
      342,  342,  342,  342,  342,  342,  342,  342,  342,  342,
      342,  342,  342,  342,  342,  342,  342,  342,  342,  342,
      342,  342,  342,  342,  342,  342,  342,  342,  342,  342,
      342,  342,  342,  342,  342,  342,  342,  342,  342,  342,
      342,  342,  342,  342,  342,  342,  342,  342,  342,  342,
      342,  342,  342,  342,  342,  342,  342,  342,  650,  650,
      650,  650,  650,  650,  650,  650,  650,  650,  650,  650,
      650,  650,  650,  650,  650,  650,  650,  650,  650,  650,

      650,  650,  650,  650,  650,  650,  650,  650,  650,  650,
      650,  650,  650,  650,  650,  650,  650,  650,  650,  650,
      650,  650,  650,  650,  650,  650,  650,  650,  650,  650,
      650,  650,  650,  650,  650,  650,  650,  650,  650,  650,
      650,  650,  650,  650,  650,  650,  650,  650,  650,  650,
      650,  650,  650,  650,  650,  650,  650,  650,  650,  650,
      650,  650,  650,  650,  650,  650,  650,  650,  650,  650,
      650,  650,  650,  650,  650,  650,  650,  650,  650,  650,
      650,  650,  650,  650,  650,  650,  650,  650,  650,  650,
      650,  650,  650,  650,  650,  650,  650,  650,  650,  650,

      650,  650,  650,  650,  650,  650,  650,  650,  650,  650,
      650,  650,  650,  650,  650,  650,  650,  650,  650,  650,
      650,  650,  650,  650,  650,  650,  650,  650,  650,  650,
      650,  650,  650,  650,  650,  650,  650,  650,  650,  650,
      650,  650,  650,  650,  650,  650,  650,  650,  650,  650,
      650,  650,  650,  650,  650,  650,  650,  650,  650,  650,
      650,  650,  650,  650,  650,  650,  650,  650,  650,  650,
      650,  650,  650,  650,  650,  650,  650,  650,  650,  650,
      650,  650,  650,  650,  650,  650,  650,  650,  650,  650,
      650,  650,  650,  650,  650,  650,  650,  650,  650,  650,

      650,  650,  650,  650,  650,  650,  650,  650,  650,  650,
      650,  650,  650,  650,  650,  650,  650,  650,  650,  650,
      650,  650,  650,  650,  650,  650,  650,  650,  650,  650,
      650,  650,  650,  215,  215,  215,  215,  215,  215,  215,
      215,  215,  215,  891,  890,  889,  885,  884,  883,  880,
      215,  215,  215,  215,  215,  215,  215,  215,  215,  215,
      215,  215,  215,  215,  215,  215,  215,  215,  215,  215,
      215,  215,  215,  215,  215,  215,  877,  876,  875,  874,
      215,  869,  215,  215,  215,  215,  215,  215,  215,  215,
      215,  215,  215,  215,  215,  215,  215,  215,  215,  215,

      215,  215,  215,  215,  215,  215,  215,  215,  868,  867,
      866,  865,  215,  215,  215,  215,  215,  215,  215,  215,
      215,  215,  215,  215,  215,  215,  215,  215,  215,  215,
      215,  215,  215,  215,  215,  215,  215,  215,  215,  215,
      215,  215,  215,  215,  215,  215,  215,  215,  215,  215,
      215,  215,  215,  215,  215,  215,  215,  215,  215,  215,
      215,  215,  215,  215,  215,  215,  215,  215,  215,  215,
      215,  215,  215,  215,  215,  215,  215,  215,  215,  215,
      215,  215,  215,  215,  215,  215,  215,  215,  215,  215,
      215,  215,  215,  215,  215,  215,  215,  215,  215,  215,

      215,  215,  215,  215,  215,  215,  215,  215,  215,  215,
      215,  215,  215,  215,  215,  215,  215,  215,  215,  215,
      215,  215,  215,  215,  215,  215,  215,  215,  215,  215,
      215,  215,  215,  215,  215,  215,  215,  215,  215,  215,
      215,  359,  359,  359,  359,  359,  359,  359,  359,  359,
      359,  864,  861,  860,  859,  858,  857,  854,  359,  359,
      359,  359,  359,  359,  359,  359,  359,  359,  359,  359,
      359,  359,  359,  359,  359,  359,  359,  359,  359,  359,
      359,  359,  359,  359,  853,  852,  851,  850,  359,  849,
      359,  359,  359,  359,  359,  359,  359,  359,  359,  359,

      359,  359,  359,  359,  359,  359,  359,  359,  359,  359,
      359,  359,  359,  359,  359,  359,  848,  847,  846,  841,
      359,  359,  359,  359,  359,  359,  359,  359,  359,  359,
      359,  359,  359,  359,  359,  359,  359,  359,  359,  359,
      359,  359,  359,  359,  359,  359,  359,  359,  359,  359,
      359,  359,  359,  359,  359,  359,  359,  359,  359,  359,
      359,  359,  359,  359,  359,  359,  359,  359,  359,  359,
      359,  359,  359,  359,  359,  359,  359,  359,  359,  359,
      359,  359,  359,  359,  359,  359,  359,  359,  359,  359,
      359,  359,  359,  359,  359,  359,  359,  359,  359,  359,

      359,  359,  359,  359,  359,  359,  359,  359,  359,  359,
      359,  359,  359,  359,  359,  359,  359,  359,  359,  359,
      359,  359,  359,  359,  359,  359,  359,  359,  359,  359,
      359,  359,  359,  359,  359,  359,  359,  359,  359,  359,
      359,  359,  359,  359,  359,  359,  359,  359,  359,  170,
      170,  170,  170,  170,  170,  170,  170,  170,  170,  170,
      170,  170,  170,  170,  170,  170,  170,  170,  170,  170,
      170,  170,  170,  170,  170,  170,  170,  170,  170,  170,
      170,  170,  170,  170,  170,  170,  170,  170,  170,  170,
      170,  170,  170,  170,  170,  170,  170,  170,  170,  170,

      170,  170,  170,  170,  170,  170,  170,  170,  170,  170,
      170,  170,  170,  170,  170,  170,  170,  170,  170,  170,
      170,  170,  170,  170,  170,  170,  170,  170,  170,  170,
      170,  170,  170,  170,  170,  170,  170,  170,  170,  170,
      170,  170,  170,  170,  170,  170,  170,  170,  170,  170,
      170,  170,  170,  170,  170,  170,  170,  170,  170,  170,
      170,  170,  170,  170,  170,  170,  170,  170,  170,  170,
      170,  170,  170,  170,  170,  170,  170,  170,  170,  170,
      170,  170,  170,  170,  170,  170,  170,  170,  170,  170,
      170,  170,  170,  170,  170,  170,  170,  170,  170,  170,

      170,  170,  170,  170,  170,  170,  170,  170,  170,  170,
      170,  170,  170,  170,  170,  170,  170,  170,  170,  170,
      170,  170,  170,  170,  170,  170,  170,  170,  170,  170,
      170,  170,  170,  170,  170,  170,  170,  170,  170,  170,
      170,  170,  170,  170,  170,  170,  170,  170,  170,  170,
      170,  170,  170,  170,  170,  170,  170,  170,  170,  170,
      170,  170,  170,  170,  170,  170,  170,  170,  170,  170,
      170,  170,  170,  170,  170,  170,  170,  170,  170,  170,
      170,  170,  170,  170,  170,  170,  170,  170,  170,  170,
      170,  170,  170,  170,  170,  170,  170,  170,  170,  170,

      170,  170,  170,  170,  368,  368,  368,  368,  368,  368,
      368,  368,  368,  368,  840,  839,  836,  835,  834,  827,
      824,  368,  368,  368,  368,  368,  368,  368,  368,  368,
      368,  368,  368,  368,  368,  368,  368,  368,  368,  368,
      368,  368,  368,  368,  368,  368,  368,  818,  817,  814,
      813,  368,  812,  368,  368,  368,  368,  368,  368,  368,
      368,  368,  368,  368,  368,  368,  368,  368,  368,  368,
      368,  368,  368,  368,  368,  368,  368,  368,  368,  811,
      810,  809,  808,  368,  368,  368,  368,  368,  368,  368,
      368,  368,  368,  368,  368,  368,  368,  368,  368,  368,

      368,  368,  368,  368,  368,  368,  368,  368,  368,  368,
      368,  368,  368,  368,  368,  368,  368,  368,  368,  368,
      368,  368,  368,  368,  368,  368,  368,  368,  368,  368,
      368,  368,  368,  368,  368,  368,  368,  368,  368,  368,
      368,  368,  368,  368,  368,  368,  368,  368,  368,  368,
      368,  368,  368,  368,  368,  368,  368,  368,  368,  368,
      368,  368,  368,  368,  368,  368,  368,  368,  368,  368,
      368,  368,  368,  368,  368,  368,  368,  368,  368,  368,
      368,  368,  368,  368,  368,  368,  368,  368,  368,  368,
      368,  368,  368,  368,  368,  368,  368,  368,  368,  368,

      368,  368,  368,  368,  368,  368,  368,  368,  368,  368,
      368,  368,  178,  178,  178,  178,  178,  178,  178,  178,
      178,  178,  178,  178,  178,  178,  178,  178,  178,  178,
      178,  178,  178,  178,  178,  178,  178,  178,  178,  178,
      178,  178,  178,  178,  178,  178,  178,  178,  178,  178,
      178,  178,  178,  178,  178,  178,  178,  178,  178,  178,
      178,  178,  178,  178,  178,  178,  178,  178,  178,  178,
      178,  178,  178,  178,  178,  178,  178,  178,  178,  178,
      178,  178,  178,  178,  178,  178,  178,  178,  178,  178,
      178,  178,  178,  178,  178,  178,  178,  178,  178,  178,

      178,  178,  178,  178,  178,  178,  178,  178,  178,  178,
      178,  178,  178,  178,  178,  178,  178,  178,  178,  178,
      178,  178,  178,  178,  178,  178,  178,  178,  178,  178,
      178,  178,  178,  178,  178,  178,  178,  178,  178,  178,
      178,  178,  178,  178,  178,  178,  178,  178,  178,  178,
      178,  178,  178,  178,  178,  178,  178,  178,  178,  178,
      178,  178,  178,  178,  178,  178,  178,  178,  178,  178,
      178,  178,  178,  178,  178,  178,  178,  178,  178,  178,
      178,  178,  178,  178,  178,  178,  178,  178,  178,  178,
      178,  178,  178,  178,  178,  178,  178,  178,  178,  178,

      178,  178,  178,  178,  178,  178,  178,  178,  178,  178,
      178,  178,  178,  178,  178,  178,  178,  178,  178,  178,
      178,  178,  178,  178,  178,  178,  178,  178,  178,  178,
      178,  178,  178,  178,  178,  178,  178,  178,  178,  178,
      178,  178,  178,  178,  178,  178,  178,  178,  178,  178,
      178,  178,  178,  178,  178,  178,  178,  178,  178,  178,
      178,  178,  178,  178,  178,  178,  178,  448,  807,  806,
      805,  804,  801,  798,  797,  794,  793,  792,  791,  790,
      789,  448,  448,  448,  448,  448,  448,  448,  448,  448,
      448,  788,  787,  786,  785,  784,  783,  782,  448,  448,

      448,  448,  448,  448,  448,  448,  448,  448,  448,  448,
      448,  448,  448,  448,  448,  448,  448,  448,  448,  448,
      448,  448,  448,  448,  781,  780,  779,  778,  448,  777,
      448,  448,  448,  448,  448,  448,  448,  448,  448,  448,
      448,  448,  448,  448,  448,  448,  448,  448,  448,  448,
      448,  448,  448,  448,  448,  448,  776,  775,  774,  773,
      448,  448,  448,  448,  448,  448,  448,  448,  448,  448,
      448,  448,  448,  448,  448,  448,  448,  448,  448,  448,
      448,  448,  448,  448,  448,  448,  448,  448,  448,  448,
      448,  448,  448,  448,  448,  448,  448,  448,  448,  448,

      448,  448,  448,  448,  448,  448,  448,  448,  448,  448,
      448,  448,  448,  448,  448,  448,  448,  448,  448,  448,
      448,  448,  448,  448,  448,  448,  448,  448,  448,  448,
      448,  448,  448,  448,  448,  448,  448,  448,  448,  448,
      448,  448,  448,  448,  448,  448,  448,  448,  448,  448,
      448,  448,  448,  448,  448,  448,  448,  448,  448,  448,
      448,  448,  448,  448,  448,  448,  448,  448,  448,  448,
      448,  448,  448,  448,  448,  448,  448,  448,  448,  448,
      448,  448,  448,  448,  448,  448,  448,  448,  448,  449,
      772,  769,  768,  767,  766,  765,  764,  763,  449,  449,

      449,  449,  449,  449,  449,  449,  449,  449,  762,  761,
      760,  759,  758,  757,  756,  449,  449,  449,  449,  449,
      449,  449,  449,  449,  449,  449,  449,  449,  449,  449,
      449,  449,  449,  449,  449,  449,  449,  449,  449,  449,
      449,  755,  754,  753,  752,  449,  751,  449,  449,  449,
      449,  449,  449,  449,  449,  449,  449,  449,  449,  449,
      449,  449,  449,  449,  449,  449,  449,  449,  449,  449,
      449,  449,  449,  750,  749,  748,  747,  449,  449,  449,
      449,  449,  449,  449,  449,  449,  449,  449,  449,  449,
      449,  449,  449,  449,  449,  449,  449,  449,  449,  449,

      449,  449,  449,  449,  449,  449,  449,  449,  449,  449,
      449,  449,  449,  449,  449,  449,  449,  449,  449,  449,
      449,  449,  449,  449,  449,  449,  449,  449,  449,  449,
      449,  449,  449,  449,  449,  449,  449,  449,  449,  449,
      449,  449,  449,  449,  449,  449,  449,  449,  449,  449,
      449,  449,  449,  449,  449,  449,  449,  449,  449,  449,
      449,  449,  449,  449,  449,  449,  449,  449,  449,  449,
      449,  449,  449,  449,  449,  449,  449,  449,  449,  449,
      449,  449,  449,  449,  449,  449,  449,  449,  449,  449,
      449,  449,  449,  449,  449,  449,  449,  449,  449,  449,

      449,  449,  449,  449,  449,  449,  975,  975,  975,  975,
      975,  975,  975,  975,  975,  975,  975,  975,  975,  975,
      975,  975,  975,  975,  975,  975,  975,  975,  975,  975,
      975,  975,  975,  975,  975,  975,  975,  975,  975,  975,
      975,  975,  975,  975,  975,  975,  975,  975,  975,  975,
      975,  975,  975,  975,  975,  975,  975,  975,  975,  975,
      975,  975,  975,  975,  975,  975,  975,  975,  975,  975,
      975,  975,  975,  975,  975,  975,  975,  975,  975,  975,
      975,  975,  975,  975,  975,  975,  975,  975,  975,  975,
      975,  975,  975,  975,  975,  975,  975,  975,  975,  975,

      975,  975,  975,  975,  975,  975,  975,  975,  975,  975,
      975,  975,  975,  975,  975,  975,  975,  975,  975,  975,
      975,  975,  975,  975,  975,  975,  975,  975,  975,  975,
      975,  975,  975,  975,  975,  975,  975,  975,  975,  975,
      975,  975,  975,  975,  975,  975,  975,  975,  975,  975,
      975,  975,  975,  975,  975,  975,  975,  975,  975,  975,
      975,  975,  975,  975,  975,  975,  975,  975,  975,  975,
      975,  975,  975,  975,  975,  975,  975,  975,  975,  975,
      975,  975,  975,  975,  975,  975,  975,  975,  975,  975,
      975,  975,  975,  975,  975,  975,  975,  975,  975,  975,

      975,  975,  975,  975,  975,  975,  975,  975,  975,  975,
      975,  975,  975,  975,  975,  975,  975,  975,  975,  975,
      975,  975,  975,  975,  975,  975,  975,  975,  975,  975,
      975,  975,  975,  975,  975,  975,  975,  975,  975,  975,
      975,  975,  975,  975,  975,  975,  975,  975,  975,  975,
      975,  975,  975,  975,  975,  975,  975,  975,  975,  975,
      975,  359,  359,  359,  359,  359,  359,  359,  359,  359,
      359,  746,  745,  744,  743,  742,  741,  740,  359,  359,
      359,  359,  359,  359,  359,  359,  359,  359,  359,  359,
      359,  359,  359,  359,  359,  359,  359,  359,  359,  359,

      359,  359,  359,  359,  739,  738,  737,  736,  359,  735,
      359,  359,  359,  359,  359,  359,  359,  359,  359,  359,
      359,  359,  359,  359,  359,  359,  359,  359,  359,  359,
      359,  359,  359,  359,  359,  359,  447,  447,  386,  390,
      359,  359,  359,  359,  359,  359,  359,  359,  359,  359,
      359,  359,  359,  359,  359,  359,  359,  359,  359,  359,
      359,  359,  359,  359,  359,  359,  359,  359,  359,  359,
      359,  359,  359,  359,  359,  359,  359,  359,  359,  359,
      359,  359,  359,  359,  359,  359,  359,  359,  359,  359,
      359,  359,  359,  359,  359,  359,  359,  359,  359,  359,

      359,  359,  359,  359,  359,  359,  359,  359,  359,  359,
      359,  359,  359,  359,  359,  359,  359,  359,  359,  359,
      359,  359,  359,  359,  359,  359,  359,  359,  359,  359,
      359,  359,  359,  359,  359,  359,  359,  359,  359,  359,
      359,  359,  359,  359,  359,  359,  359,  359,  359,  359,
      359,  359,  359,  359,  359,  359,  359,  359,  359,  359,
      359,  359,  359,  359,  359,  359,  359,  359,  359, 1288,
     1288, 1288, 1288, 1288, 1288, 1288, 1288, 1288, 1288, 1288,
     1288, 1288, 1288, 1288, 1288, 1288, 1288, 1288, 1288, 1288,
     1288, 1288, 1288, 1288, 1288, 1288, 1288, 1288, 1288, 1288,

     1288, 1288, 1288, 1288, 1288, 1288, 1288, 1288, 1288, 1288,
     1288, 1288, 1288, 1288, 1288, 1288, 1288, 1288, 1288, 1288,
     1288, 1288, 1288, 1288, 1288, 1288, 1288, 1288, 1288, 1288,
     1288, 1288, 1288, 1288, 1288, 1288, 1288, 1288, 1288, 1288,
     1288, 1288, 1288, 1288, 1288, 1288, 1288, 1288, 1288, 1288,
     1288, 1288, 1288, 1288, 1288, 1288, 1288, 1288, 1288, 1288,
     1288, 1288, 1288, 1288, 1288, 1288, 1288, 1288, 1288, 1288,
     1288, 1288, 1288, 1288, 1288, 1288, 1288, 1288, 1288, 1288,
     1288, 1288, 1288, 1288, 1288, 1288, 1288, 1288, 1288, 1288,
     1288, 1288, 1288, 1288, 1288, 1288, 1288, 1288, 1288, 1288,

     1288, 1288, 1288, 1288, 1288, 1288, 1288, 1288, 1288, 1288,
     1288, 1288, 1288, 1288, 1288, 1288, 1288, 1288, 1288, 1288,
     1288, 1288, 1288, 1288, 1288, 1288, 1288, 1288, 1288, 1288,
     1288, 1288, 1288, 1288, 1288, 1288, 1288, 1288, 1288, 1288,
     1288, 1288, 1288, 1288, 1288, 1288, 1288, 1288, 1288, 1288,
     1288, 1288, 1288, 1288, 1288, 1288, 1288, 1288, 1288, 1288,
     1288, 1288, 1288, 1288, 1288, 1288, 1288, 1288, 1288, 1288,
     1288, 1288, 1288, 1288, 1288, 1288, 1288, 1288, 1288, 1288,
     1288, 1288, 1288, 1288, 1288, 1288, 1288, 1288, 1288, 1288,
     1288, 1288, 1288, 1288, 1288, 1288, 1288, 1288, 1288, 1288,

     1288, 1288, 1288, 1288, 1288, 1288, 1288, 1288, 1288, 1288,
     1288, 1288, 1288, 1288, 1288, 1288, 1288, 1288, 1288, 1288,
     1288, 1288, 1288, 1288, 1554, 1554, 1554, 1554, 1554, 1554,
     1554, 1554, 1554, 1554, 1554, 1554, 1554, 1554, 1554, 1554,
     1554, 1554, 1554, 1554, 1554, 1554, 1554, 1554, 1554, 1554,
     1554, 1554, 1554, 1554, 1554, 1554, 1554, 1554, 1554, 1554,
     1554, 1554, 1554, 1554, 1554, 1554, 1554, 1554, 1554, 1554,
     1554, 1554, 1554, 1554, 1554, 1554, 1554, 1554, 1554, 1554,
     1554, 1554, 1554, 1554, 1554, 1554, 1554, 1554, 1554, 1554,
     1554, 1554, 1554, 1554, 1554, 1554, 1554, 1554, 1554, 1554,

     1554, 1554, 1554, 1554, 1554, 1554, 1554, 1554, 1554, 1554,
     1554, 1554, 1554, 1554, 1554, 1554, 1554, 1554, 1554, 1554,
     1554, 1554, 1554, 1554, 1554, 1554, 1554, 1554, 1554, 1554,
     1554, 1554, 1554, 1554, 1554, 1554, 1554, 1554, 1554, 1554,
     1554, 1554, 1554, 1554, 1554, 1554, 1554, 1554, 1554, 1554,
     1554, 1554, 1554, 1554, 1554, 1554, 1554, 1554, 1554, 1554,
     1554, 1554, 1554, 1554, 1554, 1554, 1554, 1554, 1554, 1554,
     1554, 1554, 1554, 1554, 1554, 1554, 1554, 1554, 1554, 1554,
     1554, 1554, 1554, 1554, 1554, 1554, 1554, 1554, 1554, 1554,
     1554, 1554, 1554, 1554, 1554, 1554, 1554, 1554, 1554, 1554,

     1554, 1554, 1554, 1554, 1554, 1554, 1554, 1554, 1554, 1554,
     1554, 1554, 1554, 1554, 1554, 1554, 1554, 1554, 1554, 1554,
     1554, 1554, 1554, 1554, 1554, 1554, 1554, 1554, 1554, 1554,
     1554, 1554, 1554, 1554, 1554, 1554, 1554, 1554, 1554, 1554,
     1554, 1554, 1554, 1554, 1554, 1554, 1554, 1554, 1554, 1554,
     1554, 1554, 1554, 1554, 1554, 1554, 1554, 1554, 1554, 1554,
     1554, 1554, 1554, 1554, 1554, 1554, 1554, 1554, 1554, 1554,
     1554, 1554, 1554, 1554, 1554, 1554, 1554, 1554, 1554, 1748,
     1748, 1748, 1748, 1748, 1748, 1748, 1748, 1748, 1748, 1748,
     1748, 1748, 1748, 1748, 1748, 1748, 1748, 1748, 1748, 1748,

     1748, 1748, 1748, 1748, 1748, 1748, 1748, 1748, 1748, 1748,
     1748, 1748, 1748, 1748, 1748, 1748, 1748, 1748, 1748, 1748,
     1748, 1748, 1748, 1748, 1748, 1748, 1748, 1748, 1748, 1748,
     1748, 1748, 1748, 1748, 1748, 1748, 1748, 1748, 1748, 1748,
     1748, 1748, 1748, 1748, 1748, 1748, 1748, 1748, 1748, 1748,
     1748, 1748, 1748, 1748, 1748, 1748, 1748, 1748, 1748, 1748,
     1748, 1748, 1748, 1748, 1748, 1748, 1748, 1748, 1748, 1748,
     1748, 1748, 1748, 1748, 1748, 1748, 1748, 1748, 1748, 1748,
     1748, 1748, 1748, 1748, 1748, 1748, 1748, 1748, 1748, 1748,
     1748, 1748, 1748, 1748, 1748, 1748, 1748, 1748, 1748, 1748,

     1748, 1748, 1748, 1748, 1748, 1748, 1748, 1748, 1748, 1748,
     1748, 1748, 1748, 1748, 1748, 1748, 1748, 1748, 1748, 1748,
     1748, 1748, 1748, 1748, 1748, 1748, 1748, 1748, 1748, 1748,
     1748, 1748, 1748, 1748, 1748, 1748, 1748, 1748, 1748, 1748,
     1748, 1748, 1748, 1748, 1748, 1748, 1748, 1748, 1748, 1748,
     1748, 1748, 1748, 1748, 1748, 1748, 1748, 1748, 1748, 1748,
     1748, 1748, 1748, 1748, 1748, 1748, 1748, 1748, 1748, 1748,
     1748, 1748, 1748, 1748, 1748, 1748, 1748, 1748, 1748, 1748,
     1748, 1748, 1748, 1748, 1748, 1748, 1748, 1748, 1748, 1748,
     1748, 1748, 1748, 1748, 1748, 1748, 1748, 1748, 1748, 1748,

     1748, 1748, 1748, 1748, 1748, 1748, 1748, 1748, 1748, 1748,
     1748, 1748, 1748, 1748, 1748, 1748, 1748, 1748, 1748, 1748,
     1748, 1748, 1748, 1748, 1748, 1748, 1748, 1748, 1748, 1748,
     1748, 1748, 1748, 1748, 1858, 1858, 1858, 1858, 1858, 1858,
     1858, 1858, 1858, 1858, 1858, 1858, 1858, 1858, 1858, 1858,
     1858, 1858, 1858, 1858, 1858, 1858, 1858, 1858, 1858, 1858,
     1858, 1858, 1858, 1858, 1858, 1858, 1858, 1858, 1858, 1858,
     1858, 1858, 1858, 1858, 1858, 1858, 1858, 1858, 1858, 1858,
     1858, 1858, 1858, 1858, 1858, 1858, 1858, 1858, 1858, 1858,
     1858, 1858, 1858, 1858, 1858, 1858, 1858, 1858, 1858, 1858,

     1858, 1858, 1858, 1858, 1858, 1858, 1858, 1858, 1858, 1858,
     1858, 1858, 1858, 1858, 1858, 1858, 1858, 1858, 1858, 1858,
     1858, 1858, 1858, 1858, 1858, 1858, 1858, 1858, 1858, 1858,
     1858, 1858, 1858, 1858, 1858, 1858, 1858, 1858, 1858, 1858,
     1858, 1858, 1858, 1858, 1858, 1858, 1858, 1858, 1858, 1858,
     1858, 1858, 1858, 1858, 1858, 1858, 1858, 1858, 1858, 1858,
     1858, 1858, 1858, 1858, 1858, 1858, 1858, 1858, 1858, 1858,
     1858, 1858, 1858, 1858, 1858, 1858, 1858, 1858, 1858, 1858,
     1858, 1858, 1858, 1858, 1858, 1858, 1858, 1858, 1858, 1858,
     1858, 1858, 1858, 1858, 1858, 1858, 1858, 1858, 1858, 1858,

     1858, 1858, 1858, 1858, 1858, 1858, 1858, 1858, 1858, 1858,
     1858, 1858, 1858, 1858, 1858, 1858, 1858, 1858, 1858, 1858,
     1858, 1858, 1858, 1858, 1858, 1858, 1858, 1858, 1858, 1858,
     1858, 1858, 1858, 1858, 1858, 1858, 1858, 1858, 1858, 1858,
     1858, 1858, 1858, 1858, 1858, 1858, 1858, 1858, 1858, 1858,
     1858, 1858, 1858, 1858, 1858, 1858, 1858, 1858, 1858, 1858,
     1858, 1858, 1858, 1858, 1858, 1858, 1858, 1858, 1858, 1858,
     1858, 1858, 1858, 1858, 1858, 1858, 1858, 1858, 1858, 1858,
     1858, 1858, 1858, 1858, 1858, 1858, 1858, 1858, 1858, 1891,
     1891, 1891, 1891, 1891, 1891, 1891, 1891, 1891, 1891, 1891,

     1891, 1891, 1891, 1891, 1891, 1891, 1891, 1891, 1891, 1891,
     1891, 1891, 1891, 1891, 1891, 1891, 1891, 1891, 1891, 1891,
     1891, 1891, 1891, 1891, 1891, 1891, 1891, 1891, 1891, 1891,
     1891, 1891, 1891, 1891, 1891, 1891, 1891, 1891, 1891, 1891,
     1891, 1891, 1891, 1891, 1891, 1891, 1891, 1891, 1891, 1891,
     1891, 1891, 1891, 1891, 1891, 1891, 1891, 1891, 1891, 1891,
     1891, 1891, 1891, 1891, 1891, 1891, 1891, 1891, 1891, 1891,
     1891, 1891, 1891, 1891, 1891, 1891, 1891, 1891, 1891, 1891,
     1891, 1891, 1891, 1891, 1891, 1891, 1891, 1891, 1891, 1891,
     1891, 1891, 1891, 1891, 1891, 1891, 1891, 1891, 1891, 1891,

     1891, 1891, 1891, 1891, 1891, 1891, 1891, 1891, 1891, 1891,
     1891, 1891, 1891, 1891, 1891, 1891, 1891, 1891, 1891, 1891,
     1891, 1891, 1891, 1891, 1891, 1891, 1891, 1891, 1891, 1891,
     1891, 1891, 1891, 1891, 1891, 1891, 1891, 1891, 1891, 1891,
     1891, 1891, 1891, 1891, 1891, 1891, 1891, 1891, 1891, 1891,
     1891, 1891, 1891, 1891, 1891, 1891, 1891, 1891, 1891, 1891,
     1891, 1891, 1891, 1891, 1891, 1891, 1891, 1891, 1891, 1891,
     1891, 1891, 1891, 1891, 1891, 1891, 1891, 1891, 1891, 1891,
     1891, 1891, 1891, 1891, 1891, 1891, 1891, 1891, 1891, 1891,
     1891, 1891, 1891, 1891, 1891, 1891, 1891, 1891, 1891, 1891,

     1891, 1891, 1891, 1891, 1891, 1891, 1891, 1891, 1891, 1891,
     1891, 1891, 1891, 1891, 1891, 1891, 1891, 1891, 1891, 1891,
     1891, 1891, 1891, 1891, 1891, 1891, 1891, 1891, 1891, 1891,
     1891, 1891, 1891, 1891, 1891, 1891, 1891, 1891, 1891, 1891,
     1891, 1891, 1891, 1891, 1907, 1907, 1907, 1907, 1907, 1907,
     1907, 1907, 1907, 1907, 1907, 1907, 1907, 1907, 1907, 1907,
     1907, 1907, 1907, 1907, 1907, 1907, 1907, 1907, 1907, 1907,
     1907, 1907, 1907, 1907, 1907, 1907, 1907, 1907, 1907, 1907,
     1907, 1907, 1907, 1907, 1907, 1907, 1907, 1907, 1907, 1907,
     1907, 1907, 1907, 1907, 1907, 1907, 1907, 1907, 1907, 1907,

     1907, 1907, 1907, 1907, 1907, 1907, 1907, 1907, 1907, 1907,
     1907, 1907, 1907, 1907, 1907, 1907, 1907, 1907, 1907, 1907,
     1907, 1907, 1907, 1907, 1907, 1907, 1907, 1907, 1907, 1907,
     1907, 1907, 1907, 1907, 1907, 1907, 1907, 1907, 1907, 1907,
     1907, 1907, 1907, 1907, 1907, 1907, 1907, 1907, 1907, 1907,
     1907, 1907, 1907, 1907, 1907, 1907, 1907, 1907, 1907, 1907,
     1907, 1907, 1907, 1907, 1907, 1907, 1907, 1907, 1907, 1907,
     1907, 1907, 1907, 1907, 1907, 1907, 1907, 1907, 1907, 1907,
     1907, 1907, 1907, 1907, 1907, 1907, 1907, 1907, 1907, 1907,
     1907, 1907, 1907, 1907, 1907, 1907, 1907, 1907, 1907, 1907,

     1907, 1907, 1907, 1907, 1907, 1907, 1907, 1907, 1907, 1907,
     1907, 1907, 1907, 1907, 1907, 1907, 1907, 1907, 1907, 1907,
     1907, 1907, 1907, 1907, 1907, 1907, 1907, 1907, 1907, 1907,
     1907, 1907, 1907, 1907, 1907, 1907, 1907, 1907, 1907, 1907,
     1907, 1907, 1907, 1907, 1907, 1907, 1907, 1907, 1907, 1907,
     1907, 1907, 1907, 1907, 1907, 1907, 1907, 1907, 1907, 1907,
     1907, 1907, 1907, 1907, 1907, 1907, 1907, 1907, 1907, 1907,
     1907, 1907, 1907, 1907, 1907, 1907, 1907, 1907, 1907, 1907,
     1907, 1907, 1907, 1907, 1907, 1907, 1907, 1907, 1907, 1907,
     1907, 1907, 1907, 1907, 1907, 1907, 1907, 1907, 1907,  387,

      649,  347,  643,  642,  611,  568,  509,  506,  495,  480,
      479,  478,  472,  460,  286,  281,  447,  447,  265,  396,
      389,  388,  380,  366,  363,  205,  174,  347,  341,  290,
      289,  286,  280,  278,  274,  273,  272,  270,  269,  265,
      263,  262,  214,  205,  190,  169, 1927,   45,   45,   43,
     1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927,
     1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927,
     1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927,
     1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927,
     1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927,

     1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927,
     1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927,
     1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927,
     1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927,
     1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927,
     1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927,
     1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927,
     1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927,
     1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927,
     1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927,

     1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927,
     1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927,
     1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927,
     1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927,
     1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927,
     1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927,
     1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927,
     1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927,
     1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927,
     1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927,

     1927, 1927, 1927, 1927, 1927, 1927
    } ;

static yyconst flex_int16_t yy_chk[21807] =
    {   0,
        3,    3,    3,    3,    3,    3,    3,    3,    3,    3,
        3,    3,    3,    3,    3,    3,    3,    3,    3,    3,
        3,    3,    3,    3,    3,    3,    3,    3,    3,    3,
        3,    3,    3,    3,    3,    3,    3,    3,    3,    3,
        3,    3,    3,    3,    3,    3,    3,    3,    3,    3,
        3,    3,    3,    3,    3,    3,    3,    3,    3,    3,
        3,    3,    3,    3,    3,    3,    3,    3,    3,    3,
        3,    3,    3,    3,    3,    3,    3,    3,    3,    3,
        3,    3,    3,    3,    3,    3,    3,    3,    3,    3,
        3,    3,    3,    3,    3,    3,    3,    3,    3,    3,

        3,    3,    3,    3,    3,    3,    3,    3,    3,    3,
        3,    3,    3,    3,    3,    3,    3,    3,    3,    3,
        3,    3,    3,    3,    3,    3,    3,    3,    3,    3,
        3,    3,    3,    3,    3,    3,    3,    3,    3,    3,
        3,    3,    3,    3,    3,    3,    3,    3,    3,    3,
        3,    3,    3,    3,    3,    3,    3,    3,    3,    3,
        3,    3,    3,    3,    3,    3,    3,    3,    3,    3,
        3,    3,    3,    3,    3,    3,    3,    3,    3,    3,
        3,    3,    3,    3,    3,    3,    3,    3,    3,    3,
        3,    3,    3,    3,    3,    3,    3,    3,    3,    3,

        3,    3,    3,    3,    3,    3,    3,    3,    3,    3,
        3,    3,    3,    3,    3,    3,    3,    3,    3,    3,
        3,    3,    3,    3,    3,    3,    3,    3,    3,    3,
        3,    3,    3,    3,    3,    3,    3,    3,    3,    3,
        3,    3,    3,    3,    3,    3,    3,    3,    3,    3,
        3,    3,    3,    3,    3,    5,    6,    7,    5,    6,
        7,    8,    9,   10,    8,    9,   10,   13,   14,   17,
       13,   14,   17,   18,   25,   25,   18,   45,   25,   26,
       26,   35,   35,   26,   53,   35,   64,    5,    6,   36,
       36,   52,   52,   36,    9,   10,  534,   25,  534,   64,

       64,   64,   26,   45,   35,   65,   65,   53,   66,   66,
        7,  951,   36,  951,    8,   11,   11,   11,   11,   11,
       11,   11,   11,   11,   11,   11,   11,   11,   11,   11,
       11,   11,   11,   11,   11,   11,   11,   11,   11,   11,
       11,   11,   11,   11,   11,   11,   11,   11,   11,   11,
       11,   11,   11,   11,   11,   11,   11,   11,   11,   11,
       11,   11,   11,   11,   11,   11,   11,   11,   11,   11,
       11,   11,   11,   11,   11,   11,   11,   11,   11,   47,
       47,   54,   57,   47,   77,   79,   81,   58,   59,   59,
       59,   59,   59,   59,   59,   59,   59,   59,   85,   86,

       57,   59,   47,   58,   58,   11,   11,   11,   11,   60,
       11, 1127,  111,  511,   60,  111,   77,   79,   81,  149,
      149,  149,  158,  207,  207,  511,  214,  158,   60,  214,
       85,   86,  284,  285,   54,  284,  285,   11,   11,   11,
       11,   12,   12,   12,   12,   12,   12,   12,   12,   12,
       12,   12,   12,   12,   12,   12,   12,   12,   12,   12,
       12,   12,   12,   12,   12,   12,   12,   12,   12,   12,
       12,   12,   12,   12,   12,   12,   12,   12,   12,   12,
       12,   12,   12,   12,   12,   12,   12,   12,   12,   12,
       12,   12,   12,   12,   12,   12,   12,   12,   12,   12,

       12,   12,   12,   12,   12,   62,   68,   62,   62,   62,
       62,   62,   62,   62,   62,   62,   62,   71,   68,   87,
       83,   78,   68,   68,   68,   78,   74,   71,   62,   74,
       83,   12,   12,   12,   12,  299,   12,  300,   68,  311,
      299,  300,  307,  307,  487,  311,  633,  633,  487,   71,
       68,   87,   83,   78,   68,   68,   68,   78,   74,   71,
       62,   74,   83,   12,   12,   12,   12,   15,   15,   15,
       15,   15,   15,   15,   15,   15,   15,   15,   15,   15,
       15,   15,   15,   15,   15,   15,   15,   15,   15,   15,
       15,   15,   15,   15,   15,   15,   15,   15,   15,   15,

       15,   15,   15,   15,   15,   15,   15,   15,   15,   15,
       15,   15,   15,   15,   15,   15,   15,   15,   15,   15,
       15,   15,   15,   15,   15,   15,   15,   15,   15,   15,
       15,   70,   80,  150,   73,   80,   76,  161,   70,  163,
       73,  164,   70,   76,   76,   70,   73,   82,   84,   76,
       82,  181,  183,   84,  184,  185,  186,   15,   15,   15,
       15, 1129,   15,   70,   80,  150,   73,   80,   76,  161,
       70,  163,   73,  164,   70,   76,   76,   70,   73,   82,
       84,   76,   82,  181,  183,   84,  184,  185,  186,   15,
       15,   15,   15,   16,   16,   16,   16,   16,   16,   16,

       16,   16,   16,   16,   16,   16,   16,   16,   16,   16,
       16,   16,   16,   16,   16,   16,   16,   16,   16,   16,
       16,   16,   16,   16,   16,   16,   16,   16,   16,   16,
       16,   16,   16,   16,   16,   16,   16,   16,   16,   16,
       16,   16,   16,   16,   16,   16,   16,   16,   16,   16,
       16,   16,   16,   16,   16,   16,   16,   72,  116,  116,
      167, 1130,  116, 1131,  114,  187,   72,   72,   72,  114,
      117,  117,  188,  189,  117,  206,   72,  216,   72,  167,
      217,  116,  315,   16,   16,   16,   16,  546,   16,   72,
      114,  121,  121,  117,  546,  121,  537,  187,   72,   72,

       72,  537,  315,  516,  188,  189,  516,  206,   72,  216,
       72,  167,  217, 1132,  121,   16,   16,   16,   16,   19,
       19,   19,   19,   19,   19,   19,   19,   19,   19,   19,
       19,   19,   19,   19,   19,   19,   19,   19,   19,   19,
       19,   19,   19,   19,   19,   19,   19,   19,   19,   19,
       19,   19,   19,   19,   19,   19,   19,   19,   19,   19,
       19,   19,   19,   19,   19,   19,   19,   19,   19,   19,
       19,   19,   19,   19,   19,   19,   19,   19,   19,   19,
       19,   19,   19,  178,   19,  122,  122,  218,  577,  122,
      123,  123,  138,  138,  123,  220,  138,  143,  143,  144,

      144,  143,  224,  144,  577,  225,  225,  226,  122,   19,
       19,   19,   19,  123,   19,  138,   19,  168,  168,  218,
      143,  168,  144,  528,  322,  322,  531,  220,  322, 1133,
      547, 1134,  531,  528,  224,  547,  178,  225,  225,  226,
      168,   19,   19,   19,   19,   20,   20,   20,   20,   20,
       20,   20,   20,   20,   20,   20,   20,   20,   20,   20,
       20,   20,   20,   20,   20,   20,   20,   20,   20,   20,
       20,   20,   20,   20,   20,   20,   20,   20,   20,   20,
       20,   20,   20,   20,   20,   20,   20,   20,   20,   20,
       20,   20,   20,   20,   20,   20,   20,   20,   20,   20,

       20,   20,   20,   20,   20,   20,   20,   20,   20,  182,
       20,  203,  222,  203,  227,  182,  203,  203,  203,  203,
      203,  203,  203,  203,  203,  203,  228,  229,  227,  231,
      229,  232,  233,  340,  234,   20,   20,   20,   20,  514,
       20,  182,   20,  309,  309,  536,  227,  182,  908,  542,
      514,  340,  542,  309,  309,  908,  536, 1135,  228,  229,
      227,  231,  229,  232,  233,  222,  234,   20,   20,   20,
       20,   23,   23,   23,   23,   23,   23,   23,   23,   23,
       23,   23,   23,   23,   23,   23,   23,   23,   23,   23,
       23,   23,   23,   23,   23,   23,   23,   23,   23,   23,

       23,   23,   23,   23,   23,   23,   23,   23,   23,   23,
       23,   23,   23,   23,   23,   23,   23,   23,   23,   23,
       23,   23,   23,   23,   23,   23,   23,   23,   23,   23,
       23,   23,   23,   23,   23,  196,  196,  196,  196,  196,
      196,  196,  196,  196,  196,  235,  236,  237,  238,  239,
      240,  241,  243,  245,  246,  247,  196,  236,  248,  251,
      253,   23,   23,   23,   23, 1137,   23,  382,  382,  382,
      382,  382,  382,  382,  382,  382,  382,  235,  236,  237,
      238,  239,  240,  241,  243,  245,  246,  247,  196,  236,
      248,  251,  253,   23,   23,   23,   23,   24,   24,   24,

       24,   24,   24,   24,   24,   24,   24,   24,   24,   24,
       24,   24,   24,   24,   24,   24,   24,   24,   24,   24,
       24,   24,   24,   24,   24,   24,   24,   24,   24,   24,
       24,   24,   24,   24,   24,   24,   24,   24,   24,   24,
       24,   24,   24,   24,   24,   24,   24,   24,   24,   24,
       24,   24,   24,   24,   24,   24,   24,   24,   24,   24,
       24,  201,  201,  201,  201,  201,  201,  201,  201,  201,
      201,  250,  252,  254,  255,  252,  256,  250,  257,  258,
      259,  260,  201,  261,  318,  318,  563,   24,   24,   24,
       24,  557,   24,  288,  288,  292,  292,  288,  318,  292,

      563,  318,  557,  250,  252,  254,  255,  252,  256,  250,
      257,  258,  259,  260,  201,  261,  288, 1138,  292,   24,
       24,   24,   24,   27,   27,   27,   27,   27,   27,   27,
       27,   27,   27,   27,   27,   27,   27,   27,   27,   27,
       27,   27,   27,   27,   27,   27,   27,   27,   27,   27,
       27,   27,   27,   27,   27,   27,   27,   27,   27,   27,
       27,   27,   27,   27,   27,   27,   27,   27,   27,   27,
       27,   27,   27,   27,   27,   27,   27,   27,   27,   27,
       27,   27,   27,   27,   27,   27,   27,  202,  244,  202,
      202,  202,  202,  202,  202,  202,  202,  202,  202,  293,

      293,  312,  636,  293,  244,  244,  301, 1139,  323,  351,
      202,  352,  323,   27,   27,   27,   27,  636,   27,  301,
      244,  301,  293,  335,  339,  301,  312,  323,  339,  575,
      335,  335,  575,  312,  301, 1140,  244,  244,  301,  301,
      335,  351,  202,  352,  339,   27,   27,   27,   27,   28,
       28,   28,   28,   28,   28,   28,   28,   28,   28,   28,
       28,   28,   28,   28,   28,   28,   28,   28,   28,   28,
       28,   28,   28,   28,   28,   28,   28,   28,   28,   28,
       28,   28,   28,   28,   28,   28,   28,   28,   28,   28,
       28,   28,   28,   28,   28,   28,   28,   28,   28,   28,

       28,   28,   28,   28,   28,   28,   28,   28,   28,   28,
       28,   28,   28,  324,  353,  354,   92,   29,   49,   30,
     1142,   29,   29,   30,   30,   31,   31,   31,   31,   31,
       32,   32,   32,   32,   32,  170,  221,  538,  606,   28,
       28,   28,   28,  367,   28,  324,  353,  354,   31,  324,
      369,  599,   69,   32,   31,   31,  355,   69,  538,   32,
       32,   33,   33,   33,   33,   33,   34,   34,   34,   34,
       34,   28,   28,   28,   28,   29,   49,   30,   69,   92,
      156,   55,  139,  139,   33,  156,  139, 1143,  355,   34,
       33,   33,  599,  170,  221,   34,   34,  606, 1144,  320,

       69,  367,  356,  369,   55,  139,  156, 1145,   31, 1146,
      151,  357,   33,   32,   33,  151, 1147,   34,   61,   34,
       61,   61,   61,   61,   61,   61,   61,   61,   61,   61,
      156,  320,   69,  139,  356,  320,  151,   55,   55,  320,
       55,   61,   55,  357,   33,   55,  313,  609,  313,   34,
      358,   55,  313,  609,   55,   55,  360,   55,  151, 1148,
       61,  313,  156,  297, 1149,  303,  313,  303,  361,   55,
       55,  303,   55,   61,   55,   33,   31,   55,  386,  303,
       34,   32,  358,   55,  362,  303,   55,   55,  360,   55,
      151,  297,   61,  297,  920,  328,  139,  297,  328, 1150,

      361,  386,  297,  328,  532,  532,  920,  532,  297,  597,
      297,  297,   33,  597, 1151,  328,  362,   34,   39,   39,
       39,   39,   39,   39,   39,   39,   39,   39,   39,   39,
       39,   39,   39,   39,   39,   39,   39,   39,   39,   39,
       39,   39,   39,   39,   39,   39,   39,   39,   39,   39,
       39,   39,   39,   39,   39,   39,   39,   39,   39,   39,
       39,   39,   39,   39,   39,   39,   39,   39,   39,   39,
       39,   39,   39,   39,   39,   39,   39,   39,   39,   39,
       39,   39,   39,   39,  365,  370,   39,   39,  263,  263,
       39,  263,  946,  263,  371,  372,  373,  263,  263,  263,

       39,  342,  342,   39,  374,  342,  375,  376,   39,   39,
       39,   39, 1152,   39,   39,   39,  365,  370,   39,   39,
      263,  263,   39,  263,  342,  263,  371,  372,  373,  263,
      263,  263,   39,  648,  946,   39,  374,  648,  375,  376,
       39,   39,   39,   39,   40,   40,   40,   40,   40,   40,
       40,   40,   40,   40,   40,   40,   40,   40,   40,   40,
       40,   40,   40,   40,   40,   40,   40,   40,   40,   40,
       40,   40,   40,   40,   40,   40,   40,   40,   40,   40,
       40,   40,   40,   40,   40,   40,   40,   40,   40,   40,
       40,   40,   40,   40,   40,   40,   40,   40,   40,   40,

       40,   40,   40,   40,   40,   40,   40,   40,   40,   40,
      331,  377,   40,   40,  331,  378,   40,  331,  331,  343,
      343,  331,  379,  343,  331,  385,   40,  331,  331,   40,
      392,  394,  379,  395,   40,   40,   40,   40, 1155,   40,
       40,   40,  343,  377,   40,   40, 1156,  378,   40,  581,
      581,  570,  570,  616,  379,  570,  570,  385,   40,  616,
      581,   40,  392,  394,  379,  395,   40,   40,   40,   40,
       41,   41,   41,   41,   41,   41,   41,   41,   41,   41,
       41,   41,   41,   41,   41,   41,   41,   41,   41,   41,
       41,   41,   41,   41,   41,   41,   41,   41,   41,   41,

       41,   41,   41,   41,   41,   41,   41,   41,   41,   41,
       41,   41,   41,   41,   41,   41,   41,   41,   41,   41,
       41,   41,   41,   41,   41,   41,   41,   41,   41,   41,
       41,   41,   41,   41,   41,  321,  397,  321,   41,  308,
      398,  321,  399, 1157,  399,  400,  401,  321,  321,   41,
      321,  321,  348,  348,  321,  321,  348,  402,  321,  404,
       41,   41,   41,   41,  620,   41,   41,  308,  397,  308,
       41,  912,  398,  308,  399,  348,  399,  400,  401,  308,
      620,   41,  626,  910,  910,  308,  308,  308,  626,  402,
      912,  404,   41,   41,   41,   41,   42,   42,   42,   42,

       42,   42,   42,   42,   42,   42,   42,   42,   42,   42,
       42,   42,   42,   42,   42,   42,   42,   42,   42,   42,
       42,   42,   42,   42,   42,   42,   42,   42,   42,   42,
       42,   42,   42,   42,   42,   42,   42,   42,   42,   42,
       42,   42,   42,   42,   42,   42,   42,   42,   42,   42,
       42,   42,   42,   42,   42,   42,   42,   42,   42,   42,
       42,  317,  405,  317,   42,  317,  913,  317,  849,  913,
     1158,  629,  317,  317,  317,   42,  317, 1159,  317,  317,
      317,  317,  629,  639,  849,  629,   42,   42,   42,   42,
     1161,   42,   42,  639,  405, 1162,   42,  296,  296,  296,

      296,  296,  296,  296,  296,  296,  296,   42,  383,  383,
      383,  383,  383,  383,  383,  383,  383,  383,   42,   42,
       42,   42,  110,  110,  110,  110,  110,  110,  110,  110,
      110,  110,  110,  110,  110,  110,  110,  110,  110,  110,
      110,  110,  110,  110,  110,  110,  110,  110,  110,  110,
      110,  110,  110,  110,  110,  110,  110,  110,  110,  110,
      110,  110,  110,  110,  110,  110,  110,  110,  110,  296,
     1163,  380,  380,  152,  406,  380,  403,  403,  152,  110,
      110,  110,  110,  110,  110,  110, 1164,  895,  407,  408,
      153, 1165,  410,  154,  380,  153,  155,  157,  154,  152,

      411,  155,  157,  676,  412,  336,  406, 1166,  403,  403,
      413, 1167,  110,  110,  110,  110,  153,  110,  152,  154,
      407,  408,  155,  157,  410, 1160,  676, 1160,  157,  414,
     1168,  415,  411,  895,  153,  154,  412,  336,  416,  336,
      155,  417,  413,  336,  110,  110,  110,  110,  128,  336,
      152,  319,  336,  319, 1169,  319, 1170,  336,  319,  319,
      157,  414,  319,  415, 1171,  319,  153,  154,  319, 1172,
      416,  319,  155,  417, 1174,  418,  419,  420,  128,  128,
      128,  128,  128,  180,  128, 1175,  128,  421,  128,  128,
      128,  128,  128,  128, 1176,  128,  128,  128,  128,  422,

     1177,  128,  128,  128,  423,  424,  180,  418,  419,  420,
      128,  128,  128,  128,  128,  128,  128,  128,  128,  421,
      128,  128,  128,  128,  128,  128,  128,  128,  128,  128,
      128,  422,  128,  128,  128,  128,  423,  424, 1178,  180,
      180,  427,  180,  426,  180,  428,  429,  180,  325, 1179,
      325,  426,  325,  180,  325,  430,  180,  180, 1180,  180,
      325,  325,  325, 1181,  325, 1182,  325, 1183,  325, 1184,
      327,  180,  180,  427,  180,  426,  180,  428,  429,  180,
      344,  344, 1185,  426,  344,  180,  431,  430,  180,  180,
      333,  180,  204,  204,  204,  204,  204,  204,  204,  204,

      204,  204,  327,  344,  327,  327,  327,  327, 1186,  204,
      204,  204,  204,  204,  204, 1187,  327, 1190,  431,  327,
      327,  327,  333, 1191,  333,  333,  333,  333, 1192,  333,
     1193,  344, 1194,  333, 1195, 1196, 1197, 1198, 1199, 1201,
      333,  204,  204,  204,  204,  204,  204,  283,  283,  283,
      283,  283,  283,  283,  283,  283,  283,  283,  283,  283,
      283,  283,  283,  283,  283,  283,  283,  283,  283,  283,
      283,  283,  283,  283,  283,  283,  283,  283,  283,  283,
      283,  283,  283,  283,  283,  283,  283,  283,  283,  283,
      283,  283,  283,  283,  344,  432,  433, 1202, 1203, 1204,

      435,  438,  440,  441,  283,  283,  283,  283,  283,  283,
      283,  329,  329, 1205,  329,  329,  443,  444, 1206,  329,
     1207, 1208,  445,  446, 1209,  329, 1210,  432,  433,  329,
      329,  329,  435,  438,  440,  441,  651,  283,  283,  283,
      283,  330,  283,  330, 1211,  330,  652,  330,  443,  444,
      442,  653,  330,  330,  445,  446,  330,  654,  330,  330,
      330,  330,  442,  655,  657, 1212, 1213, 1214,  651,  283,
      283,  283,  283,  334,  334,  334,  334, 1215,  652,  334,
      334, 1216,  442,  653, 1217,  334, 1218,  334, 1219,  654,
      660, 1220,  334, 1221,  442,  655,  657,  334,  381,  381,

      381,  381,  381,  381,  381,  381,  381,  381,  384,  384,
      384,  384,  384,  384,  384,  384,  384,  384,  409,  381,
      409,  613,  660,  409,  661,  384,  384,  384,  384,  384,
      384,  613,  662,  409,  613,  613,  663,  409,  450,  450,
      450,  450,  450,  450,  450,  450,  450,  450,  664,  450,
      409,  381,  409,  665,  666,  409,  661,  384,  384,  384,
      384,  384,  384,  667,  662,  409,  669,  670,  663,  409,
      451,  451,  451,  451,  451,  451,  451,  451,  451,  451,
      664,  668,  671,  672,  673,  665,  666,  451,  451,  451,
      451,  451,  451,  632,  675,  667,  677,  632,  669,  670,

      678,  679,  680,  632,  668,  682,  674,  674,  683,  632,
      674,  684,  685,  668,  671,  672,  673,  686,  687,  451,
      451,  451,  451,  451,  451,  688,  675,  689,  677,  674,
      690,  692,  678,  679,  680,  693,  694,  682,  695,  696,
      683,  668,  697,  684,  685,  698,  701,  702,  703,  686,
      687,  704,  705,  707,  708,  709,  710,  688,  711,  689,
      713,  714,  690,  692,  715,  716,  717,  693,  694,  718,
      695,  696,  719,  668,  697,  720,  721,  698,  701,  702,
      703,  722,  723,  704,  705,  707,  708,  709,  710,  724,
      711,  725,  713,  714,  726,  727,  715,  716,  717,  728,

      729,  718,  730,  731,  719,  732, 1224,  720,  721,  948,
      948,  948, 1225,  722,  723, 1226,  976, 1227,  977,  948,
      980,  724,  981,  725, 1228, 1230,  726,  727, 1231, 1232,
      982,  728,  729,  983,  730,  731,  985,  732,  734,  734,
      734,  734,  734,  734,  734,  734,  734,  734,  976,  734,
      977,  986,  980,  987,  981,  734,  734,  734,  734,  734,
      734,  948,  982,  984,  984,  983,  988,  984,  985,  989,
      990,  992,  993,  994,  995,  996,  987,  997,  998,  999,
     1001, 1233, 1004,  986, 1005,  987,  984,  734,  734,  734,
      734,  734,  734,  990, 1009, 1010,  994, 1011,  988, 1012,

     1014,  989,  990,  992,  993,  994,  995,  996, 1015,  997,
      998,  999, 1001,  987, 1004, 1017, 1005, 1018, 1019, 1021,
     1022, 1023, 1024, 1025, 1026, 1027, 1009, 1010, 1029, 1011,
     1031, 1012, 1014, 1032, 1033, 1034, 1035, 1036, 1037, 1041,
     1015, 1043, 1044, 1045, 1046,  987, 1047, 1017, 1048, 1018,
     1019, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1234, 1235,
     1029, 1236, 1031, 1237, 1238, 1032, 1033, 1034, 1035, 1036,
     1037, 1041, 1240, 1043, 1044, 1045, 1046, 1243, 1047, 1244,
     1048, 1245, 1246, 1247, 1248, 1250, 1252, 1253, 1255, 1257,
     1258, 1259, 1261, 1252, 1262, 1264, 1265, 1266, 1267, 1268,

     1269, 1270, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1279,
     1280, 1281, 1282, 1279, 1284, 1285, 1287, 1289, 1292, 1294,
     1296, 1297, 1298, 1299, 1301, 1302, 1304, 1305, 1341, 1303,
     1308, 1309, 1342, 1311, 1312, 1313, 1314, 1306, 1315, 1316,
     1317, 1310, 1318, 1320, 1297, 1321, 1299, 1322, 1323, 1289,
     1292, 1294, 1303, 1297, 1298, 1299, 1301, 1302, 1304, 1305,
     1306, 1303, 1308, 1309, 1310, 1311, 1312, 1313, 1314, 1306,
     1315, 1316, 1317, 1310, 1318, 1320, 1324, 1321, 1325, 1322,
     1323, 1326, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1336,
     1340, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351,

     1352, 1353, 1354, 1357, 1358, 1359, 1360, 1361, 1324, 1362,
     1325, 1363, 1365, 1326, 1328, 1329, 1330, 1331, 1332, 1333,
     1334, 1336, 1340, 1343, 1366, 1367, 1346, 1347, 1368, 1371,
     1372, 1373, 1374, 1375, 1376, 1377, 1378, 1379, 1380, 1381,
     1383, 1384, 1385, 1386, 1387, 1388, 1389, 1390, 1391, 1393,
     1396, 1397, 1398, 1399, 1400, 1401, 1402, 1404, 1405, 1406,
     1408, 1410, 1412, 1413, 1416, 1417, 1418, 1421, 1422, 1424,
     1426, 1427, 1428, 1429, 1430, 1431, 1432, 1435, 1436, 1439,
     1441, 1442, 1443, 1442, 1444, 1445, 1448, 1449, 1450, 1451,
     1452, 1453, 1454, 1455, 1457, 1460, 1462, 1464, 1466, 1467,

     1468, 1469, 1470, 1471, 1473, 1474, 1475, 1476, 1477, 1479,
     1480, 1482, 1483, 1484, 1485, 1486, 1487, 1488, 1489, 1490,
     1493, 1494, 1495, 1499, 1501, 1502, 1503, 1508, 1510, 1512,
     1513, 1515, 1516, 1517, 1518, 1519, 1522, 1523, 1524, 1525,
     1531, 1532, 1533, 1534, 1535, 1536, 1537, 1538, 1539, 1541,
     1543, 1544, 1545, 1546, 1547, 1549, 1550, 1555, 1558, 1560,
     1561, 1562, 1563, 1564, 1565, 1566, 1585, 1591, 1569, 1570,
     1571, 1572, 1573, 1574, 1577, 1578, 1567, 1579, 1580, 1522,
     1583, 1558, 1560, 1584, 1562, 1586, 1564, 1565, 1587, 1555,
     1558, 1560, 1561, 1562, 1563, 1564, 1565, 1566, 1533, 1567,

     1569, 1570, 1571, 1572, 1573, 1574, 1577, 1578, 1567, 1579,
     1580, 1588, 1583, 1590, 1592, 1584, 1594, 1586, 1595, 1596,
     1587, 1597, 1598, 1599, 1601, 1603, 1606, 1607, 1608, 1610,
     1612, 1613, 1615, 1617, 1619, 1620, 1622, 1624, 1626, 1627,
     1628, 1630, 1634, 1588, 1636, 1590, 1637, 1638, 1639, 1643,
     1595, 1596, 1644, 1648, 1598, 1599, 1650, 1651, 1657, 1658,
     1661, 1662, 1664, 1666, 1669, 1670, 1671, 1672, 1675, 1676,
     1677, 1680, 1683, 1685, 1689, 1690, 1691, 1695, 1700, 1701,
     1704, 1707, 1709, 1710, 1711, 1712, 1713, 1720, 1721, 1724,
     1726, 1727, 1728, 1729, 1731, 1733, 1734, 1736, 1740, 1742,

     1743, 1745, 1746, 1747, 1749, 1750, 1752, 1753, 1754, 1756,
     1758, 1759, 1759, 1761, 1765, 1759, 1766, 1767, 1770, 1771,
     1772, 1773, 1774, 1775, 1776, 1777, 1779, 1780, 1750, 1752,
     1753, 1754, 1756, 1758, 1759, 1782, 1749, 1750, 1752, 1753,
     1754, 1756, 1758, 1783, 1791, 1761, 1765, 1798, 1766, 1767,
     1770, 1771, 1772, 1773, 1774, 1775, 1776, 1804, 1779, 1780,
     1808, 1817, 1835, 1845, 1759, 1846, 1849, 1851, 1854, 1855,
     1859, 1860, 1862, 1862, 1864, 1783, 1862, 1865, 1867, 1868,
     1869, 1873, 1875, 1876, 1877, 1878, 1885, 1887, 1888, 1889,
     1896, 1898, 1899, 1903, 1860, 1862, 1900, 1902, 1905, 1908,

     1909, 1910, 1859, 1860, 1911, 1912, 1864, 1914, 1918, 1865,
     1867, 1868, 1869, 1873, 1875, 1876, 1919, 1878, 1920, 1921,
     1923, 1924, 1896, 1898, 1126, 1862, 1125, 1123, 1900, 1902,
     1122, 1908, 1909, 1121, 1120, 1119, 1911, 1118, 1117, 1116,
     1918, 1115, 1111, 1110, 1109, 1108, 1107, 1106, 1105, 1104,
     1103, 1921, 1102, 1924, 1928, 1928, 1928, 1928, 1928, 1928,
     1928, 1928, 1928, 1928, 1928, 1928, 1928, 1928, 1928, 1928,
     1928, 1928, 1928, 1928, 1928, 1928, 1928, 1928, 1928, 1928,
     1928, 1928, 1928, 1928, 1928, 1928, 1928, 1928, 1928, 1928,
     1928, 1928, 1928, 1928, 1928, 1928, 1928, 1928, 1928, 1928,

     1928, 1928, 1928, 1928, 1928, 1928, 1928, 1928, 1928, 1928,
     1928, 1928, 1928, 1928, 1928, 1928, 1928, 1928, 1928, 1928,
     1928, 1928, 1928, 1928, 1928, 1928, 1928, 1928, 1928, 1928,
     1928, 1928, 1928, 1928, 1928, 1928, 1928, 1928, 1928, 1928,
     1928, 1928, 1928, 1928, 1928, 1928, 1928, 1928, 1928, 1928,
     1928, 1928, 1928, 1928, 1928, 1928, 1928, 1928, 1928, 1928,
     1928, 1928, 1928, 1928, 1928, 1928, 1928, 1928, 1928, 1928,
     1928, 1928, 1928, 1928, 1928, 1928, 1928, 1928, 1928, 1928,
     1928, 1928, 1928, 1928, 1928, 1928, 1928, 1928, 1928, 1928,
     1928, 1928, 1928, 1928, 1928, 1928, 1928, 1928, 1928, 1928,

     1928, 1928, 1928, 1928, 1928, 1928, 1928, 1928, 1928, 1928,
     1928, 1928, 1928, 1928, 1928, 1928, 1928, 1928, 1928, 1928,
     1928, 1928, 1928, 1928, 1928, 1928, 1928, 1928, 1928, 1928,
     1928, 1928, 1928, 1928, 1928, 1928, 1928, 1928, 1928, 1928,
     1928, 1928, 1928, 1928, 1928, 1928, 1928, 1928, 1928, 1928,
     1928, 1928, 1928, 1928, 1928, 1928, 1928, 1928, 1928, 1928,
     1928, 1928, 1928, 1928, 1928, 1928, 1928, 1928, 1928, 1928,
     1928, 1928, 1928, 1928, 1928, 1928, 1928, 1928, 1928, 1928,
     1928, 1928, 1928, 1928, 1928, 1928, 1928, 1928, 1928, 1928,
     1928, 1928, 1928, 1928, 1928, 1928, 1928, 1928, 1928, 1928,

     1928, 1928, 1928, 1928, 1928, 1928, 1928, 1928, 1928, 1929,
     1929, 1929, 1929, 1929, 1929, 1929, 1929, 1929, 1929, 1929,
     1929, 1929, 1929, 1929, 1929, 1929, 1929, 1929, 1929, 1929,
     1929, 1929, 1929, 1929, 1929, 1929, 1929, 1929, 1929, 1929,
     1929, 1929, 1929, 1929, 1929, 1929, 1929, 1929, 1929, 1929,
     1929, 1929, 1929, 1929, 1929, 1929, 1929, 1929, 1929, 1929,
     1929, 1929, 1929, 1929, 1929, 1929, 1929, 1929, 1929, 1929,
     1929, 1929, 1929, 1929, 1929, 1929, 1929, 1929, 1929, 1929,
     1929, 1929, 1929, 1929, 1929, 1929, 1929, 1929, 1929, 1929,
     1929, 1929, 1929, 1929, 1929, 1929, 1929, 1929, 1929, 1929,

     1929, 1929, 1929, 1929, 1929, 1929, 1929, 1929, 1929, 1929,
     1929, 1929, 1929, 1929, 1929, 1929, 1929, 1929, 1929, 1929,
     1929, 1929, 1929, 1929, 1929, 1929, 1929, 1929, 1929, 1929,
     1929, 1929, 1929, 1929, 1929, 1929, 1929, 1929, 1929, 1929,
     1929, 1929, 1929, 1929, 1929, 1929, 1929, 1929, 1929, 1929,
     1929, 1929, 1929, 1929, 1929, 1929, 1929, 1929, 1929, 1929,
     1929, 1929, 1929, 1929, 1929, 1929, 1929, 1929, 1929, 1929,
     1929, 1929, 1929, 1929, 1929, 1929, 1929, 1929, 1929, 1929,
     1929, 1929, 1929, 1929, 1929, 1929, 1929, 1929, 1929, 1929,
     1929, 1929, 1929, 1929, 1929, 1929, 1929, 1929, 1929, 1929,

     1929, 1929, 1929, 1929, 1929, 1929, 1929, 1929, 1929, 1929,
     1929, 1929, 1929, 1929, 1929, 1929, 1929, 1929, 1929, 1929,
     1929, 1929, 1929, 1929, 1929, 1929, 1929, 1929, 1929, 1929,
     1929, 1929, 1929, 1929, 1929, 1929, 1929, 1929, 1929, 1929,
     1929, 1929, 1929, 1929, 1929, 1929, 1929, 1929, 1929, 1929,
     1929, 1929, 1929, 1929, 1929, 1929, 1929, 1929, 1929, 1929,
     1929, 1929, 1929, 1929, 1930, 1930, 1930, 1930, 1930, 1930,
     1930, 1930, 1930, 1930, 1930, 1930, 1930, 1930, 1930, 1930,
     1930, 1930, 1930, 1930, 1930, 1930, 1930, 1930, 1930, 1930,
     1930, 1930, 1930, 1930, 1930, 1930, 1930, 1930, 1930, 1930,

     1930, 1930, 1930, 1930, 1930, 1930, 1930, 1930, 1930, 1930,
     1930, 1930, 1930, 1930, 1930, 1930, 1930, 1930, 1930, 1930,
     1930, 1930, 1930, 1930, 1930, 1930, 1930, 1930, 1930, 1930,
     1930, 1930, 1930, 1930, 1930, 1930, 1930, 1930, 1930, 1930,
     1930, 1930, 1930, 1930, 1930, 1930, 1930, 1930, 1930, 1930,
     1930, 1930, 1930, 1930, 1930, 1930, 1930, 1930, 1930, 1930,
     1930, 1930, 1930, 1930, 1930, 1930, 1930, 1930, 1930, 1930,
     1930, 1930, 1930, 1930, 1930, 1930, 1930, 1930, 1930, 1930,
     1930, 1930, 1930, 1930, 1930, 1930, 1930, 1930, 1930, 1930,
     1930, 1930, 1930, 1930, 1930, 1930, 1930, 1930, 1930, 1930,

     1930, 1930, 1930, 1930, 1930, 1930, 1930, 1930, 1930, 1930,
     1930, 1930, 1930, 1930, 1930, 1930, 1930, 1930, 1930, 1930,
     1930, 1930, 1930, 1930, 1930, 1930, 1930, 1930, 1930, 1930,
     1930, 1930, 1930, 1930, 1930, 1930, 1930, 1930, 1930, 1930,
     1930, 1930, 1930, 1930, 1930, 1930, 1930, 1930, 1930, 1930,
     1930, 1930, 1930, 1930, 1930, 1930, 1930, 1930, 1930, 1930,
     1930, 1930, 1930, 1930, 1930, 1930, 1930, 1930, 1930, 1930,
     1930, 1930, 1930, 1930, 1930, 1930, 1930, 1930, 1930, 1930,
     1930, 1930, 1930, 1930, 1930, 1930, 1930, 1930, 1930, 1930,
     1930, 1930, 1930, 1930, 1930, 1930, 1930, 1930, 1930, 1930,

     1930, 1930, 1930, 1930, 1930, 1930, 1930, 1930, 1930, 1930,
     1930, 1930, 1930, 1930, 1930, 1930, 1930, 1930, 1930, 1931,
     1931, 1931, 1931, 1931, 1931, 1931, 1931, 1931, 1931, 1931,
     1931, 1931, 1931, 1931, 1931, 1931, 1931, 1931, 1931, 1931,
     1931, 1931, 1931, 1931, 1931, 1931, 1931, 1931, 1931, 1931,
     1931, 1931, 1931, 1931, 1931, 1931, 1931, 1931, 1931, 1931,
     1931, 1931, 1931, 1931, 1931, 1931, 1931, 1931, 1931, 1931,
     1931, 1931, 1931, 1931, 1931, 1931, 1931, 1931, 1931, 1931,
     1931, 1931, 1931, 1931, 1931, 1931, 1931, 1931, 1931, 1931,
     1931, 1931, 1931, 1931, 1931, 1931, 1931, 1931, 1931, 1931,

     1931, 1931, 1931, 1931, 1931, 1931, 1931, 1931, 1931, 1931,
     1931, 1931, 1931, 1931, 1931, 1931, 1931, 1931, 1931, 1931,
     1931, 1931, 1931, 1931, 1931, 1931, 1931, 1931, 1931, 1931,
     1931, 1931, 1931, 1931, 1931, 1931, 1931, 1931, 1931, 1931,
     1931, 1931, 1931, 1931, 1931, 1931, 1931, 1931, 1931, 1931,
     1931, 1931, 1931, 1931, 1931, 1931, 1931, 1931, 1931, 1931,
     1931, 1931, 1931, 1931, 1931, 1931, 1931, 1931, 1931, 1931,
     1931, 1931, 1931, 1931, 1931, 1931, 1931, 1931, 1931, 1931,
     1931, 1931, 1931, 1931, 1931, 1931, 1931, 1931, 1931, 1931,
     1931, 1931, 1931, 1931, 1931, 1931, 1931, 1931, 1931, 1931,

     1931, 1931, 1931, 1931, 1931, 1931, 1931, 1931, 1931, 1931,
     1931, 1931, 1931, 1931, 1931, 1931, 1931, 1931, 1931, 1931,
     1931, 1931, 1931, 1931, 1931, 1931, 1931, 1931, 1931, 1931,
     1931, 1931, 1931, 1931, 1931, 1931, 1931, 1931, 1931, 1931,
     1931, 1931, 1931, 1931, 1931, 1931, 1931, 1931, 1931, 1931,
     1931, 1931, 1931, 1931, 1931, 1931, 1931, 1931, 1931, 1931,
     1931, 1931, 1931, 1931, 1931, 1931, 1931, 1931, 1931, 1931,
     1931, 1931, 1931, 1931, 1932, 1932, 1932, 1932, 1932, 1932,
     1932, 1932, 1932, 1932, 1932, 1932, 1932, 1932, 1932, 1932,
     1932, 1932, 1932, 1932, 1932, 1932, 1932, 1932, 1932, 1932,

     1932, 1932, 1932, 1932, 1932, 1932, 1932, 1932, 1932, 1932,
     1932, 1932, 1932, 1932, 1932, 1932, 1932, 1932, 1932, 1932,
     1932, 1932, 1932, 1932, 1932, 1932, 1932, 1932, 1932, 1932,
     1932, 1932, 1932, 1932, 1932, 1932, 1932, 1932, 1932, 1932,
     1932, 1932, 1932, 1932, 1932, 1932, 1932, 1932, 1932, 1932,
     1932, 1932, 1932, 1932, 1932, 1932, 1932, 1932, 1932, 1932,
     1932, 1932, 1932, 1932, 1932, 1932, 1932, 1932, 1932, 1932,
     1932, 1932, 1932, 1932, 1932, 1932, 1932, 1932, 1932, 1932,
     1932, 1932, 1932, 1932, 1932, 1932, 1932, 1932, 1932, 1932,
     1932, 1932, 1932, 1932, 1932, 1932, 1932, 1932, 1932, 1932,

     1932, 1932, 1932, 1932, 1932, 1932, 1932, 1932, 1932, 1932,
     1932, 1932, 1932, 1932, 1932, 1932, 1932, 1932, 1932, 1932,
     1932, 1932, 1932, 1932, 1932, 1932, 1932, 1932, 1932, 1932,
     1932, 1932, 1932, 1932, 1932, 1932, 1932, 1932, 1932, 1932,
     1932, 1932, 1932, 1932, 1932, 1932, 1932, 1932, 1932, 1932,
     1932, 1932, 1932, 1932, 1932, 1932, 1932, 1932, 1932, 1932,
     1932, 1932, 1932, 1932, 1932, 1932, 1932, 1932, 1932, 1932,
     1932, 1932, 1932, 1932, 1932, 1932, 1932, 1932, 1932, 1932,
     1932, 1932, 1932, 1932, 1932, 1932, 1932, 1932, 1932, 1932,
     1932, 1932, 1932, 1932, 1932, 1932, 1932, 1932, 1932, 1932,

     1932, 1932, 1932, 1932, 1932, 1932, 1932, 1932, 1932, 1932,
     1932, 1932, 1932, 1932, 1932, 1932, 1932, 1932, 1932, 1932,
     1932, 1932, 1932, 1932, 1932, 1932, 1932, 1932, 1932, 1933,
     1933, 1933, 1933, 1933, 1933, 1933, 1933, 1933, 1933, 1933,
     1933, 1933, 1933, 1933, 1933, 1933, 1933, 1933, 1933, 1933,
     1933, 1933, 1933, 1933, 1933, 1933, 1933, 1933, 1933, 1933,
     1933, 1933, 1933, 1933, 1933, 1933, 1933, 1933, 1933, 1933,
     1933, 1933, 1933, 1933, 1933, 1933, 1933, 1933, 1933, 1933,
     1933, 1933, 1933, 1933, 1933, 1933, 1933, 1933, 1933, 1933,
     1933, 1933, 1933, 1933, 1933, 1933, 1933, 1933, 1933, 1933,

     1933, 1933, 1933, 1933, 1933, 1933, 1933, 1933, 1933, 1933,
     1933, 1933, 1933, 1933, 1933, 1933, 1933, 1933, 1933, 1933,
     1933, 1933, 1933, 1933, 1933, 1933, 1933, 1933, 1933, 1933,
     1933, 1933, 1933, 1933, 1933, 1933, 1933, 1933, 1933, 1933,
     1933, 1933, 1933, 1933, 1933, 1933, 1933, 1933, 1933, 1933,
     1933, 1933, 1933, 1933, 1933, 1933, 1933, 1933, 1933, 1933,
     1933, 1933, 1933, 1933, 1933, 1933, 1933, 1933, 1933, 1933,
     1933, 1933, 1933, 1933, 1933, 1933, 1933, 1933, 1933, 1933,
     1933, 1933, 1933, 1933, 1933, 1933, 1933, 1933, 1933, 1933,
     1933, 1933, 1933, 1933, 1933, 1933, 1933, 1933, 1933, 1933,

     1933, 1933, 1933, 1933, 1933, 1933, 1933, 1933, 1933, 1933,
     1933, 1933, 1933, 1933, 1933, 1933, 1933, 1933, 1933, 1933,
     1933, 1933, 1933, 1933, 1933, 1933, 1933, 1933, 1933, 1933,
     1933, 1933, 1933, 1933, 1933, 1933, 1933, 1933, 1933, 1933,
     1933, 1933, 1933, 1933, 1933, 1933, 1933, 1933, 1933, 1933,
     1933, 1933, 1933, 1933, 1933, 1933, 1933, 1933, 1933, 1933,
     1933, 1933, 1933, 1933, 1933, 1933, 1933, 1933, 1933, 1933,
     1933, 1933, 1933, 1933, 1933, 1933, 1933, 1933, 1933, 1933,
     1933, 1933, 1933, 1933, 1934, 1934, 1934, 1934, 1934, 1934,
     1934, 1934, 1934, 1934, 1934, 1934, 1934, 1934, 1934, 1934,

     1934, 1934, 1934, 1934, 1934, 1934, 1934, 1934, 1934, 1934,
     1934, 1934, 1934, 1934, 1934, 1934, 1934, 1934, 1934, 1934,
     1934, 1934, 1934, 1934, 1934, 1934, 1934, 1934, 1934, 1934,
     1934, 1934, 1934, 1934, 1934, 1934, 1934, 1934, 1934, 1934,
     1934, 1934, 1934, 1934, 1934, 1934, 1934, 1934, 1934, 1934,
     1934, 1934, 1934, 1934, 1934, 1934, 1934, 1934, 1934, 1934,
     1934, 1934, 1934, 1934, 1934, 1934, 1934, 1934, 1934, 1934,
     1934, 1934, 1934, 1934, 1934, 1934, 1934, 1934, 1934, 1934,
     1934, 1934, 1934, 1934, 1934, 1934, 1934, 1934, 1934, 1934,
     1934, 1934, 1934, 1934, 1934, 1934, 1934, 1934, 1934, 1934,

     1934, 1934, 1934, 1934, 1934, 1934, 1934, 1934, 1934, 1934,
     1934, 1934, 1934, 1934, 1934, 1934, 1934, 1934, 1934, 1934,
     1934, 1934, 1934, 1934, 1934, 1934, 1934, 1934, 1934, 1934,
     1934, 1934, 1934, 1934, 1934, 1934, 1934, 1934, 1934, 1934,
     1934, 1934, 1934, 1934, 1934, 1934, 1934, 1934, 1934, 1934,
     1934, 1934, 1934, 1934, 1934, 1934, 1934, 1934, 1934, 1934,
     1934, 1934, 1934, 1934, 1934, 1934, 1934, 1934, 1934, 1934,
     1934, 1934, 1934, 1934, 1934, 1934, 1934, 1934, 1934, 1934,
     1934, 1934, 1934, 1934, 1934, 1934, 1934, 1934, 1934, 1934,
     1934, 1934, 1934, 1934, 1934, 1934, 1934, 1934, 1934, 1934,

     1934, 1934, 1934, 1934, 1934, 1934, 1934, 1934, 1934, 1934,
     1934, 1934, 1934, 1934, 1934, 1934, 1934, 1934, 1934, 1934,
     1934, 1934, 1934, 1934, 1934, 1934, 1934, 1934, 1934, 1934,
     1934, 1934, 1934, 1934, 1934, 1934, 1934, 1934, 1934, 1935,
     1935, 1935, 1935, 1935, 1935, 1935, 1935, 1935, 1935, 1935,
     1935, 1935, 1935, 1935, 1935, 1935, 1935, 1935, 1935, 1935,
     1935, 1935, 1935, 1935, 1935, 1935, 1935, 1935, 1935, 1935,
     1935, 1935, 1935, 1935, 1935, 1935, 1935, 1935, 1935, 1935,
     1935, 1935, 1935, 1935, 1935, 1935, 1935, 1935, 1935, 1935,
     1935, 1935, 1935, 1935, 1935, 1935, 1935, 1935, 1935, 1935,

     1935, 1935, 1935, 1935, 1935, 1935, 1935, 1935, 1935, 1935,
     1935, 1935, 1935, 1935, 1935, 1935, 1935, 1935, 1935, 1935,
     1935, 1935, 1935, 1935, 1935, 1935, 1935, 1935, 1935, 1935,
     1935, 1935, 1935, 1935, 1935, 1935, 1935, 1935, 1935, 1935,
     1935, 1935, 1935, 1935, 1935, 1935, 1935, 1935, 1935, 1935,
     1935, 1935, 1935, 1935, 1935, 1935, 1935, 1935, 1935, 1935,
     1935, 1935, 1935, 1935, 1935, 1935, 1935, 1935, 1935, 1935,
     1935, 1935, 1935, 1935, 1935, 1935, 1935, 1935, 1935, 1935,
     1935, 1935, 1935, 1935, 1935, 1935, 1935, 1935, 1935, 1935,
     1935, 1935, 1935, 1935, 1935, 1935, 1935, 1935, 1935, 1935,

     1935, 1935, 1935, 1935, 1935, 1935, 1935, 1935, 1935, 1935,
     1935, 1935, 1935, 1935, 1935, 1935, 1935, 1935, 1935, 1935,
     1935, 1935, 1935, 1935, 1935, 1935, 1935, 1935, 1935, 1935,
     1935, 1935, 1935, 1935, 1935, 1935, 1935, 1935, 1935, 1935,
     1935, 1935, 1935, 1935, 1935, 1935, 1935, 1935, 1935, 1935,
     1935, 1935, 1935, 1935, 1935, 1935, 1935, 1935, 1935, 1935,
     1935, 1935, 1935, 1935, 1935, 1935, 1935, 1935, 1935, 1935,
     1935, 1935, 1935, 1935, 1935, 1935, 1935, 1935, 1935, 1935,
     1935, 1935, 1935, 1935, 1935, 1935, 1935, 1935, 1935, 1935,
     1935, 1935, 1935, 1935, 1936, 1936, 1936, 1936, 1936, 1936,

     1936, 1936, 1936, 1936, 1936, 1936, 1936, 1936, 1936, 1936,
     1936, 1936, 1936, 1936, 1936, 1936, 1936, 1936, 1936, 1936,
     1936, 1936, 1936, 1936, 1936, 1936, 1936, 1936, 1936, 1936,
     1936, 1936, 1936, 1936, 1936, 1936, 1936, 1936, 1936, 1936,
     1936, 1936, 1936, 1936, 1936, 1936, 1936, 1936, 1936, 1936,
     1936, 1936, 1936, 1936, 1936, 1936, 1936, 1936, 1936, 1936,
     1936, 1936, 1936, 1936, 1936, 1936, 1936, 1936, 1936, 1936,
     1936, 1936, 1936, 1936, 1936, 1936, 1936, 1936, 1936, 1936,
     1936, 1936, 1936, 1936, 1936, 1936, 1936, 1936, 1936, 1936,
     1936, 1936, 1936, 1936, 1936, 1936, 1936, 1936, 1936, 1936,

     1936, 1936, 1936, 1936, 1936, 1936, 1936, 1936, 1936, 1936,
     1936, 1936, 1936, 1936, 1936, 1936, 1936, 1936, 1936, 1936,
     1936, 1936, 1936, 1936, 1936, 1936, 1936, 1936, 1936, 1936,
     1936, 1936, 1936, 1936, 1936, 1936, 1936, 1936, 1936, 1936,
     1936, 1936, 1936, 1936, 1936, 1936, 1936, 1936, 1936, 1936,
     1936, 1936, 1936, 1936, 1936, 1936, 1936, 1936, 1936, 1936,
     1936, 1936, 1936, 1936, 1936, 1936, 1936, 1936, 1936, 1936,
     1936, 1936, 1936, 1936, 1936, 1936, 1936, 1936, 1936, 1936,
     1936, 1936, 1936, 1936, 1936, 1936, 1936, 1936, 1936, 1936,
     1936, 1936, 1936, 1936, 1936, 1936, 1936, 1936, 1936, 1936,

     1936, 1936, 1936, 1936, 1936, 1936, 1936, 1936, 1936, 1936,
     1936, 1936, 1936, 1936, 1936, 1936, 1936, 1936, 1936, 1936,
     1936, 1936, 1936, 1936, 1936, 1936, 1936, 1936, 1936, 1936,
     1936, 1936, 1936, 1936, 1936, 1936, 1936, 1936, 1936, 1936,
     1936, 1936, 1936, 1936, 1936, 1936, 1936, 1936, 1936, 1937,
     1937, 1937, 1937, 1937, 1937, 1937, 1937, 1937, 1937, 1937,
     1937, 1937, 1937, 1937, 1937, 1937, 1937, 1937, 1937, 1937,
     1937, 1937, 1937, 1937, 1937, 1937, 1937, 1937, 1937, 1937,
     1937, 1937, 1937, 1937, 1937, 1937, 1937, 1937, 1937, 1937,
     1937, 1937, 1937, 1937, 1937, 1937, 1937, 1937, 1937, 1937,

     1937, 1937, 1937, 1937, 1937, 1937, 1937, 1937, 1937, 1937,
     1937, 1937, 1937, 1937, 1937, 1937, 1937, 1937, 1937, 1937,
     1937, 1937, 1937, 1937, 1937, 1937, 1937, 1937, 1937, 1937,
     1937, 1937, 1937, 1937, 1937, 1937, 1937, 1937, 1937, 1937,
     1937, 1937, 1937, 1937, 1937, 1937, 1937, 1937, 1937, 1937,
     1937, 1937, 1937, 1937, 1937, 1937, 1937, 1937, 1937, 1937,
     1937, 1937, 1937, 1937, 1937, 1937, 1937, 1937, 1937, 1937,
     1937, 1937, 1937, 1937, 1937, 1937, 1937, 1937, 1937, 1937,
     1937, 1937, 1937, 1937, 1937, 1937, 1937, 1937, 1937, 1937,
     1937, 1937, 1937, 1937, 1937, 1937, 1937, 1937, 1937, 1937,

     1937, 1937, 1937, 1937, 1937, 1937, 1937, 1937, 1937, 1937,
     1937, 1937, 1937, 1937, 1937, 1937, 1937, 1937, 1937, 1937,
     1937, 1937, 1937, 1937, 1937, 1937, 1937, 1937, 1937, 1937,
     1937, 1937, 1937, 1937, 1937, 1937, 1937, 1937, 1937, 1937,
     1937, 1937, 1937, 1937, 1937, 1937, 1937, 1937, 1937, 1937,
     1937, 1937, 1937, 1937, 1937, 1937, 1937, 1937, 1937, 1937,
     1937, 1937, 1937, 1937, 1937, 1937, 1937, 1937, 1937, 1937,
     1937, 1937, 1937, 1937, 1937, 1937, 1937, 1937, 1937, 1937,
     1937, 1937, 1937, 1937, 1937, 1937, 1937, 1937, 1937, 1937,
     1937, 1937, 1937, 1937, 1937, 1937, 1937, 1937, 1937, 1937,

     1937, 1937, 1937, 1937, 1938, 1938, 1938, 1938, 1938, 1938,
     1938, 1938, 1938, 1938, 1938, 1938, 1938, 1938, 1938, 1938,
     1938, 1938, 1938, 1938, 1938, 1938, 1938, 1938, 1938, 1938,
     1938, 1938, 1938, 1938, 1938, 1938, 1938, 1938, 1938, 1938,
     1938, 1938, 1938, 1938, 1938, 1938, 1938, 1938, 1938, 1938,
     1938, 1938, 1938, 1938, 1938, 1938, 1938, 1938, 1938, 1938,
     1938, 1938, 1938, 1938, 1938, 1938, 1938, 1938, 1938, 1938,
     1938, 1938, 1938, 1938, 1938, 1938, 1938, 1938, 1938, 1938,
     1938, 1938, 1938, 1938, 1938, 1938, 1938, 1938, 1938, 1938,
     1938, 1938, 1938, 1938, 1938, 1938, 1938, 1938, 1938, 1938,

     1938, 1938, 1938, 1938, 1938, 1938, 1938, 1938, 1938, 1938,
     1938, 1938, 1938, 1938, 1938, 1938, 1938, 1938, 1938, 1938,
     1938, 1938, 1938, 1938, 1938, 1938, 1938, 1938, 1938, 1938,
     1938, 1938, 1938, 1938, 1938, 1938, 1938, 1938, 1938, 1938,
     1938, 1938, 1938, 1938, 1938, 1938, 1938, 1938, 1938, 1938,
     1938, 1938, 1938, 1938, 1938, 1938, 1938, 1938, 1938, 1938,
     1938, 1938, 1938, 1938, 1938, 1938, 1938, 1938, 1938, 1938,
     1938, 1938, 1938, 1938, 1938, 1938, 1938, 1938, 1938, 1938,
     1938, 1938, 1938, 1938, 1938, 1938, 1938, 1938, 1938, 1938,
     1938, 1938, 1938, 1938, 1938, 1938, 1938, 1938, 1938, 1938,

     1938, 1938, 1938, 1938, 1938, 1938, 1938, 1938, 1938, 1938,
     1938, 1938, 1938, 1938, 1938, 1938, 1938, 1938, 1938, 1938,
     1938, 1938, 1938, 1938, 1938, 1938, 1938, 1938, 1938, 1938,
     1938, 1938, 1938, 1938, 1938, 1938, 1938, 1938, 1938, 1938,
     1938, 1938, 1938, 1938, 1938, 1938, 1938, 1938, 1938, 1938,
     1938, 1938, 1938, 1938, 1938, 1938, 1938, 1938, 1938, 1939,
     1939, 1939, 1939, 1939, 1939, 1939, 1939, 1939, 1939, 1939,
     1939, 1939, 1939, 1939, 1939, 1939, 1939, 1939, 1939, 1939,
     1939, 1939, 1939, 1939, 1939, 1939, 1939, 1939, 1939, 1939,
     1939, 1939, 1939, 1939, 1939, 1939, 1939, 1939, 1939, 1939,

     1939, 1939, 1939, 1939, 1939, 1939, 1939, 1939, 1939, 1939,
     1939, 1939, 1939, 1939, 1939, 1939, 1939, 1939, 1939, 1939,
     1939, 1939, 1939, 1939, 1939, 1939, 1939, 1939, 1939, 1939,
     1939, 1939, 1939, 1939, 1939, 1939, 1939, 1939, 1939, 1939,
     1939, 1939, 1939, 1939, 1939, 1939, 1939, 1939, 1939, 1939,
     1939, 1939, 1939, 1939, 1939, 1939, 1939, 1939, 1939, 1939,
     1939, 1939, 1939, 1939, 1939, 1939, 1939, 1939, 1939, 1939,
     1939, 1939, 1939, 1939, 1939, 1939, 1939, 1939, 1939, 1939,
     1939, 1939, 1939, 1939, 1939, 1939, 1939, 1939, 1939, 1939,
     1939, 1939, 1939, 1939, 1939, 1939, 1939, 1939, 1939, 1939,

     1939, 1939, 1939, 1939, 1939, 1939, 1939, 1939, 1939, 1939,
     1939, 1939, 1939, 1939, 1939, 1939, 1939, 1939, 1939, 1939,
     1939, 1939, 1939, 1939, 1939, 1939, 1939, 1939, 1939, 1939,
     1939, 1939, 1939, 1939, 1939, 1939, 1939, 1939, 1939, 1939,
     1939, 1939, 1939, 1939, 1939, 1939, 1939, 1939, 1939, 1939,
     1939, 1939, 1939, 1939, 1939, 1939, 1939, 1939, 1939, 1939,
     1939, 1939, 1939, 1939, 1939, 1939, 1939, 1939, 1939, 1939,
     1939, 1939, 1939, 1939, 1939, 1939, 1939, 1939, 1939, 1939,
     1939, 1939, 1939, 1939, 1939, 1939, 1939, 1939, 1939, 1939,
     1939, 1939, 1939, 1939, 1939, 1939, 1939, 1939, 1939, 1939,

     1939, 1939, 1939, 1939, 1939, 1939, 1939, 1939, 1939, 1939,
     1939, 1939, 1939, 1939, 1940, 1940, 1940, 1940, 1940, 1940,
     1940, 1940, 1940, 1940, 1940, 1940, 1940, 1940, 1940, 1940,
     1940, 1940, 1940, 1940, 1940, 1940, 1940, 1940, 1940, 1940,
     1940, 1940, 1940, 1940, 1940, 1940, 1940, 1940, 1940, 1940,
     1940, 1940, 1940, 1940, 1940, 1940, 1940, 1940, 1940, 1940,
     1940, 1940, 1940, 1940, 1940, 1940, 1940, 1940, 1940, 1940,
     1940, 1940, 1940, 1940, 1940, 1940, 1940, 1940, 1940, 1940,
     1940, 1940, 1940, 1940, 1940, 1940, 1940, 1940, 1940, 1940,
     1940, 1940, 1940, 1940, 1940, 1940, 1940, 1940, 1940, 1940,

     1940, 1940, 1940, 1940, 1940, 1940, 1940, 1940, 1940, 1940,
     1940, 1940, 1940, 1940, 1940, 1940, 1940, 1940, 1940, 1940,
     1940, 1940, 1940, 1940, 1940, 1940, 1940, 1940, 1940, 1940,
     1940, 1940, 1940, 1940, 1940, 1940, 1940, 1940, 1940, 1940,
     1940, 1940, 1940, 1940, 1940, 1940, 1940, 1940, 1940, 1940,
     1940, 1940, 1940, 1940, 1940, 1940, 1940, 1940, 1940, 1940,
     1940, 1940, 1940, 1940, 1940, 1940, 1940, 1940, 1940, 1940,
     1940, 1940, 1940, 1940, 1940, 1940, 1940, 1940, 1940, 1940,
     1940, 1940, 1940, 1940, 1940, 1940, 1940, 1940, 1940, 1940,
     1940, 1940, 1940, 1940, 1940, 1940, 1940, 1940, 1940, 1940,

     1940, 1940, 1940, 1940, 1940, 1940, 1940, 1940, 1940, 1940,
     1940, 1940, 1940, 1940, 1940, 1940, 1940, 1940, 1940, 1940,
     1940, 1940, 1940, 1940, 1940, 1940, 1940, 1940, 1940, 1940,
     1940, 1940, 1940, 1940, 1940, 1940, 1940, 1940, 1940, 1940,
     1940, 1940, 1940, 1940, 1940, 1940, 1940, 1940, 1940, 1940,
     1940, 1940, 1940, 1940, 1940, 1940, 1940, 1940, 1940, 1940,
     1940, 1940, 1940, 1940, 1940, 1940, 1940, 1940, 1940, 1941,
     1941, 1941, 1941, 1941, 1941, 1941, 1941, 1941, 1941, 1941,
     1941, 1941, 1941, 1941, 1941, 1941, 1941, 1941, 1941, 1941,
     1941, 1941, 1941, 1941, 1941, 1941, 1941, 1941, 1941, 1941,

     1941, 1941, 1941, 1941, 1941, 1941, 1941, 1941, 1941, 1941,
     1941, 1941, 1941, 1941, 1941, 1941, 1941, 1941, 1941, 1941,
     1941, 1941, 1941, 1941, 1941, 1941, 1941, 1941, 1941, 1941,
     1941, 1941, 1941, 1941, 1941, 1941, 1941, 1941, 1941, 1941,
     1941, 1941, 1941, 1941, 1941, 1941, 1941, 1941, 1941, 1941,
     1941, 1941, 1941, 1941, 1941, 1941, 1941, 1941, 1941, 1941,
     1941, 1941, 1941, 1941, 1941, 1941, 1941, 1941, 1941, 1941,
     1941, 1941, 1941, 1941, 1941, 1941, 1941, 1941, 1941, 1941,
     1941, 1941, 1941, 1941, 1941, 1941, 1941, 1941, 1941, 1941,
     1941, 1941, 1941, 1941, 1941, 1941, 1941, 1941, 1941, 1941,

     1941, 1941, 1941, 1941, 1941, 1941, 1941, 1941, 1941, 1941,
     1941, 1941, 1941, 1941, 1941, 1941, 1941, 1941, 1941, 1941,
     1941, 1941, 1941, 1941, 1941, 1941, 1941, 1941, 1941, 1941,
     1941, 1941, 1941, 1941, 1941, 1941, 1941, 1941, 1941, 1941,
     1941, 1941, 1941, 1941, 1941, 1941, 1941, 1941, 1941, 1941,
     1941, 1941, 1941, 1941, 1941, 1941, 1941, 1941, 1941, 1941,
     1941, 1941, 1941, 1941, 1941, 1941, 1941, 1941, 1941, 1941,
     1941, 1941, 1941, 1941, 1941, 1941, 1941, 1941, 1941, 1941,
     1941, 1941, 1941, 1941, 1941, 1941, 1941, 1941, 1941, 1941,
     1941, 1941, 1941, 1941, 1941, 1941, 1941, 1941, 1941, 1941,

     1941, 1941, 1941, 1941, 1941, 1941, 1941, 1941, 1941, 1941,
     1941, 1941, 1941, 1941, 1941, 1941, 1941, 1941, 1941, 1941,
     1941, 1941, 1941, 1941, 1942, 1942, 1942, 1942, 1942, 1942,
     1942, 1942, 1942, 1942, 1942, 1942, 1942, 1942, 1942, 1942,
     1942, 1942, 1942, 1942, 1942, 1942, 1942, 1942, 1942, 1942,
     1942, 1942, 1942, 1942, 1942, 1942, 1942, 1942, 1942, 1942,
     1942, 1942, 1942, 1942, 1942, 1942, 1942, 1942, 1942, 1942,
     1942, 1942, 1942, 1942, 1942, 1942, 1942, 1942, 1942, 1942,
     1942, 1942, 1942, 1942, 1942, 1942, 1942, 1942, 1942, 1942,
     1942, 1942, 1942, 1942, 1942, 1942, 1942, 1942, 1942, 1942,

     1942, 1942, 1942, 1942, 1942, 1942, 1942, 1942, 1942, 1942,
     1942, 1942, 1942, 1942, 1942, 1942, 1942, 1942, 1942, 1942,
     1942, 1942, 1942, 1942, 1942, 1942, 1942, 1942, 1942, 1942,
     1942, 1942, 1942, 1942, 1942, 1942, 1942, 1942, 1942, 1942,
     1942, 1942, 1942, 1942, 1942, 1942, 1942, 1942, 1942, 1942,
     1942, 1942, 1942, 1942, 1942, 1942, 1942, 1942, 1942, 1942,
     1942, 1942, 1942, 1942, 1942, 1942, 1942, 1942, 1942, 1942,
     1942, 1942, 1942, 1942, 1942, 1942, 1942, 1942, 1942, 1942,
     1942, 1942, 1942, 1942, 1942, 1942, 1942, 1942, 1942, 1942,
     1942, 1942, 1942, 1942, 1942, 1942, 1942, 1942, 1942, 1942,

     1942, 1942, 1942, 1942, 1942, 1942, 1942, 1942, 1942, 1942,
     1942, 1942, 1942, 1942, 1942, 1942, 1942, 1942, 1942, 1942,
     1942, 1942, 1942, 1942, 1942, 1942, 1942, 1942, 1942, 1942,
     1942, 1942, 1942, 1942, 1942, 1942, 1942, 1942, 1942, 1942,
     1942, 1942, 1942, 1942, 1942, 1942, 1942, 1942, 1942, 1942,
     1942, 1942, 1942, 1942, 1942, 1942, 1942, 1942, 1942, 1942,
     1942, 1942, 1942, 1942, 1942, 1942, 1942, 1942, 1942, 1942,
     1942, 1942, 1942, 1942, 1942, 1942, 1942, 1942, 1942, 1943,
     1943, 1943, 1943, 1943, 1943, 1943, 1943, 1943, 1943, 1943,
     1943, 1943, 1943, 1943, 1943, 1943, 1943, 1943, 1943, 1943,

     1943, 1943, 1943, 1943, 1943, 1943, 1943, 1943, 1943, 1943,
     1943, 1943, 1943, 1943, 1943, 1943, 1943, 1943, 1943, 1943,
     1943, 1943, 1943, 1943, 1943, 1943, 1943, 1943, 1943, 1943,
     1943, 1943, 1943, 1943, 1943, 1943, 1943, 1943, 1943, 1943,
     1943, 1943, 1943, 1943, 1943, 1943, 1943, 1943, 1943, 1943,
     1943, 1943, 1943, 1943, 1943, 1943, 1943, 1943, 1943, 1943,
     1943, 1943, 1943, 1943, 1943, 1943, 1943, 1943, 1943, 1943,
     1943, 1943, 1943, 1943, 1943, 1943, 1943, 1943, 1943, 1943,
     1943, 1943, 1943, 1943, 1943, 1943, 1943, 1943, 1943, 1943,
     1943, 1943, 1943, 1943, 1943, 1943, 1943, 1943, 1943, 1943,

     1943, 1943, 1943, 1943, 1943, 1943, 1943, 1943, 1943, 1943,
     1943, 1943, 1943, 1943, 1943, 1943, 1943, 1943, 1943, 1943,
     1943, 1943, 1943, 1943, 1943, 1943, 1943, 1943, 1943, 1943,
     1943, 1943, 1943, 1943, 1943, 1943, 1943, 1943, 1943, 1943,
     1943, 1943, 1943, 1943, 1943, 1943, 1943, 1943, 1943, 1943,
     1943, 1943, 1943, 1943, 1943, 1943, 1943, 1943, 1943, 1943,
     1943, 1943, 1943, 1943, 1943, 1943, 1943, 1943, 1943, 1943,
     1943, 1943, 1943, 1943, 1943, 1943, 1943, 1943, 1943, 1943,
     1943, 1943, 1943, 1943, 1943, 1943, 1943, 1943, 1943, 1943,
     1943, 1943, 1943, 1943, 1943, 1943, 1943, 1943, 1943, 1943,

     1943, 1943, 1943, 1943, 1943, 1943, 1943, 1943, 1943, 1943,
     1943, 1943, 1943, 1943, 1943, 1943, 1943, 1943, 1943, 1943,
     1943, 1943, 1943, 1943, 1943, 1943, 1943, 1943, 1943, 1943,
     1943, 1943, 1943, 1943, 1944, 1944, 1944, 1944, 1944, 1944,
     1944, 1944, 1944, 1944, 1944, 1944, 1944, 1944, 1944, 1944,
     1944, 1944, 1944, 1944, 1944, 1944, 1944, 1944, 1944, 1944,
     1944, 1944, 1944, 1944, 1944, 1944, 1944, 1944, 1944, 1944,
     1944, 1944, 1944, 1944, 1944, 1944, 1944, 1944, 1944, 1944,
     1944, 1944, 1944, 1944, 1944, 1944, 1944, 1944, 1944, 1944,
     1944, 1944, 1944, 1944, 1944, 1944, 1944, 1944, 1944, 1944,

     1944, 1944, 1944, 1944, 1944, 1944, 1944, 1944, 1944, 1944,
     1944, 1944, 1944, 1944, 1944, 1944, 1944, 1944, 1944, 1944,
     1944, 1944, 1944, 1944, 1944, 1944, 1944, 1944, 1944, 1944,
     1944, 1944, 1944, 1944, 1944, 1944, 1944, 1944, 1944, 1944,
     1944, 1944, 1944, 1944, 1944, 1944, 1944, 1944, 1944, 1944,
     1944, 1944, 1944, 1944, 1944, 1944, 1944, 1944, 1944, 1944,
     1944, 1944, 1944, 1944, 1944, 1944, 1944, 1944, 1944, 1944,
     1944, 1944, 1944, 1944, 1944, 1944, 1944, 1944, 1944, 1944,
     1944, 1944, 1944, 1944, 1944, 1944, 1944, 1944, 1944, 1944,
     1944, 1944, 1944, 1944, 1944, 1944, 1944, 1944, 1944, 1944,

     1944, 1944, 1944, 1944, 1944, 1944, 1944, 1944, 1944, 1944,
     1944, 1944, 1944, 1944, 1944, 1944, 1944, 1944, 1944, 1944,
     1944, 1944, 1944, 1944, 1944, 1944, 1944, 1944, 1944, 1944,
     1944, 1944, 1944, 1944, 1944, 1944, 1944, 1944, 1944, 1944,
     1944, 1944, 1944, 1944, 1944, 1944, 1944, 1944, 1944, 1944,
     1944, 1944, 1944, 1944, 1944, 1944, 1944, 1944, 1944, 1944,
     1944, 1944, 1944, 1944, 1944, 1944, 1944, 1944, 1944, 1944,
     1944, 1944, 1944, 1944, 1944, 1944, 1944, 1944, 1944, 1944,
     1944, 1944, 1944, 1944, 1944, 1944, 1944, 1944, 1944, 1945,
     1945, 1945, 1945, 1945, 1945, 1945, 1945, 1945, 1945, 1945,

     1945, 1945, 1945, 1945, 1945, 1945, 1945, 1945, 1945, 1945,
     1945, 1945, 1945, 1945, 1945, 1945, 1945, 1945, 1945, 1945,
     1945, 1945, 1945, 1945, 1945, 1945, 1945, 1945, 1945, 1945,
     1945, 1945, 1945, 1945, 1945, 1945, 1945, 1945, 1945, 1945,
     1945, 1945, 1945, 1945, 1945, 1945, 1945, 1945, 1101, 1945,
     1945, 1945, 1945, 1945, 1945, 1945, 1945, 1945, 1945, 1945,
     1945, 1945, 1945, 1945, 1945, 1945, 1945, 1945, 1945, 1945,
     1945, 1945, 1945, 1945, 1945, 1945, 1945, 1945, 1945, 1945,
     1945, 1945, 1945, 1945, 1945, 1945, 1945, 1945, 1945, 1945,
     1945, 1945, 1945, 1945, 1945, 1945, 1945, 1945, 1945, 1945,

     1945, 1945, 1945, 1945, 1945, 1945, 1945, 1945, 1945, 1945,
     1945, 1945, 1945, 1945, 1945, 1945, 1945, 1945, 1945, 1945,
     1945, 1945, 1945, 1945, 1945, 1945, 1945, 1945, 1945, 1945,
     1945, 1945, 1945, 1945, 1945, 1945, 1945, 1945, 1945, 1945,
     1945, 1945, 1945, 1945, 1945, 1945, 1945, 1945, 1945, 1945,
     1945, 1945, 1945, 1945, 1945, 1945, 1945, 1945, 1945, 1945,
     1945, 1945, 1945, 1945, 1945, 1945, 1945, 1945, 1945, 1945,
     1945, 1945, 1945, 1945, 1945, 1945, 1945, 1945, 1945, 1945,
     1945, 1945, 1945, 1945, 1945, 1945, 1945, 1945, 1945, 1945,
     1945, 1945, 1945, 1945, 1945, 1945, 1945, 1945, 1945, 1945,

     1945, 1945, 1945, 1945, 1945, 1945, 1945, 1945, 1945, 1945,
     1945, 1945, 1945, 1945, 1945, 1945, 1945, 1945, 1945, 1945,
     1945, 1945, 1945, 1945, 1945, 1945, 1945, 1945, 1945, 1945,
     1945, 1945, 1945, 1945, 1945, 1945, 1945, 1945, 1945, 1945,
     1945, 1945, 1945, 1945, 1946, 1946, 1946, 1946, 1946, 1946,
     1946, 1946, 1946, 1946, 1946, 1946, 1946, 1946, 1946, 1946,
     1946, 1946, 1946, 1946, 1946, 1946, 1946, 1946, 1946, 1946,
     1946, 1946, 1946, 1946, 1946, 1946, 1946, 1946, 1946, 1946,
     1946, 1946, 1946, 1946, 1946, 1946, 1946, 1946, 1946, 1946,
     1946, 1946, 1946, 1946, 1946, 1946, 1946, 1946, 1946, 1946,

     1946, 1946, 1946, 1946, 1946, 1946, 1946, 1946, 1946, 1946,
     1946, 1946, 1946, 1946, 1946, 1946, 1946, 1946, 1946, 1946,
     1946, 1946, 1946, 1946, 1946, 1946, 1946, 1946, 1946, 1946,
     1946, 1946, 1946, 1946, 1946, 1946, 1946, 1946, 1946, 1946,
     1946, 1946, 1946, 1946, 1946, 1946, 1946, 1946, 1946, 1946,
     1946, 1946, 1946, 1946, 1946, 1946, 1946, 1946, 1946, 1946,
     1946, 1946, 1946, 1946, 1946, 1946, 1946, 1946, 1946, 1946,
     1946, 1946, 1946, 1946, 1946, 1946, 1946, 1946, 1946, 1946,
     1946, 1946, 1946, 1946, 1946, 1946, 1946, 1946, 1946, 1946,
     1946, 1946, 1946, 1946, 1946, 1946, 1946, 1946, 1946, 1946,

     1946, 1946, 1946, 1946, 1946, 1946, 1946, 1946, 1946, 1946,
     1946, 1946, 1946, 1946, 1946, 1946, 1946, 1946, 1946, 1946,
     1946, 1946, 1946, 1946, 1946, 1946, 1946, 1946, 1946, 1946,
     1946, 1946, 1946, 1946, 1946, 1946, 1946, 1946, 1946, 1946,
     1946, 1946, 1946, 1946, 1946, 1946, 1946, 1946, 1946, 1946,
     1946, 1946, 1946, 1946, 1946, 1946, 1946, 1946, 1946, 1946,
     1946, 1946, 1946, 1946, 1946, 1946, 1946, 1946, 1946, 1946,
     1946, 1946, 1946, 1946, 1946, 1946, 1946, 1946, 1946, 1946,
     1946, 1946, 1946, 1946, 1946, 1946, 1946, 1946, 1946, 1946,
     1946, 1946, 1946, 1946, 1946, 1946, 1946, 1946, 1946, 1947,

     1947, 1947, 1947, 1947, 1947, 1947, 1947, 1947, 1947, 1947,
     1947, 1947, 1947, 1947, 1947, 1947, 1947, 1947, 1947, 1947,
     1947, 1947, 1947, 1947, 1947, 1100, 1099, 1098, 1097, 1947,
     1096, 1947, 1947, 1947, 1947, 1947, 1947, 1947, 1947, 1947,
     1947, 1947, 1947, 1947, 1947, 1947, 1947, 1947, 1947, 1947,
     1947, 1947, 1947, 1947, 1947, 1947, 1947, 1094, 1093, 1092,
     1089, 1947, 1947, 1947, 1947, 1947, 1947, 1947, 1947, 1947,
     1947, 1947, 1947, 1947, 1947, 1947, 1947, 1947, 1947, 1947,
     1947, 1947, 1947, 1947, 1947, 1947, 1947, 1947, 1947, 1947,
     1947, 1947, 1947, 1947, 1947, 1947, 1947, 1947, 1947, 1947,

     1947, 1947, 1947, 1947, 1947, 1947, 1947, 1947, 1947, 1947,
     1947, 1947, 1947, 1947, 1947, 1947, 1947, 1947, 1947, 1947,
     1947, 1947, 1947, 1947, 1947, 1947, 1947, 1947, 1947, 1947,
     1947, 1947, 1947, 1947, 1947, 1947, 1947, 1947, 1947, 1947,
     1947, 1947, 1947, 1947, 1947, 1947, 1947, 1947, 1947, 1947,
     1947, 1947, 1947, 1947, 1947, 1947, 1947, 1947, 1947, 1947,
     1947, 1947, 1947, 1947, 1947, 1947, 1947, 1947, 1947, 1947,
     1947, 1947, 1947, 1947, 1947, 1947, 1947, 1947, 1947, 1947,
     1947, 1947, 1947, 1947, 1947, 1947, 1947, 1947, 1947, 1947,
     1948, 1948, 1948, 1948, 1948, 1948, 1948, 1948, 1948, 1948,

     1948, 1948, 1948, 1948, 1948, 1948, 1948, 1948, 1948, 1948,
     1948, 1948, 1948, 1948, 1948, 1948, 1948, 1948, 1948, 1948,
     1948, 1948, 1948, 1948, 1948, 1948, 1948, 1948, 1948, 1948,
     1948, 1948, 1948, 1948, 1948, 1948, 1948, 1948, 1948, 1948,
     1948, 1948, 1948, 1948, 1948, 1948, 1948, 1948, 1948, 1948,
     1948, 1948, 1948, 1948, 1948, 1948, 1948, 1948, 1948, 1948,
     1948, 1948, 1948, 1948, 1948, 1948, 1948, 1948, 1948, 1948,
     1948, 1948, 1948, 1948, 1948, 1948, 1948, 1948, 1948, 1948,
     1948, 1948, 1948, 1948, 1948, 1948, 1948, 1948, 1948, 1948,
     1948, 1948, 1948, 1948, 1948, 1948, 1948, 1948, 1948, 1948,

     1948, 1948, 1948, 1948, 1948, 1948, 1948, 1948, 1948, 1948,
     1948, 1948, 1948, 1948, 1948, 1948, 1948, 1948, 1948, 1948,
     1948, 1948, 1948, 1948, 1948, 1948, 1948, 1948, 1948, 1948,
     1948, 1948, 1948, 1948, 1948, 1948, 1948, 1948, 1948, 1948,
     1948, 1948, 1948, 1948, 1948, 1948, 1948, 1948, 1948, 1948,
     1948, 1948, 1948, 1948, 1948, 1948, 1948, 1948, 1948, 1948,
     1948, 1948, 1948, 1948, 1948, 1948, 1948, 1948, 1948, 1948,
     1948, 1948, 1948, 1948, 1948, 1948, 1948, 1948, 1948, 1948,
     1948, 1948, 1948, 1948, 1948, 1948, 1948, 1948, 1948, 1948,
     1948, 1948, 1948, 1948, 1948, 1948, 1948, 1948, 1948, 1948,

     1948, 1948, 1948, 1948, 1948, 1948, 1948, 1948, 1948, 1948,
     1948, 1948, 1948, 1948, 1948, 1948, 1948, 1948, 1948, 1948,
     1948, 1948, 1948, 1948, 1948, 1948, 1948, 1948, 1948, 1948,
     1948, 1948, 1948, 1948, 1948, 1948, 1948, 1948, 1948, 1948,
     1948, 1948, 1948, 1948, 1948, 1949, 1949, 1949, 1949, 1949,
     1949, 1949, 1949, 1949, 1949, 1087, 1086, 1085, 1084, 1083,
     1082, 1081, 1949, 1949, 1949, 1949, 1949, 1949, 1949, 1949,
     1949, 1949, 1949, 1949, 1949, 1949, 1949, 1949, 1949, 1949,
     1949, 1949, 1949, 1949, 1949, 1949, 1949, 1949, 1080, 1079,
     1078, 1077, 1949, 1076, 1949, 1949, 1949, 1949, 1949, 1949,

     1949, 1949, 1949, 1949, 1949, 1949, 1949, 1949, 1949, 1949,
     1949, 1949, 1949, 1949, 1949, 1949, 1949, 1949, 1949, 1949,
     1075, 1074, 1073, 1072, 1949, 1949, 1949, 1949, 1949, 1949,
     1949, 1949, 1949, 1949, 1949, 1949, 1949, 1949, 1949, 1949,
     1949, 1949, 1949, 1949, 1949, 1949, 1949, 1949, 1949, 1949,
     1949, 1949, 1949, 1949, 1949, 1949, 1949, 1949, 1949, 1949,
     1949, 1949, 1949, 1949, 1949, 1949, 1949, 1949, 1949, 1949,
     1949, 1949, 1949, 1949, 1949, 1949, 1949, 1949, 1949, 1949,
     1949, 1949, 1949, 1949, 1949, 1949, 1949, 1949, 1949, 1949,
     1949, 1949, 1949, 1949, 1949, 1949, 1949, 1949, 1949, 1949,

     1949, 1949, 1949, 1949, 1949, 1949, 1949, 1949, 1949, 1949,
     1949, 1949, 1949, 1949, 1949, 1949, 1949, 1949, 1949, 1949,
     1949, 1949, 1949, 1949, 1949, 1949, 1949, 1949, 1949, 1949,
     1949, 1949, 1949, 1949, 1949, 1949, 1949, 1949, 1949, 1949,
     1949, 1949, 1949, 1949, 1949, 1949, 1949, 1949, 1949, 1949,
     1949, 1949, 1949, 1950, 1950, 1950, 1950, 1950, 1950, 1950,
     1950, 1950, 1950, 1950, 1950, 1950, 1950, 1950, 1950, 1950,
     1950, 1950, 1950, 1950, 1950, 1950, 1950, 1950, 1950, 1950,
     1950, 1950, 1950, 1950, 1950, 1950, 1950, 1950, 1950, 1950,
     1950, 1950, 1950, 1950, 1950, 1950, 1950, 1950, 1950, 1950,

     1950, 1950, 1950, 1950, 1950, 1950, 1950, 1950, 1950, 1950,
     1950, 1950, 1950, 1950, 1950, 1950, 1950, 1950, 1950, 1950,
     1950, 1950, 1950, 1950, 1950, 1950, 1950, 1950, 1950, 1950,
     1950, 1950, 1950, 1950, 1950, 1950, 1950, 1950, 1950, 1950,
     1950, 1950, 1950, 1950, 1950, 1950, 1950, 1950, 1950, 1950,
     1950, 1950, 1950, 1950, 1950, 1950, 1950, 1950, 1950, 1950,
     1950, 1950, 1950, 1950, 1950, 1950, 1950, 1950, 1950, 1950,
     1950, 1950, 1950, 1950, 1950, 1950, 1950, 1950, 1950, 1950,
     1950, 1950, 1950, 1950, 1950, 1950, 1950, 1950, 1950, 1950,
     1950, 1950, 1950, 1950, 1950, 1950, 1950, 1950, 1950, 1950,

     1950, 1950, 1950, 1950, 1950, 1950, 1950, 1950, 1950, 1950,
     1950, 1950, 1950, 1950, 1950, 1950, 1950, 1950, 1950, 1950,
     1950, 1950, 1950, 1950, 1950, 1950, 1950, 1950, 1950, 1950,
     1950, 1950, 1950, 1950, 1950, 1950, 1950, 1950, 1950, 1950,
     1950, 1950, 1950, 1950, 1950, 1950, 1950, 1950, 1950, 1950,
     1950, 1950, 1950, 1950, 1950, 1950, 1950, 1950, 1950, 1950,
     1950, 1950, 1950, 1950, 1950, 1950, 1950, 1950, 1950, 1950,
     1950, 1950, 1950, 1950, 1950, 1950, 1950, 1950, 1950, 1950,
     1950, 1950, 1950, 1950, 1950, 1950, 1950, 1950, 1950, 1950,
     1950, 1950, 1950, 1950, 1950, 1950, 1950, 1950, 1950, 1950,

     1950, 1950, 1950, 1950, 1950, 1950, 1950, 1950, 1951, 1951,
     1951, 1951, 1951, 1951, 1951, 1951, 1951, 1071, 1951, 1951,
     1070, 1951, 1951, 1951, 1951, 1951, 1951, 1951, 1951, 1951,
     1951, 1951, 1951, 1951, 1951, 1951, 1951, 1951, 1951, 1951,
     1951, 1951, 1951, 1951, 1951, 1951, 1951, 1951, 1951, 1069,
     1951, 1951, 1951, 1951, 1951, 1951, 1951, 1951, 1951, 1951,
     1951, 1951, 1951, 1951, 1951, 1951, 1951, 1951, 1951, 1951,
     1951, 1951, 1951, 1951, 1951, 1951, 1951, 1951, 1951, 1951,
     1951, 1951, 1951, 1951, 1951, 1951, 1951, 1951, 1951, 1951,
     1951, 1951, 1951, 1951, 1951, 1951, 1951, 1951, 1951, 1951,

     1951, 1951, 1951, 1951, 1951, 1951, 1951, 1951, 1951, 1951,
     1951, 1951, 1951, 1951, 1951, 1951, 1951, 1951, 1951, 1951,
     1951, 1951, 1951, 1951, 1951, 1951, 1951, 1951, 1951, 1951,
     1951, 1951, 1951, 1951, 1951, 1951, 1951, 1951, 1951, 1951,
     1951, 1951, 1951, 1951, 1951, 1951, 1951, 1951, 1951, 1951,
     1951, 1951, 1951, 1951, 1951, 1951, 1951, 1951, 1951, 1951,
     1951, 1951, 1951, 1951, 1951, 1951, 1951, 1951, 1951, 1951,
     1951, 1951, 1951, 1951, 1951, 1951, 1951, 1951, 1951, 1951,
     1951, 1951, 1951, 1951, 1951, 1951, 1951, 1951, 1951, 1951,
     1951, 1951, 1951, 1951, 1951, 1951, 1951, 1951, 1951, 1951,

     1951, 1951, 1951, 1951, 1951, 1951, 1951, 1951, 1951, 1951,
     1951, 1951, 1951, 1951, 1951, 1951, 1951, 1951, 1951, 1951,
     1951, 1951, 1951, 1951, 1951, 1951, 1951, 1951, 1951, 1951,
     1951, 1951, 1951, 1951, 1951, 1951, 1951, 1951, 1951, 1951,
     1951, 1951, 1951, 1951, 1951, 1951, 1951, 1951, 1951, 1951,
     1951, 1951, 1951, 1951, 1951, 1951, 1951, 1951, 1951, 1951,
     1951, 1951, 1951, 1952, 1952, 1952, 1952, 1952, 1952, 1952,
     1952, 1952, 1067, 1952, 1952, 1066, 1952, 1952, 1952, 1952,
     1952, 1952, 1952, 1952, 1952, 1952, 1952, 1952, 1952, 1952,
     1952, 1952, 1952, 1952, 1952, 1952, 1952, 1952, 1952, 1952,

     1952, 1952, 1952, 1952, 1952, 1952, 1952, 1952, 1952, 1952,
     1952, 1952, 1952, 1952, 1952, 1952, 1952, 1952, 1952, 1952,
     1952, 1952, 1952, 1952, 1952, 1065, 1952, 1952, 1952, 1952,
     1952, 1952, 1952, 1952, 1952, 1952, 1952, 1952, 1952, 1952,
     1952, 1952, 1952, 1952, 1952, 1952, 1952, 1952, 1952, 1952,
     1952, 1952, 1952, 1952, 1952, 1952, 1952, 1952, 1952, 1952,
     1952, 1952, 1952, 1952, 1952, 1952, 1952, 1952, 1952, 1952,
     1952, 1952, 1952, 1952, 1952, 1952, 1952, 1952, 1952, 1952,
     1952, 1952, 1952, 1952, 1952, 1952, 1952, 1952, 1952, 1952,
     1952, 1952, 1952, 1952, 1952, 1952, 1952, 1952, 1952, 1952,

     1952, 1952, 1952, 1952, 1952, 1952, 1952, 1952, 1952, 1952,
     1952, 1952, 1952, 1952, 1952, 1952, 1952, 1952, 1952, 1952,
     1952, 1952, 1952, 1952, 1952, 1952, 1952, 1952, 1952, 1952,
     1952, 1952, 1952, 1952, 1952, 1952, 1952, 1952, 1952, 1952,
     1952, 1952, 1952, 1952, 1952, 1952, 1952, 1952, 1952, 1952,
     1952, 1952, 1952, 1952, 1952, 1952, 1952, 1952, 1952, 1952,
     1952, 1952, 1952, 1952, 1952, 1952, 1952, 1952, 1952, 1952,
     1952, 1952, 1952, 1952, 1952, 1952, 1952, 1952, 1952, 1952,
     1952, 1952, 1952, 1952, 1952, 1952, 1952, 1952, 1952, 1952,
     1952, 1952, 1952, 1952, 1952, 1952, 1952, 1952, 1952, 1952,

     1952, 1952, 1952, 1952, 1952, 1952, 1952, 1952, 1952, 1952,
     1952, 1952, 1952, 1952, 1952, 1952, 1952, 1952, 1953, 1953,
     1953, 1953, 1953, 1953, 1953, 1953, 1953, 1953, 1953, 1953,
     1953, 1953, 1953, 1953, 1953, 1953, 1953, 1953, 1953, 1953,
     1953, 1953, 1953, 1953, 1064, 1062, 1061, 1059, 1953, 1058,
     1953, 1953, 1953, 1953, 1953, 1953, 1953, 1953, 1953, 1953,
     1953, 1953, 1953, 1953, 1953, 1953, 1953, 1953, 1953, 1953,
     1953, 1953, 1953, 1953, 1953, 1953, 1057, 1056, 1055, 1054,
     1953, 1953, 1953, 1953, 1953, 1953, 1953, 1953, 1953, 1953,
     1953, 1953, 1953, 1953, 1953, 1953, 1953, 1953, 1953, 1953,

     1953, 1953, 1953, 1953, 1953, 1953, 1953, 1953, 1953, 1953,
     1953, 1953, 1953, 1953, 1953, 1953, 1953, 1953, 1953, 1953,
     1953, 1953, 1953, 1953, 1953, 1953, 1953, 1953, 1953, 1953,
     1953, 1953, 1953, 1953, 1953, 1953, 1953, 1953, 1953, 1953,
     1953, 1953, 1953, 1953, 1953, 1953, 1953, 1953, 1953, 1953,
     1953, 1953, 1953, 1953, 1953, 1953, 1953, 1953, 1953, 1953,
     1953, 1953, 1953, 1953, 1953, 1953, 1953, 1953, 1953, 1953,
     1953, 1953, 1953, 1953, 1953, 1953, 1953, 1953, 1953, 1953,
     1953, 1953, 1953, 1953, 1953, 1953, 1953, 1953, 1953, 1953,
     1953, 1953, 1953, 1953, 1953, 1953, 1953, 1953, 1953, 1953,

     1953, 1953, 1953, 1953, 1953, 1953, 1953, 1953, 1953, 1954,
     1954, 1954, 1954, 1954, 1954, 1954, 1954, 1954, 1954, 1954,
     1954, 1954, 1954, 1954, 1954, 1954, 1954, 1954, 1954, 1954,
     1954, 1954, 1954, 1954, 1954, 1053, 1052, 1051, 1050, 1954,
     1042, 1954, 1954, 1954, 1954, 1954, 1954, 1954, 1954, 1954,
     1954, 1954, 1954, 1954, 1954, 1954, 1954, 1954, 1954, 1954,
     1954, 1954, 1954, 1954, 1954, 1954, 1954,  974,  973,  972,
      971, 1954, 1954, 1954, 1954, 1954, 1954, 1954, 1954, 1954,
     1954, 1954, 1954, 1954, 1954, 1954, 1954, 1954, 1954, 1954,
     1954, 1954, 1954, 1954, 1954, 1954, 1954, 1954, 1954, 1954,

     1954, 1954, 1954, 1954, 1954, 1954, 1954, 1954, 1954, 1954,
     1954, 1954, 1954, 1954, 1954, 1954, 1954, 1954, 1954, 1954,
     1954, 1954, 1954, 1954, 1954, 1954, 1954, 1954, 1954, 1954,
     1954, 1954, 1954, 1954, 1954, 1954, 1954, 1954, 1954, 1954,
     1954, 1954, 1954, 1954, 1954, 1954, 1954, 1954, 1954, 1954,
     1954, 1954, 1954, 1954, 1954, 1954, 1954, 1954, 1954, 1954,
     1954, 1954, 1954, 1954, 1954, 1954, 1954, 1954, 1954, 1954,
     1954, 1954, 1954, 1954, 1954, 1954, 1954, 1954, 1954, 1954,
     1954, 1954, 1954, 1954, 1954, 1954, 1954, 1954, 1954, 1954,
     1954, 1954, 1954, 1954, 1954, 1954, 1954, 1954, 1954, 1954,

     1955, 1955, 1955, 1955, 1955, 1955, 1955, 1955, 1955, 1955,
      970,  969,  967,  966,  965,  964,  963, 1955, 1955, 1955,
     1955, 1955, 1955, 1955, 1955, 1955, 1955, 1955, 1955, 1955,
     1955, 1955, 1955, 1955, 1955, 1955, 1955, 1955, 1955, 1955,
     1955, 1955, 1955,  962,  961,  960,  959, 1955,  958, 1955,
     1955, 1955, 1955, 1955, 1955, 1955, 1955, 1955, 1955, 1955,
     1955, 1955, 1955, 1955, 1955, 1955, 1955, 1955, 1955, 1955,
     1955, 1955, 1955, 1955, 1955,  957,  956,  955,  954, 1955,
     1955, 1955, 1955, 1955, 1955, 1955, 1955, 1955, 1955, 1955,
     1955, 1955, 1955, 1955, 1955, 1955, 1955, 1955, 1955, 1955,

     1955, 1955, 1955, 1955, 1955, 1955, 1955, 1955, 1955, 1955,
     1955, 1955, 1955, 1955, 1955, 1955, 1955, 1955, 1955, 1955,
     1955, 1955, 1955, 1955, 1955, 1955, 1955, 1955, 1955, 1955,
     1955, 1955, 1955, 1955, 1955, 1955, 1955, 1955, 1955, 1955,
     1955, 1955, 1955, 1955, 1955, 1955, 1955, 1955, 1955, 1955,
     1955, 1955, 1955, 1955, 1955, 1955, 1955, 1955, 1955, 1955,
     1955, 1955, 1955, 1955, 1955, 1955, 1955, 1955, 1955, 1955,
     1955, 1955, 1955, 1955, 1955, 1955, 1955, 1955, 1955, 1955,
     1955, 1955, 1955, 1955, 1955, 1955, 1955, 1955, 1955, 1955,
     1955, 1955, 1955, 1955, 1955, 1955, 1955, 1955, 1955, 1955,

     1955, 1955, 1955, 1955, 1955, 1955, 1955, 1955, 1956, 1956,
     1956, 1956, 1956, 1956, 1956, 1956, 1956,  953, 1956, 1956,
      952, 1956, 1956, 1956, 1956, 1956, 1956, 1956, 1956, 1956,
     1956, 1956, 1956, 1956, 1956, 1956, 1956, 1956, 1956, 1956,
     1956, 1956, 1956, 1956, 1956, 1956, 1956, 1956, 1956, 1956,
     1956, 1956, 1956, 1956, 1956, 1956, 1956, 1956, 1956, 1956,
     1956, 1956, 1956, 1956, 1956, 1956, 1956, 1956, 1956, 1956,
     1956, 1956, 1956, 1956, 1956, 1956, 1956, 1956, 1956, 1956,
     1956, 1956, 1956, 1956, 1956, 1956, 1956, 1956, 1956, 1956,
     1956, 1956, 1956, 1956, 1956, 1956, 1956, 1956, 1956, 1956,

     1956, 1956, 1956, 1956, 1956, 1956, 1956, 1956, 1956, 1956,
     1956, 1956, 1956, 1956, 1956, 1956, 1956, 1956, 1956, 1956,
     1956, 1956, 1956, 1956, 1956, 1956, 1956, 1956, 1956, 1956,
     1956, 1956, 1956, 1956, 1956, 1956, 1956, 1956, 1956, 1956,
     1956, 1956, 1956, 1956, 1956, 1956, 1956, 1956, 1956, 1956,
     1956, 1956, 1956, 1956, 1956, 1956, 1956, 1956, 1956, 1956,
     1956, 1956, 1956, 1956, 1956, 1956, 1956, 1956, 1956, 1956,
     1956, 1956, 1956, 1956, 1956, 1956, 1956, 1956, 1956, 1956,
     1956, 1956, 1956, 1956, 1956, 1956, 1956, 1956, 1956, 1956,
     1956, 1956, 1956, 1956, 1956, 1956, 1956, 1956, 1956, 1956,

     1956, 1956, 1956, 1956, 1956, 1956, 1956, 1956, 1956, 1956,
     1956, 1956, 1956, 1956, 1956, 1956, 1956, 1956, 1956, 1956,
     1956, 1956, 1956, 1956, 1956, 1956, 1956, 1956, 1956, 1956,
     1956, 1956, 1956, 1956, 1956, 1956, 1956, 1956, 1956, 1956,
     1956, 1956, 1956, 1956, 1956, 1956, 1956, 1956, 1956, 1956,
     1956, 1956, 1956, 1956, 1956, 1956, 1956, 1956, 1956, 1956,
     1956, 1956, 1956, 1957, 1957, 1957, 1957, 1957, 1957, 1957,
     1957, 1957, 1957, 1957, 1957, 1957, 1957, 1957, 1957, 1957,
     1957, 1957, 1957, 1957, 1957, 1957, 1957, 1957, 1957, 1957,
     1957, 1957, 1957, 1957, 1957, 1957, 1957, 1957, 1957, 1957,

     1957, 1957, 1957, 1957, 1957, 1957, 1957, 1957, 1957, 1957,
     1957, 1957, 1957, 1957, 1957, 1957, 1957, 1957, 1957, 1957,
     1957, 1957, 1957, 1957, 1957, 1957, 1957, 1957, 1957, 1957,
     1957, 1957, 1957, 1957, 1957, 1957, 1957, 1957, 1957, 1957,
     1957, 1957, 1957, 1957, 1957, 1957, 1957, 1957, 1957, 1957,
     1957, 1957, 1957, 1957, 1957, 1957, 1957, 1957, 1957, 1957,
     1957, 1957, 1957, 1957, 1957, 1957, 1957, 1957, 1957, 1957,
     1957, 1957, 1957, 1957, 1957, 1957, 1957, 1957, 1957, 1957,
     1957, 1957, 1957, 1957, 1957, 1957, 1957, 1957, 1957, 1957,
     1957, 1957, 1957, 1957, 1957, 1957, 1957, 1957, 1957, 1957,

     1957, 1957, 1957, 1957, 1957, 1957, 1957, 1957, 1957, 1957,
     1957, 1957, 1957, 1957, 1957, 1957, 1957, 1957, 1957, 1957,
     1957, 1957, 1957, 1957, 1957, 1957, 1957, 1957, 1957, 1957,
     1957, 1957, 1957, 1957, 1957, 1957, 1957, 1957, 1957, 1957,
     1957, 1957, 1957, 1957, 1957, 1957, 1957, 1957, 1957, 1957,
     1957, 1957, 1957, 1957, 1957, 1957, 1957, 1957, 1957, 1957,
     1957, 1957, 1957, 1957, 1957, 1957, 1957, 1957, 1957, 1957,
     1957, 1957, 1957, 1957, 1957, 1957, 1957, 1957, 1957, 1957,
     1957, 1957, 1957, 1957, 1957, 1957, 1957, 1957, 1957, 1957,
     1957, 1957, 1957, 1957, 1957, 1957, 1957, 1957, 1957, 1957,

     1957, 1957, 1957, 1957, 1957, 1957, 1957, 1957, 1957, 1957,
     1957, 1957, 1957, 1957, 1957, 1957, 1957, 1957, 1958, 1958,
     1958, 1958, 1958, 1958, 1958, 1958, 1958, 1958, 1958, 1958,
     1958, 1958, 1958, 1958, 1958, 1958, 1958, 1958, 1958, 1958,
     1958, 1958, 1958, 1958, 1958, 1958, 1958, 1958, 1958, 1958,
     1958, 1958, 1958, 1958, 1958, 1958, 1958, 1958, 1958, 1958,
     1958, 1958, 1958, 1958, 1958, 1958, 1958, 1958, 1958, 1958,
     1958, 1958, 1958, 1958, 1958, 1958, 1958, 1958, 1958, 1958,
     1958, 1958, 1958, 1958, 1958, 1958, 1958, 1958, 1958, 1958,
     1958, 1958, 1958, 1958, 1958, 1958, 1958, 1958, 1958, 1958,

     1958, 1958, 1958, 1958, 1958, 1958, 1958, 1958, 1958, 1958,
     1958, 1958, 1958, 1958, 1958, 1958, 1958, 1958, 1958, 1958,
     1958, 1958, 1958, 1958, 1958, 1958, 1958, 1958, 1958, 1958,
     1958, 1958, 1958, 1958, 1958, 1958, 1958, 1958, 1958, 1958,
     1958, 1958, 1958, 1958, 1958, 1958, 1958, 1958, 1958, 1958,
     1958, 1958, 1958, 1958, 1958, 1958, 1958, 1958, 1958, 1958,
     1958, 1958, 1958, 1958, 1958, 1958, 1958, 1958, 1958, 1958,
     1958, 1958, 1958, 1958, 1958, 1958, 1958, 1958, 1958, 1958,
     1958, 1958, 1958, 1958, 1958, 1958, 1958, 1958, 1958, 1958,
     1958, 1958, 1958, 1958, 1958, 1958, 1958, 1958, 1958, 1958,

     1958, 1958, 1958, 1958, 1958, 1958, 1958, 1958, 1958, 1958,
     1958, 1958, 1958, 1958, 1958, 1958, 1958, 1958, 1958, 1958,
     1958, 1958, 1958, 1958, 1958, 1958, 1958, 1958, 1958, 1958,
     1958, 1958, 1958, 1958, 1958, 1958, 1958, 1958, 1958, 1958,
     1958, 1958, 1958, 1958, 1958, 1958, 1958, 1958, 1958, 1958,
     1958, 1958, 1958, 1958, 1958, 1958, 1958, 1958, 1958, 1958,
     1958, 1958, 1958, 1958, 1958, 1958, 1958, 1958, 1958, 1958,
     1958, 1958, 1958, 1959,  950,  949,  947,  945, 1959,  944,
      943,  942,  941,  940,  939,  938,  937, 1959, 1959, 1959,
     1959, 1959, 1959, 1959, 1959, 1959, 1959,  936,  935, 1959,

      934,  933,  932,  931, 1959, 1959, 1959, 1959, 1959, 1959,
     1959, 1959, 1959, 1959, 1959, 1959, 1959, 1959, 1959, 1959,
     1959, 1959, 1959, 1959, 1959, 1959, 1959, 1959, 1959, 1959,
      930,  929,  928,  927, 1959,  926, 1959, 1959, 1959, 1959,
     1959, 1959, 1959, 1959, 1959, 1959, 1959, 1959, 1959, 1959,
     1959, 1959, 1959, 1959, 1959, 1959, 1959, 1959, 1959, 1959,
     1959, 1959,  925,  924,  923,  922, 1959, 1959, 1959, 1959,
     1959, 1959, 1959, 1959, 1959, 1959, 1959, 1959, 1959, 1959,
     1959, 1959, 1959, 1959, 1959, 1959, 1959, 1959, 1959, 1959,
     1959, 1959, 1959, 1959, 1959, 1959, 1959, 1959, 1959, 1959,

     1959, 1959, 1959, 1959, 1959, 1959, 1959, 1959, 1959, 1959,
     1959, 1959, 1959, 1959, 1959, 1959, 1959, 1959, 1959, 1959,
     1959, 1959, 1959, 1959, 1959, 1959, 1959, 1959, 1959, 1959,
     1959, 1959, 1959, 1959, 1959, 1959, 1959, 1959, 1959, 1959,
     1959, 1959, 1959, 1959, 1959, 1959, 1959, 1959, 1959, 1959,
     1959, 1959, 1959, 1959, 1959, 1959, 1959, 1959, 1959, 1959,
     1959, 1959, 1959, 1959, 1959, 1959, 1959, 1959, 1959, 1959,
     1959, 1959, 1959, 1959, 1959, 1959, 1959, 1959, 1959, 1959,
     1959, 1959, 1959, 1959, 1959, 1959, 1959, 1959, 1959, 1959,
     1959, 1959, 1959, 1959, 1959, 1960, 1960, 1960, 1960, 1960,

     1960, 1960, 1960, 1960, 1960,  921,  919,  918,  917,  916,
      914,  911, 1960, 1960, 1960, 1960, 1960, 1960, 1960, 1960,
     1960, 1960, 1960, 1960, 1960, 1960, 1960, 1960, 1960, 1960,
     1960, 1960, 1960, 1960, 1960, 1960, 1960, 1960,  909,  906,
      905,  904, 1960,  903, 1960, 1960, 1960, 1960, 1960, 1960,
     1960, 1960, 1960, 1960, 1960, 1960, 1960, 1960, 1960, 1960,
     1960, 1960, 1960, 1960, 1960, 1960, 1960, 1960, 1960, 1960,
      902,  901,  900,  899, 1960, 1960, 1960, 1960, 1960, 1960,
     1960, 1960, 1960, 1960, 1960, 1960, 1960, 1960, 1960, 1960,
     1960, 1960, 1960, 1960, 1960, 1960, 1960, 1960, 1960, 1960,

     1960, 1960, 1960, 1960, 1960, 1960, 1960, 1960, 1960, 1960,
     1960, 1960, 1960, 1960, 1960, 1960, 1960, 1960, 1960, 1960,
     1960, 1960, 1960, 1960, 1960, 1960, 1960, 1960, 1960, 1960,
     1960, 1960, 1960, 1960, 1960, 1960, 1960, 1960, 1960, 1960,
     1960, 1960, 1960, 1960, 1960, 1960, 1960, 1960, 1960, 1960,
     1960, 1960, 1960, 1960, 1960, 1960, 1960, 1960, 1960, 1960,
     1960, 1960, 1960, 1960, 1960, 1960, 1960, 1960, 1960, 1960,
     1960, 1960, 1960, 1960, 1960, 1960, 1960, 1960, 1960, 1960,
     1960, 1960, 1960, 1960, 1960, 1960, 1960, 1960, 1960, 1960,
     1960, 1960, 1960, 1960, 1960, 1960, 1960, 1960, 1960, 1960,

     1960, 1960, 1960, 1961, 1961, 1961, 1961, 1961, 1961, 1961,
     1961, 1961, 1961,  897,  896,  892,  891,  890,  888,  887,
     1961, 1961, 1961, 1961, 1961, 1961, 1961, 1961, 1961, 1961,
     1961, 1961, 1961, 1961, 1961, 1961, 1961, 1961, 1961, 1961,
     1961, 1961, 1961, 1961, 1961, 1961,  886,  885,  884,  882,
     1961,  881, 1961, 1961, 1961, 1961, 1961, 1961, 1961, 1961,
     1961, 1961, 1961, 1961, 1961, 1961, 1961, 1961, 1961, 1961,
     1961, 1961, 1961, 1961, 1961, 1961, 1961, 1961,  880,  879,
      878,  877, 1961, 1961, 1961, 1961, 1961, 1961, 1961, 1961,
     1961, 1961, 1961, 1961, 1961, 1961, 1961, 1961, 1961, 1961,

     1961, 1961, 1961, 1961, 1961, 1961, 1961, 1961, 1961, 1961,
     1961, 1961, 1961, 1961, 1961, 1961, 1961, 1961, 1961, 1961,
     1961, 1961, 1961, 1961, 1961, 1961, 1961, 1961, 1961, 1961,
     1961, 1961, 1961, 1961, 1961, 1961, 1961, 1961, 1961, 1961,
     1961, 1961, 1961, 1961, 1961, 1961, 1961, 1961, 1961, 1961,
     1961, 1961, 1961, 1961, 1961, 1961, 1961, 1961, 1961, 1961,
     1961, 1961, 1961, 1961, 1961, 1961, 1961, 1961, 1961, 1961,
     1961, 1961, 1961, 1961, 1961, 1961, 1961, 1961, 1961, 1961,
     1961, 1961, 1961, 1961, 1961, 1961, 1961, 1961, 1961, 1961,
     1961, 1961, 1961, 1961, 1961, 1961, 1961, 1961, 1961, 1961,

     1961, 1961, 1961, 1961, 1961, 1961, 1961, 1961, 1961, 1961,
     1961, 1962, 1962, 1962, 1962, 1962, 1962, 1962, 1962, 1962,
     1962, 1962, 1962, 1962, 1962, 1962, 1962, 1962, 1962, 1962,
     1962, 1962, 1962, 1962, 1962, 1962, 1962, 1962, 1962, 1962,
     1962, 1962, 1962, 1962,  875, 1962, 1962, 1962,  874,  873,
     1962, 1962, 1962, 1962, 1962, 1962, 1962, 1962, 1962, 1962,
     1962, 1962, 1962, 1962, 1962, 1962, 1962, 1962, 1962, 1962,
     1962, 1962, 1962, 1962, 1962, 1962, 1962, 1962, 1962, 1962,
     1962, 1962, 1962, 1962, 1962, 1962, 1962, 1962, 1962, 1962,
     1962, 1962, 1962, 1962, 1962, 1962, 1962, 1962, 1962, 1962,

     1962, 1962,  872, 1962, 1962, 1962, 1962, 1962, 1962, 1962,
     1962, 1962, 1962, 1962, 1962, 1962, 1962, 1962, 1962, 1962,
     1962, 1962, 1962, 1962, 1962, 1962, 1962, 1962, 1962, 1962,
     1962, 1962, 1962, 1962, 1962, 1962, 1962, 1962, 1962, 1962,
     1962, 1962, 1962, 1962, 1962, 1962, 1962, 1962, 1962, 1962,
     1962, 1962, 1962, 1962, 1962, 1962, 1962, 1962, 1962, 1962,
     1962, 1962, 1962, 1962, 1962, 1962, 1962, 1962, 1962, 1962,
     1962, 1962, 1962, 1962, 1962, 1962, 1962, 1962, 1962, 1962,
     1962, 1962, 1962, 1962, 1962, 1962, 1962, 1962, 1962, 1962,
     1962, 1962, 1962, 1962, 1962, 1962, 1962, 1962, 1962, 1962,

     1962, 1962, 1962, 1962, 1962, 1962, 1962, 1962, 1962, 1962,
     1962, 1962, 1962, 1962, 1962, 1962, 1962, 1962, 1962, 1962,
     1962, 1962, 1962, 1962, 1962, 1962, 1962, 1962, 1962, 1962,
     1962, 1962, 1962, 1962, 1962, 1962, 1962, 1962, 1962, 1962,
     1962, 1962, 1962, 1962, 1962, 1962, 1962, 1962, 1962, 1962,
     1962, 1962, 1962, 1962, 1962, 1962, 1962, 1962, 1962, 1962,
     1962, 1962, 1962, 1962, 1962, 1962, 1963, 1963, 1963, 1963,
     1963, 1963, 1963, 1963, 1963, 1963,  871,  870, 1963, 1963,
     1963, 1963, 1963, 1963, 1963, 1963, 1963, 1963, 1963, 1963,
     1963, 1963, 1963, 1963, 1963, 1963, 1963, 1963, 1963, 1963,

     1963, 1963, 1963,  869,  868, 1963, 1963, 1963, 1963, 1963,
     1963, 1963, 1963, 1963, 1963, 1963, 1963, 1963, 1963, 1963,
     1963, 1963, 1963, 1963, 1963,  867, 1963,  866, 1963, 1963,
     1963, 1963, 1963, 1963, 1963, 1963, 1963, 1963, 1963, 1963,
     1963, 1963, 1963, 1963, 1963, 1963, 1963, 1963, 1963, 1963,
     1963, 1963, 1963, 1963, 1963, 1963, 1963,  865, 1963, 1963,
     1963, 1963, 1963, 1963, 1963, 1963, 1963, 1963, 1963, 1963,
     1963, 1963, 1963, 1963, 1963, 1963, 1963, 1963, 1963, 1963,
     1963, 1963, 1963, 1963, 1963, 1963, 1963, 1963,  864, 1963,
     1963, 1963, 1963, 1963, 1963, 1963, 1963, 1963, 1963, 1963,

     1963, 1963, 1963, 1963, 1963, 1963, 1963, 1963, 1963, 1963,
     1963, 1963, 1963, 1963, 1963, 1963, 1963, 1963, 1963, 1963,
     1963, 1963, 1963, 1963, 1963,  863, 1963, 1963, 1963, 1963,
     1963, 1963, 1963, 1963, 1963, 1963, 1963, 1963, 1963, 1963,
     1963, 1963, 1963, 1963, 1963, 1963, 1963, 1963, 1963, 1963,
     1963, 1963, 1963, 1963, 1963, 1963, 1963, 1963, 1963, 1963,
     1963, 1963, 1963, 1963, 1963, 1963, 1963, 1963, 1963, 1963,
     1963, 1963, 1963, 1963, 1963, 1963, 1963, 1963, 1963, 1963,
     1963, 1963, 1963, 1963, 1963, 1963, 1963, 1963, 1963, 1963,
     1963, 1963, 1963, 1963, 1963, 1963, 1963, 1963, 1963, 1963,

     1963, 1963, 1963, 1963, 1963, 1963, 1963, 1963, 1963, 1963,
     1963, 1963, 1963, 1963, 1963, 1963, 1963, 1963, 1963, 1963,
     1963, 1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964,
     1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964,
     1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964,
     1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964,
     1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964,
     1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964,
     1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964,
     1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964,

     1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964,
     1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964,
     1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964,
     1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964,
     1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964,
     1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964,
     1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964,
     1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964,
     1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964,
     1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964,

     1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964,
     1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964,
     1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964,
     1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964,
     1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964,
     1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964,
     1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964, 1964,
     1964, 1964, 1964, 1964, 1964, 1964, 1965, 1965, 1965, 1965,
     1965, 1965, 1965, 1965, 1965, 1965,  862,  861,  860,  859,
      858,  857,  856, 1965, 1965, 1965, 1965, 1965, 1965, 1965,

     1965, 1965, 1965, 1965, 1965, 1965, 1965, 1965, 1965, 1965,
     1965, 1965, 1965, 1965, 1965, 1965, 1965, 1965, 1965,  855,
      854,  853,  850, 1965,  848, 1965, 1965, 1965, 1965, 1965,
     1965, 1965, 1965, 1965, 1965, 1965, 1965, 1965, 1965, 1965,
     1965, 1965, 1965, 1965, 1965, 1965, 1965, 1965, 1965, 1965,
     1965,  847,  846,  845,  844, 1965, 1965, 1965, 1965, 1965,
     1965, 1965, 1965, 1965, 1965, 1965, 1965, 1965, 1965, 1965,
     1965, 1965, 1965, 1965, 1965, 1965, 1965, 1965, 1965, 1965,
     1965, 1965, 1965, 1965, 1965, 1965, 1965, 1965, 1965, 1965,
     1965, 1965, 1965, 1965, 1965, 1965, 1965, 1965, 1965, 1965,

     1965, 1965, 1965, 1965, 1965, 1965, 1965, 1965, 1965, 1965,
     1965, 1965, 1965, 1965, 1965, 1965, 1965, 1965, 1965, 1965,
     1965, 1965, 1965, 1965, 1965, 1965, 1965, 1965, 1965, 1965,
     1965, 1965, 1965, 1965, 1965, 1965, 1965, 1965, 1965, 1965,
     1965, 1965, 1965, 1965, 1965, 1965, 1965, 1965, 1965, 1965,
     1965, 1965, 1965, 1965, 1965, 1965, 1965, 1965, 1965, 1965,
     1965, 1965, 1965, 1965, 1965, 1965, 1965, 1965, 1965, 1965,
     1965, 1965, 1965, 1965, 1965, 1965, 1965, 1965, 1965, 1965,
     1965, 1965, 1965, 1965, 1966, 1966, 1966, 1966, 1966, 1966,
     1966, 1966, 1966, 1966, 1966, 1966, 1966, 1966, 1966, 1966,

     1966, 1966, 1966, 1966, 1966, 1966, 1966, 1966, 1966, 1966,
     1966, 1966, 1966, 1966, 1966, 1966, 1966, 1966, 1966, 1966,
     1966, 1966, 1966, 1966, 1966, 1966, 1966, 1966, 1966, 1966,
     1966, 1966, 1966, 1966, 1966, 1966, 1966, 1966, 1966, 1966,
     1966, 1966, 1966,  843, 1966, 1966, 1966, 1966, 1966, 1966,
     1966, 1966, 1966, 1966, 1966, 1966, 1966, 1966, 1966, 1966,
     1966, 1966, 1966, 1966, 1966, 1966, 1966, 1966, 1966, 1966,
     1966, 1966, 1966, 1966, 1966, 1966, 1966, 1966, 1966, 1966,
     1966, 1966, 1966, 1966, 1966, 1966, 1966, 1966, 1966, 1966,
     1966, 1966, 1966, 1966, 1966, 1966, 1966, 1966, 1966, 1966,

     1966, 1966, 1966, 1966, 1966, 1966, 1966, 1966, 1966, 1966,
     1966, 1966, 1966, 1966, 1966, 1966, 1966, 1966, 1966, 1966,
     1966, 1966, 1966, 1966, 1966, 1966, 1966, 1966, 1966, 1966,
     1966, 1966, 1966, 1966, 1966, 1966, 1966, 1966, 1966, 1966,
     1966, 1966, 1966, 1966, 1966, 1966, 1966, 1966, 1966, 1966,
     1966, 1966, 1966, 1966, 1966, 1966, 1966, 1966, 1966, 1966,
     1966, 1966, 1966, 1966, 1966, 1966, 1966, 1966, 1966, 1966,
     1966, 1966, 1966, 1966, 1966, 1966, 1966, 1966, 1966, 1966,
     1966, 1966, 1966, 1966, 1966, 1966, 1966, 1966, 1966, 1966,
     1966, 1966, 1966, 1966, 1966, 1966, 1966, 1966, 1966, 1966,

     1966, 1966, 1966, 1966, 1966, 1966, 1966, 1966, 1966, 1966,
     1966, 1966, 1966, 1966, 1966, 1966, 1966, 1966, 1966, 1966,
     1966, 1966, 1966, 1966, 1966, 1966, 1966, 1966, 1966, 1966,
     1966, 1966, 1966, 1966, 1966, 1966, 1966, 1966, 1966, 1967,
     1967, 1967, 1967, 1967, 1967, 1967, 1967, 1967, 1967, 1967,
     1967, 1967, 1967, 1967, 1967, 1967, 1967, 1967, 1967, 1967,
     1967, 1967, 1967, 1967, 1967, 1967, 1967, 1967, 1967, 1967,
     1967, 1967, 1967, 1967, 1967, 1967, 1967, 1967, 1967, 1967,
     1967, 1967, 1967, 1967, 1967, 1967, 1967, 1967, 1967, 1967,
     1967, 1967, 1967, 1967, 1967, 1967, 1967, 1967, 1967, 1967,

     1967, 1967, 1967, 1967, 1967, 1967, 1967, 1967, 1967, 1967,
     1967, 1967, 1967, 1967, 1967, 1967, 1967, 1967, 1967, 1967,
     1967, 1967, 1967, 1967, 1967, 1967, 1967, 1967, 1967, 1967,
     1967, 1967, 1967, 1967, 1967, 1967, 1967, 1967, 1967, 1967,
     1967, 1967, 1967, 1967, 1967, 1967, 1967, 1967, 1967, 1967,
     1967, 1967, 1967, 1967, 1967, 1967, 1967, 1967, 1967, 1967,
     1967, 1967, 1967, 1967, 1967, 1967, 1967, 1967, 1967, 1967,
     1967, 1967, 1967, 1967, 1967, 1967, 1967, 1967, 1967, 1967,
     1967, 1967, 1967, 1967, 1967, 1967, 1967, 1967, 1967, 1967,
     1967, 1967, 1967, 1967, 1967, 1967, 1967, 1967, 1967, 1967,

     1967, 1967, 1967, 1967, 1967, 1967, 1967, 1967, 1967, 1967,
     1967, 1967, 1967, 1967, 1967, 1967, 1967, 1967, 1967, 1967,
     1967, 1967, 1967, 1967, 1967, 1967, 1967, 1967, 1967, 1967,
     1967, 1967, 1967, 1967, 1967, 1967, 1967, 1967, 1967, 1967,
     1967, 1967, 1967, 1967, 1967, 1967, 1967, 1967, 1967, 1967,
     1967, 1967, 1967, 1967, 1967, 1967, 1967, 1967, 1967, 1967,
     1967, 1967, 1967, 1967, 1967, 1967, 1967, 1967, 1967, 1967,
     1967, 1967, 1967, 1967, 1967, 1967, 1967, 1967, 1967, 1967,
     1967, 1967, 1967, 1967, 1967, 1967, 1967, 1967, 1967, 1967,
     1967, 1967, 1967, 1967, 1968, 1968, 1968, 1968, 1968, 1968,

     1968, 1968, 1968, 1968, 1968, 1968, 1968, 1968, 1968, 1968,
     1968, 1968, 1968, 1968, 1968, 1968, 1968, 1968, 1968, 1968,
     1968, 1968, 1968, 1968, 1968, 1968, 1968, 1968, 1968, 1968,
     1968, 1968, 1968, 1968, 1968, 1968, 1968, 1968, 1968, 1968,
     1968, 1968, 1968, 1968, 1968, 1968, 1968, 1968, 1968, 1968,
     1968, 1968, 1968, 1968, 1968, 1968, 1968, 1968, 1968, 1968,
     1968, 1968, 1968, 1968, 1968, 1968, 1968, 1968, 1968, 1968,
     1968, 1968, 1968, 1968, 1968, 1968, 1968, 1968, 1968, 1968,
     1968, 1968, 1968, 1968, 1968, 1968, 1968, 1968, 1968, 1968,
     1968, 1968, 1968, 1968, 1968, 1968, 1968, 1968, 1968, 1968,

     1968, 1968, 1968, 1968, 1968, 1968, 1968, 1968, 1968, 1968,
     1968, 1968, 1968, 1968, 1968, 1968, 1968, 1968, 1968, 1968,
     1968, 1968, 1968, 1968, 1968, 1968, 1968, 1968, 1968, 1968,
     1968, 1968, 1968, 1968, 1968, 1968, 1968, 1968, 1968, 1968,
     1968, 1968, 1968, 1968, 1968, 1968, 1968, 1968, 1968, 1968,
     1968, 1968, 1968, 1968, 1968, 1968, 1968, 1968, 1968, 1968,
     1968, 1968, 1968, 1968, 1968, 1968, 1968, 1968, 1968, 1968,
     1968, 1968, 1968, 1968, 1968, 1968, 1968, 1968, 1968, 1968,
     1968, 1968, 1968, 1968, 1968, 1968, 1968, 1968, 1968, 1968,
     1968, 1968, 1968, 1968, 1968, 1968, 1968, 1968, 1968, 1968,

     1968, 1968, 1968, 1968, 1968, 1968, 1968, 1968, 1968, 1968,
     1968, 1968, 1968, 1968, 1968, 1968, 1968, 1968, 1968, 1968,
     1968, 1968, 1968, 1968, 1968, 1968, 1968, 1968, 1968, 1968,
     1968, 1968, 1968, 1968, 1968, 1968, 1968, 1968, 1968, 1968,
     1968, 1968, 1968, 1968, 1968, 1968, 1968, 1968, 1968, 1969,
     1969, 1969, 1969, 1969, 1969, 1969, 1969, 1969, 1969,  842,
      841,  840,  839,  838,  837,  836, 1969, 1969, 1969, 1969,
     1969, 1969, 1969, 1969, 1969, 1969, 1969, 1969, 1969, 1969,
     1969, 1969, 1969, 1969, 1969, 1969, 1969, 1969, 1969, 1969,
     1969, 1969,  835,  834,  833,  832, 1969,  831, 1969, 1969,

     1969, 1969, 1969, 1969, 1969, 1969, 1969, 1969, 1969, 1969,
     1969, 1969, 1969, 1969, 1969, 1969, 1969, 1969, 1969, 1969,
     1969, 1969, 1969, 1969,  830,  829,  828,  827, 1969, 1969,
     1969, 1969, 1969, 1969, 1969, 1969, 1969, 1969, 1969, 1969,
     1969, 1969, 1969, 1969, 1969, 1969, 1969, 1969, 1969, 1969,
     1969, 1969, 1969, 1969, 1969, 1969, 1969, 1969, 1969, 1969,
     1969, 1969, 1969, 1969, 1969, 1969, 1969, 1969, 1969, 1969,
     1969, 1969, 1969, 1969, 1969, 1969, 1969, 1969, 1969, 1969,
     1969, 1969, 1969, 1969, 1969, 1969, 1969, 1969, 1969, 1969,
     1969, 1969, 1969, 1969, 1969, 1969, 1969, 1969, 1969, 1969,

     1969, 1969, 1969, 1969, 1969, 1969, 1969, 1969, 1969, 1969,
     1969, 1969, 1969, 1969, 1969, 1969, 1969, 1969, 1969, 1969,
     1969, 1969, 1969, 1969, 1969, 1969, 1969, 1969, 1969, 1969,
     1969, 1969, 1969, 1969, 1969, 1969, 1969, 1969, 1969, 1969,
     1969, 1969, 1969, 1969, 1969, 1969, 1969, 1969, 1969, 1969,
     1969, 1969, 1969, 1969, 1969, 1969, 1969, 1970, 1970, 1970,
     1970, 1970, 1970, 1970, 1970, 1970, 1970, 1970, 1970, 1970,
     1970, 1970, 1970, 1970, 1970, 1970, 1970, 1970, 1970, 1970,
     1970, 1970, 1970, 1970, 1970, 1970, 1970, 1970, 1970, 1970,
     1970, 1970, 1970, 1970, 1970, 1970, 1970, 1970, 1970, 1970,

     1970, 1970, 1970, 1970, 1970, 1970, 1970, 1970, 1970, 1970,
     1970, 1970, 1970, 1970, 1970, 1970, 1970, 1970, 1970, 1970,
     1970, 1970, 1970, 1970, 1970, 1970, 1970, 1970, 1970, 1970,
     1970, 1970, 1970, 1970, 1970, 1970, 1970, 1970, 1970, 1970,
     1970, 1970, 1970, 1970, 1970, 1970, 1970, 1970, 1970, 1970,
     1970, 1970, 1970, 1970, 1970, 1970, 1970, 1970, 1970, 1970,
     1970, 1970, 1970, 1970, 1970, 1970, 1970, 1970, 1970, 1970,
     1970, 1970, 1970, 1970, 1970, 1970, 1970, 1970, 1970, 1970,
     1970, 1970, 1970, 1970, 1970, 1970, 1970, 1970, 1970, 1970,
     1970, 1970, 1970, 1970, 1970, 1970, 1970, 1970, 1970, 1970,

     1970, 1970, 1970, 1970, 1970, 1970, 1970, 1970, 1970, 1970,
     1970, 1970, 1970, 1970, 1970, 1970, 1970, 1970, 1970, 1970,
     1970, 1970, 1970, 1970, 1970, 1970, 1970, 1970, 1970, 1970,
     1970, 1970, 1970, 1970, 1970, 1970, 1970, 1970, 1970, 1970,
     1970, 1970, 1970, 1970, 1970, 1970, 1970, 1970, 1970, 1970,
     1970, 1970, 1970, 1970, 1970, 1970, 1970, 1970, 1970, 1970,
     1970, 1970, 1970, 1970, 1970, 1970, 1970, 1970, 1970, 1970,
     1970, 1970, 1970, 1970, 1970, 1970, 1970, 1970, 1970, 1970,
     1970, 1970, 1970, 1970, 1970, 1970, 1970, 1970, 1970, 1970,
     1970, 1970, 1970, 1970, 1970, 1970, 1970, 1970, 1970, 1970,

     1970, 1970, 1970, 1970, 1970, 1970, 1970, 1970, 1970, 1970,
     1970, 1970, 1971, 1971, 1971, 1971, 1971, 1971, 1971, 1971,
     1971, 1971, 1971, 1971, 1971, 1971, 1971, 1971, 1971, 1971,
     1971, 1971, 1971, 1971, 1971, 1971, 1971, 1971, 1971, 1971,
     1971, 1971, 1971, 1971, 1971, 1971, 1971, 1971, 1971, 1971,
     1971, 1971, 1971, 1971, 1971, 1971, 1971, 1971, 1971, 1971,
     1971, 1971, 1971, 1971, 1971, 1971, 1971, 1971, 1971, 1971,
     1971, 1971, 1971, 1971, 1971, 1971, 1971, 1971, 1971, 1971,
     1971, 1971, 1971, 1971, 1971, 1971, 1971, 1971, 1971, 1971,
     1971, 1971, 1971, 1971, 1971, 1971, 1971, 1971, 1971, 1971,

     1971, 1971, 1971, 1971, 1971, 1971, 1971, 1971, 1971, 1971,
     1971, 1971, 1971, 1971, 1971, 1971, 1971, 1971, 1971, 1971,
     1971, 1971, 1971, 1971, 1971, 1971, 1971, 1971, 1971, 1971,
     1971, 1971, 1971, 1971, 1971, 1971, 1971, 1971, 1971, 1971,
     1971, 1971, 1971, 1971, 1971, 1971, 1971, 1971, 1971, 1971,
     1971, 1971, 1971, 1971, 1971, 1971, 1971, 1971, 1971, 1971,
     1971, 1971, 1971, 1971, 1971, 1971, 1971, 1971, 1971, 1971,
     1971, 1971, 1971, 1971, 1971, 1971, 1971, 1971, 1971, 1971,
     1971, 1971, 1971, 1971, 1971, 1971, 1971, 1971, 1971, 1971,
     1971, 1971, 1971, 1971, 1971, 1971, 1971, 1971, 1971, 1971,

     1971, 1971, 1971, 1971, 1971, 1971, 1971, 1971, 1971, 1971,
     1971, 1971, 1971, 1971, 1971, 1971, 1971, 1971, 1971, 1971,
     1971, 1971, 1971, 1971, 1971, 1971, 1971, 1971, 1971, 1971,
     1971, 1971, 1971, 1971, 1971, 1971, 1971, 1971, 1971, 1971,
     1971, 1971, 1971, 1971, 1971, 1971, 1971, 1971, 1971, 1971,
     1971, 1971, 1971, 1971, 1971, 1971, 1971, 1971, 1971, 1971,
     1971, 1971, 1971, 1971, 1971, 1971, 1971, 1972, 1972, 1972,
     1972, 1972, 1972, 1972, 1972, 1972, 1972,  826,  825,  824,
      823,  822,  821,  820, 1972, 1972, 1972, 1972, 1972, 1972,
     1972, 1972, 1972, 1972, 1972, 1972, 1972, 1972, 1972, 1972,

     1972, 1972, 1972, 1972, 1972, 1972, 1972, 1972, 1972, 1972,
      819,  818,  817,  816, 1972,  815, 1972, 1972, 1972, 1972,
     1972, 1972, 1972, 1972, 1972, 1972, 1972, 1972, 1972, 1972,
     1972, 1972, 1972, 1972, 1972, 1972, 1972, 1972, 1972, 1972,
     1972, 1972,  814,  813,  812,  811, 1972, 1972, 1972, 1972,
     1972, 1972, 1972, 1972, 1972, 1972, 1972, 1972, 1972, 1972,
     1972, 1972, 1972, 1972, 1972, 1972, 1972, 1972, 1972, 1972,
     1972, 1972, 1972, 1972, 1972, 1972, 1972, 1972, 1972, 1972,
     1972, 1972, 1972, 1972, 1972, 1972, 1972, 1972, 1972, 1972,
     1972, 1972, 1972, 1972, 1972, 1972, 1972, 1972, 1972, 1972,

     1972, 1972, 1972, 1972, 1972, 1972, 1972, 1972, 1972, 1972,
     1972, 1972, 1972, 1972, 1972, 1972, 1972, 1972, 1972, 1972,
     1972, 1972, 1972, 1972, 1972, 1972, 1972, 1972, 1972, 1972,
     1972, 1972, 1972, 1972, 1972, 1972, 1972, 1972, 1972, 1972,
     1972, 1972, 1972, 1972, 1972, 1972, 1972, 1972, 1972, 1972,
     1972, 1972, 1972, 1972, 1972, 1972, 1972, 1972, 1972, 1972,
     1972, 1972, 1972, 1972, 1972, 1972, 1972, 1972, 1972, 1972,
     1972, 1972, 1972, 1972, 1972, 1973, 1973, 1973, 1973, 1973,
     1973, 1973, 1973, 1973, 1973, 1973, 1973, 1973, 1973, 1973,
     1973, 1973, 1973, 1973, 1973, 1973, 1973, 1973, 1973, 1973,

     1973, 1973, 1973, 1973, 1973, 1973, 1973, 1973, 1973, 1973,
     1973, 1973, 1973, 1973, 1973, 1973, 1973, 1973, 1973, 1973,
     1973, 1973, 1973, 1973, 1973, 1973, 1973, 1973, 1973, 1973,
     1973, 1973, 1973, 1973, 1973, 1973, 1973, 1973, 1973, 1973,
     1973, 1973, 1973, 1973, 1973, 1973, 1973, 1973, 1973, 1973,
     1973, 1973, 1973, 1973, 1973, 1973, 1973, 1973, 1973, 1973,
     1973, 1973, 1973, 1973, 1973, 1973, 1973, 1973, 1973, 1973,
     1973, 1973, 1973, 1973, 1973, 1973, 1973, 1973, 1973, 1973,
     1973, 1973, 1973, 1973, 1973, 1973, 1973, 1973, 1973, 1973,
     1973, 1973, 1973, 1973, 1973, 1973, 1973, 1973, 1973, 1973,

     1973, 1973, 1973, 1973, 1973, 1973, 1973, 1973, 1973, 1973,
     1973, 1973, 1973, 1973, 1973, 1973, 1973, 1973, 1973, 1973,
     1973, 1973, 1973, 1973, 1973, 1973, 1973, 1973, 1973, 1973,
     1973, 1973, 1973, 1973, 1973, 1973, 1973, 1973, 1973, 1973,
     1973, 1973, 1973, 1973, 1973, 1973, 1973, 1973, 1973, 1973,
     1973, 1973, 1973, 1973, 1973, 1973, 1973, 1973, 1973, 1973,
     1973, 1973, 1973, 1973, 1973, 1973, 1973, 1973, 1973, 1973,
     1973, 1973, 1973, 1973, 1973, 1973, 1973, 1973, 1973, 1973,
     1973, 1973, 1973, 1973, 1973, 1973, 1973, 1973, 1973, 1973,
     1973, 1973, 1973, 1973, 1973, 1973, 1973, 1973, 1973, 1973,

     1973, 1973, 1973, 1973, 1973, 1973, 1973, 1973, 1973, 1973,
     1973, 1973, 1973, 1973, 1973, 1973, 1973, 1973, 1973, 1973,
     1973, 1973, 1973, 1973, 1973, 1973, 1973, 1973, 1973, 1973,
     1974, 1974, 1974, 1974, 1974, 1974, 1974, 1974, 1974,  810,
     1974, 1974,  809, 1974, 1974, 1974, 1974, 1974, 1974, 1974,
     1974, 1974, 1974, 1974, 1974, 1974, 1974, 1974, 1974, 1974,
     1974, 1974, 1974, 1974, 1974, 1974, 1974, 1974, 1974, 1974,
     1974,  808, 1974, 1974, 1974, 1974, 1974, 1974, 1974, 1974,
     1974, 1974, 1974, 1974, 1974, 1974, 1974, 1974, 1974, 1974,
     1974, 1974, 1974, 1974, 1974, 1974, 1974, 1974, 1974, 1974,

     1974, 1974, 1974, 1974, 1974, 1974, 1974, 1974, 1974, 1974,
     1974, 1974, 1974, 1974, 1974, 1974, 1974, 1974, 1974, 1974,
     1974, 1974, 1974, 1974, 1974, 1974, 1974, 1974, 1974, 1974,
     1974, 1974, 1974, 1974, 1974, 1974, 1974, 1974, 1974, 1974,
     1974, 1974, 1974, 1974, 1974, 1974, 1974, 1974, 1974, 1974,
     1974, 1974, 1974, 1974, 1974, 1974, 1974, 1974, 1974, 1974,
     1974, 1974, 1974, 1974, 1974, 1974, 1974, 1974, 1974, 1974,
     1974, 1974, 1974, 1974, 1974, 1974, 1974, 1974, 1974, 1974,
     1974, 1974, 1974, 1974, 1974, 1974, 1974, 1974, 1974, 1974,
     1974, 1974, 1974, 1974, 1974, 1974, 1974, 1974, 1974, 1974,

     1974, 1974, 1974, 1974, 1974, 1974, 1974, 1974, 1974, 1974,
     1974, 1974, 1974, 1974, 1974, 1974, 1974, 1974, 1974, 1974,
     1974, 1974, 1974, 1974, 1974, 1974, 1974, 1974, 1974, 1974,
     1974, 1974, 1974, 1974, 1974, 1974, 1974, 1974, 1974, 1974,
     1974, 1974, 1974, 1974, 1974, 1974, 1974, 1974, 1974, 1974,
     1974, 1974, 1974, 1974, 1974, 1974, 1974, 1974, 1974, 1974,
     1974, 1974, 1974, 1974, 1974, 1974, 1974, 1974, 1974, 1974,
     1974, 1974, 1974, 1974, 1974, 1974, 1974, 1974, 1974, 1974,
     1974, 1974, 1974, 1974, 1974, 1975, 1975, 1975, 1975, 1975,
     1975, 1975, 1975, 1975,  807, 1975, 1975,  806, 1975, 1975,

     1975, 1975, 1975, 1975, 1975, 1975, 1975, 1975, 1975, 1975,
     1975, 1975, 1975, 1975, 1975, 1975, 1975, 1975, 1975, 1975,
     1975, 1975, 1975, 1975, 1975, 1975, 1975, 1975, 1975, 1975,
     1975, 1975, 1975, 1975, 1975, 1975, 1975, 1975, 1975, 1975,
     1975, 1975, 1975, 1975, 1975, 1975, 1975,  805, 1975, 1975,
     1975, 1975, 1975, 1975, 1975, 1975, 1975, 1975, 1975, 1975,
     1975, 1975, 1975, 1975, 1975, 1975, 1975, 1975, 1975, 1975,
     1975, 1975, 1975, 1975, 1975, 1975, 1975, 1975, 1975, 1975,
     1975, 1975, 1975, 1975, 1975, 1975, 1975, 1975, 1975, 1975,
     1975, 1975, 1975, 1975, 1975, 1975, 1975, 1975, 1975, 1975,

     1975, 1975, 1975, 1975, 1975, 1975, 1975, 1975, 1975, 1975,
     1975, 1975, 1975, 1975, 1975, 1975, 1975, 1975, 1975, 1975,
     1975, 1975, 1975, 1975, 1975, 1975, 1975, 1975, 1975, 1975,
     1975, 1975, 1975, 1975, 1975, 1975, 1975, 1975, 1975, 1975,
     1975, 1975, 1975, 1975, 1975, 1975, 1975, 1975, 1975, 1975,
     1975, 1975, 1975, 1975, 1975, 1975, 1975, 1975, 1975, 1975,
     1975, 1975, 1975, 1975, 1975, 1975, 1975, 1975, 1975, 1975,
     1975, 1975, 1975, 1975, 1975, 1975, 1975, 1975, 1975, 1975,
     1975, 1975, 1975, 1975, 1975, 1975, 1975, 1975, 1975, 1975,
     1975, 1975, 1975, 1975, 1975, 1975, 1975, 1975, 1975, 1975,

     1975, 1975, 1975, 1975, 1975, 1975, 1975, 1975, 1975, 1975,
     1975, 1975, 1975, 1975, 1975, 1975, 1975, 1975, 1975, 1975,
     1975, 1975, 1975, 1975, 1975, 1975, 1975, 1975, 1975, 1975,
     1975, 1975, 1975, 1975, 1975, 1975, 1975, 1975, 1975, 1975,
     1976,  804,  803,  802,  801,  800,  799,  798,  797,  796,
      795,  794,  793,  792, 1976, 1976, 1976, 1976, 1976, 1976,
     1976, 1976, 1976, 1976,  791,  789,  788,  787,  786,  785,
      784, 1976, 1976, 1976, 1976, 1976, 1976, 1976, 1976, 1976,
     1976, 1976, 1976, 1976, 1976, 1976, 1976, 1976, 1976, 1976,
     1976, 1976, 1976, 1976, 1976, 1976, 1976,  783,  782,  781,

      780, 1976,  779, 1976, 1976, 1976, 1976, 1976, 1976, 1976,
     1976, 1976, 1976, 1976, 1976, 1976, 1976, 1976, 1976, 1976,
     1976, 1976, 1976, 1976, 1976, 1976, 1976, 1976, 1976,  778,
      777,  775,  774, 1976, 1976, 1976, 1976, 1976, 1976, 1976,
     1976, 1976, 1976, 1976, 1976, 1976, 1976, 1976, 1976, 1976,
     1976, 1976, 1976, 1976, 1976, 1976, 1976, 1976, 1976, 1976,
     1976, 1976, 1976, 1976, 1976, 1976, 1976, 1976, 1976, 1976,
     1976, 1976, 1976, 1976, 1976, 1976, 1976, 1976, 1976, 1976,
     1976, 1976, 1976, 1976, 1976, 1976, 1976, 1976, 1976, 1976,
     1976, 1976, 1976, 1976, 1976, 1976, 1976, 1976, 1976, 1976,

     1976, 1976, 1976, 1976, 1976, 1976, 1976, 1976, 1976, 1976,
     1976, 1976, 1976, 1976, 1976, 1976, 1976, 1976, 1976, 1976,
     1976, 1976, 1976, 1976, 1976, 1976, 1976, 1976, 1976, 1976,
     1976, 1976, 1976, 1976, 1976, 1976, 1976, 1976, 1976, 1976,
     1976, 1976, 1976, 1976, 1976, 1976, 1976, 1976, 1976, 1976,
     1976, 1976, 1976, 1976, 1976, 1976, 1976, 1976, 1976, 1976,
     1976, 1976, 1977,  773,  772,  771,  770,  769,  768,  767,
      766, 1977, 1977, 1977, 1977, 1977, 1977, 1977, 1977, 1977,
     1977,  764,  762,  761,  760,  759,  758,  757, 1977, 1977,
     1977, 1977, 1977, 1977, 1977, 1977, 1977, 1977, 1977, 1977,

     1977, 1977, 1977, 1977, 1977, 1977, 1977, 1977, 1977, 1977,
     1977, 1977, 1977, 1977,  756,  755,  754,  753, 1977,  752,
     1977, 1977, 1977, 1977, 1977, 1977, 1977, 1977, 1977, 1977,
     1977, 1977, 1977, 1977, 1977, 1977, 1977, 1977, 1977, 1977,
     1977, 1977, 1977, 1977, 1977, 1977,  751,  750,  749,  748,
     1977, 1977, 1977, 1977, 1977, 1977, 1977, 1977, 1977, 1977,
     1977, 1977, 1977, 1977, 1977, 1977, 1977, 1977, 1977, 1977,
     1977, 1977, 1977, 1977, 1977, 1977, 1977, 1977, 1977, 1977,
     1977, 1977, 1977, 1977, 1977, 1977, 1977, 1977, 1977, 1977,
     1977, 1977, 1977, 1977, 1977, 1977, 1977, 1977, 1977, 1977,

     1977, 1977, 1977, 1977, 1977, 1977, 1977, 1977, 1977, 1977,
     1977, 1977, 1977, 1977, 1977, 1977, 1977, 1977, 1977, 1977,
     1977, 1977, 1977, 1977, 1977, 1977, 1977, 1977, 1977, 1977,
     1977, 1977, 1977, 1977, 1977, 1977, 1977, 1977, 1977, 1977,
     1977, 1977, 1977, 1977, 1977, 1977, 1977, 1977, 1977, 1977,
     1977, 1977, 1977, 1977, 1977, 1977, 1977, 1977, 1977, 1977,
     1977, 1977, 1977, 1977, 1977, 1977, 1977, 1977, 1977, 1977,
     1977, 1977, 1977, 1977, 1977, 1977, 1977, 1977, 1977, 1978,
     1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978,  747,
      746,  745,  744,  743,  742,  741, 1978, 1978, 1978, 1978,

     1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978,
     1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978,
     1978, 1978,  740,  739,  738,  737, 1978,  736, 1978, 1978,
     1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978,
     1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978,
     1978, 1978, 1978, 1978,  735,  647,  646,  645, 1978, 1978,
     1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978,
     1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978,
     1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978,
     1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978,

     1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978,
     1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978,
     1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978,
     1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978,
     1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978,
     1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978,
     1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978,
     1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978,
     1978, 1978, 1978, 1978, 1978, 1978, 1978, 1979, 1979, 1979,
     1979, 1979, 1979, 1979, 1979, 1979,  644, 1979, 1979,  643,

     1979, 1979, 1979, 1979, 1979, 1979, 1979, 1979, 1979, 1979,
     1979, 1979, 1979, 1979, 1979, 1979, 1979, 1979, 1979, 1979,
     1979, 1979, 1979, 1979, 1979, 1979, 1979, 1979, 1979, 1979,
     1979, 1979, 1979, 1979, 1979, 1979, 1979, 1979, 1979, 1979,
     1979, 1979, 1979, 1979, 1979, 1979, 1979, 1979, 1979, 1979,
     1979, 1979, 1979, 1979, 1979, 1979, 1979, 1979, 1979, 1979,
     1979, 1979, 1979, 1979, 1979, 1979, 1979, 1979, 1979, 1979,
     1979, 1979, 1979, 1979, 1979, 1979, 1979, 1979, 1979, 1979,
     1979, 1979, 1979, 1979, 1979, 1979, 1979, 1979, 1979, 1979,
     1979, 1979, 1979, 1979, 1979, 1979, 1979, 1979, 1979, 1979,

     1979, 1979, 1979, 1979, 1979, 1979, 1979, 1979, 1979, 1979,
     1979, 1979, 1979, 1979, 1979, 1979, 1979, 1979, 1979, 1979,
     1979, 1979, 1979, 1979, 1979, 1979, 1979, 1979, 1979, 1979,
     1979, 1979, 1979, 1979, 1979, 1979, 1979, 1979, 1979, 1979,
     1979, 1979, 1979, 1979, 1979, 1979, 1979, 1979, 1979, 1979,
     1979, 1979, 1979, 1979, 1979, 1979, 1979, 1979, 1979, 1979,
     1979, 1979, 1979, 1979, 1979, 1979, 1979, 1979, 1979, 1979,
     1979, 1979, 1979, 1979, 1979, 1979, 1979, 1979, 1979, 1979,
     1979, 1979, 1979, 1979, 1979, 1979, 1979, 1979, 1979, 1979,
     1979, 1979, 1979, 1979, 1979, 1979, 1979, 1979, 1979, 1979,

     1979, 1979, 1979, 1979, 1979, 1979, 1979, 1979, 1979, 1979,
     1979, 1979, 1979, 1979, 1979, 1979, 1979, 1979, 1979, 1979,
     1979, 1979, 1979, 1979, 1979, 1979, 1979, 1979, 1979, 1979,
     1979, 1979, 1979, 1979, 1979, 1979, 1979, 1979, 1979, 1979,
     1979, 1979, 1980, 1980, 1980, 1980, 1980, 1980, 1980, 1980,
     1980, 1980, 1980, 1980, 1980, 1980, 1980, 1980, 1980, 1980,
     1980, 1980, 1980, 1980, 1980, 1980, 1980, 1980, 1980, 1980,
     1980, 1980, 1980, 1980, 1980, 1980, 1980, 1980, 1980, 1980,
     1980, 1980, 1980, 1980, 1980, 1980, 1980, 1980, 1980, 1980,
     1980, 1980, 1980, 1980, 1980, 1980, 1980, 1980, 1980, 1980,

     1980, 1980, 1980, 1980, 1980, 1980, 1980, 1980, 1980, 1980,
     1980, 1980, 1980, 1980, 1980, 1980, 1980, 1980, 1980, 1980,
     1980, 1980, 1980, 1980, 1980, 1980, 1980, 1980, 1980, 1980,
     1980, 1980, 1980, 1980, 1980, 1980, 1980, 1980, 1980, 1980,
     1980, 1980, 1980, 1980, 1980, 1980, 1980, 1980, 1980, 1980,
     1980, 1980, 1980, 1980, 1980, 1980, 1980, 1980, 1980, 1980,
     1980, 1980, 1980, 1980, 1980, 1980, 1980, 1980, 1980, 1980,
     1980, 1980, 1980, 1980, 1980, 1980, 1980, 1980, 1980, 1980,
     1980, 1980, 1980, 1980, 1980, 1980, 1980, 1980, 1980, 1980,
     1980, 1980, 1980, 1980, 1980, 1980, 1980, 1980, 1980, 1980,

     1980, 1980, 1980, 1980, 1980, 1980, 1980, 1980, 1980, 1980,
     1980, 1980, 1980, 1980, 1980, 1980, 1980, 1980, 1980, 1980,
     1980, 1980, 1980, 1980, 1980, 1980, 1980, 1980, 1980, 1980,
     1980, 1980, 1980, 1980, 1980, 1980, 1980, 1980, 1980, 1980,
     1980, 1980, 1980, 1980, 1980, 1980, 1980, 1980, 1980, 1980,
     1980, 1980, 1980, 1980, 1980, 1980, 1980, 1980, 1980, 1980,
     1980, 1980, 1980, 1980, 1980, 1980, 1980, 1980, 1980, 1980,
     1980, 1980, 1980, 1980, 1980, 1980, 1980, 1980, 1980, 1980,
     1980, 1980, 1980, 1980, 1980, 1980, 1980, 1980, 1980, 1980,
     1980, 1980, 1980, 1980, 1980, 1980, 1980, 1981, 1981, 1981,

     1981, 1981, 1981, 1981, 1981, 1981, 1981, 1981, 1981, 1981,
     1981, 1981, 1981, 1981, 1981, 1981, 1981, 1981, 1981, 1981,
     1981, 1981, 1981, 1981, 1981, 1981, 1981, 1981, 1981, 1981,
     1981, 1981, 1981, 1981, 1981, 1981, 1981, 1981, 1981, 1981,
     1981, 1981, 1981, 1981, 1981, 1981, 1981, 1981, 1981, 1981,
     1981, 1981, 1981, 1981, 1981, 1981, 1981, 1981, 1981, 1981,
     1981, 1981, 1981, 1981, 1981, 1981, 1981, 1981, 1981, 1981,
     1981, 1981, 1981, 1981, 1981, 1981, 1981, 1981, 1981, 1981,
     1981, 1981, 1981, 1981, 1981, 1981, 1981, 1981, 1981, 1981,
     1981, 1981, 1981, 1981, 1981, 1981, 1981, 1981, 1981, 1981,

     1981, 1981, 1981, 1981, 1981, 1981, 1981, 1981, 1981, 1981,
     1981, 1981, 1981, 1981, 1981, 1981, 1981, 1981, 1981, 1981,
     1981, 1981, 1981, 1981, 1981, 1981, 1981, 1981, 1981, 1981,
     1981, 1981, 1981, 1981, 1981, 1981, 1981, 1981, 1981, 1981,
     1981, 1981, 1981, 1981, 1981, 1981, 1981, 1981, 1981, 1981,
     1981, 1981, 1981, 1981, 1981, 1981, 1981, 1981, 1981, 1981,
     1981, 1981, 1981, 1981, 1981, 1981, 1981, 1981, 1981, 1981,
     1981, 1981, 1981, 1981, 1981, 1981, 1981, 1981, 1981, 1981,
     1981, 1981, 1981, 1981, 1981, 1981, 1981, 1981, 1981, 1981,
     1981, 1981, 1981, 1981, 1981, 1981, 1981, 1981, 1981, 1981,

     1981, 1981, 1981, 1981, 1981, 1981, 1981, 1981, 1981, 1981,
     1981, 1981, 1981, 1981, 1981, 1981, 1981, 1981, 1981, 1981,
     1981, 1981, 1981, 1981, 1981, 1981, 1981, 1981, 1981, 1981,
     1981, 1981, 1981, 1981, 1981, 1981, 1981, 1981, 1981, 1981,
     1981, 1981, 1981, 1981, 1981, 1981, 1981, 1981, 1981, 1981,
     1981, 1981, 1982, 1982, 1982, 1982, 1982, 1982, 1982, 1982,
     1982, 1982,  642,  641,  640,  638,  637,  635,  634, 1982,
     1982, 1982, 1982, 1982, 1982, 1982, 1982, 1982, 1982, 1982,
     1982, 1982, 1982, 1982, 1982, 1982, 1982, 1982, 1982, 1982,
     1982, 1982, 1982, 1982, 1982,  631,  630,  628,  627, 1982,

      625, 1982, 1982, 1982, 1982, 1982, 1982, 1982, 1982, 1982,
     1982, 1982, 1982, 1982, 1982, 1982, 1982, 1982, 1982, 1982,
     1982, 1982, 1982, 1982, 1982, 1982, 1982,  624,  623,  622,
      621, 1982, 1982, 1982, 1982, 1982, 1982, 1982, 1982, 1982,
     1982, 1982, 1982, 1982, 1982, 1982, 1982, 1982, 1982, 1982,
     1982, 1982, 1982, 1982, 1982, 1982, 1982, 1982, 1982, 1982,
     1982, 1982, 1982, 1982, 1982, 1982, 1982, 1982, 1982, 1982,
     1982, 1982, 1982, 1982, 1982, 1982, 1982, 1982, 1982, 1982,
     1982, 1982, 1982, 1982, 1982, 1982, 1982, 1982, 1982, 1982,
     1982, 1982, 1982, 1982, 1982, 1982, 1982, 1982, 1982, 1982,

     1982, 1982, 1982, 1982, 1982, 1982, 1982, 1982, 1982, 1982,
     1982, 1982, 1982, 1982, 1982, 1982, 1982, 1982, 1982, 1982,
     1982, 1982, 1982, 1982, 1982, 1982, 1982, 1982, 1982, 1982,
     1982, 1982, 1982, 1982, 1982, 1982, 1982, 1982, 1982, 1982,
     1982, 1982, 1982, 1982, 1982, 1982, 1982, 1982, 1982, 1982,
     1982, 1982, 1982, 1982, 1982, 1982, 1982, 1982, 1982, 1982,
     1983, 1983, 1983, 1983, 1983, 1983, 1983, 1983, 1983, 1983,
      619,  618,  617,  615,  614,  612,  611, 1983, 1983, 1983,
     1983, 1983, 1983, 1983, 1983, 1983, 1983, 1983, 1983, 1983,
     1983, 1983, 1983, 1983, 1983, 1983, 1983, 1983, 1983, 1983,

     1983, 1983, 1983,  610,  608,  607,  605, 1983,  604, 1983,
     1983, 1983, 1983, 1983, 1983, 1983, 1983, 1983, 1983, 1983,
     1983, 1983, 1983, 1983, 1983, 1983, 1983, 1983, 1983, 1983,
     1983, 1983, 1983, 1983, 1983,  603,  602,  601,  600, 1983,
     1983, 1983, 1983, 1983, 1983, 1983, 1983, 1983, 1983, 1983,
     1983, 1983, 1983, 1983, 1983, 1983, 1983, 1983, 1983, 1983,
     1983, 1983, 1983, 1983, 1983, 1983, 1983, 1983, 1983, 1983,
     1983, 1983, 1983, 1983, 1983, 1983, 1983, 1983, 1983, 1983,
     1983, 1983, 1983, 1983, 1983, 1983, 1983, 1983, 1983, 1983,
     1983, 1983, 1983, 1983, 1983, 1983, 1983, 1983, 1983, 1983,

     1983, 1983, 1983, 1983, 1983, 1983, 1983, 1983, 1983, 1983,
     1983, 1983, 1983, 1983, 1983, 1983, 1983, 1983, 1983, 1983,
     1983, 1983, 1983, 1983, 1983, 1983, 1983, 1983, 1983, 1983,
     1983, 1983, 1983, 1983, 1983, 1983, 1983, 1983, 1983, 1983,
     1983, 1983, 1983, 1983, 1983, 1983, 1983, 1983, 1983, 1983,
     1983, 1983, 1983, 1983, 1983, 1983, 1983, 1983, 1983, 1983,
     1983, 1983, 1983, 1983, 1983, 1983, 1983, 1983, 1984, 1984,
     1984, 1984, 1984, 1984, 1984, 1984, 1984, 1984, 1984, 1984,
     1984, 1984, 1984, 1984, 1984, 1984, 1984, 1984, 1984, 1984,
     1984, 1984, 1984, 1984, 1984, 1984, 1984, 1984, 1984, 1984,

     1984,  598, 1984, 1984, 1984,  596,  595, 1984, 1984, 1984,
     1984, 1984, 1984, 1984, 1984, 1984, 1984, 1984, 1984, 1984,
     1984, 1984, 1984, 1984, 1984, 1984, 1984, 1984, 1984, 1984,
     1984, 1984, 1984, 1984, 1984, 1984, 1984, 1984, 1984, 1984,
     1984, 1984, 1984, 1984, 1984, 1984, 1984, 1984, 1984, 1984,
     1984, 1984, 1984, 1984, 1984, 1984, 1984, 1984, 1984,  594,
     1984, 1984, 1984, 1984, 1984, 1984, 1984, 1984, 1984, 1984,
     1984, 1984, 1984, 1984, 1984, 1984, 1984, 1984, 1984, 1984,
     1984, 1984, 1984, 1984, 1984, 1984, 1984, 1984, 1984, 1984,
     1984, 1984, 1984, 1984, 1984, 1984, 1984, 1984, 1984, 1984,

     1984, 1984, 1984, 1984, 1984, 1984, 1984, 1984, 1984, 1984,
     1984, 1984, 1984, 1984, 1984, 1984, 1984, 1984, 1984, 1984,
     1984, 1984, 1984, 1984, 1984, 1984, 1984, 1984, 1984, 1984,
     1984, 1984, 1984, 1984, 1984, 1984, 1984, 1984, 1984, 1984,
     1984, 1984, 1984, 1984, 1984, 1984, 1984, 1984, 1984, 1984,
     1984, 1984, 1984, 1984, 1984, 1984, 1984, 1984, 1984, 1984,
     1984, 1984, 1984, 1984, 1984, 1984, 1984, 1984, 1984, 1984,
     1984, 1984, 1984, 1984, 1984, 1984, 1984, 1984, 1984, 1984,
     1984, 1984, 1984, 1984, 1984, 1984, 1984, 1984, 1984, 1984,
     1984, 1984, 1984, 1984, 1984, 1984, 1984, 1984, 1984, 1984,

     1984, 1984, 1984, 1984, 1984, 1984, 1984, 1984, 1984, 1984,
     1984, 1984, 1984, 1984, 1984, 1984, 1984, 1984, 1984, 1984,
     1984, 1984, 1984, 1985, 1985, 1985, 1985, 1985, 1985, 1985,
     1985, 1985, 1985,  593,  592, 1985, 1985, 1985, 1985, 1985,
     1985, 1985, 1985, 1985, 1985, 1985, 1985, 1985, 1985, 1985,
     1985, 1985, 1985, 1985, 1985, 1985, 1985, 1985, 1985, 1985,
      591,  590, 1985, 1985, 1985, 1985, 1985, 1985, 1985, 1985,
     1985, 1985, 1985, 1985, 1985, 1985, 1985, 1985, 1985, 1985,
     1985, 1985,  589, 1985,  588, 1985, 1985, 1985, 1985, 1985,
     1985, 1985, 1985, 1985, 1985, 1985, 1985, 1985, 1985, 1985,

     1985, 1985, 1985, 1985, 1985, 1985, 1985, 1985, 1985, 1985,
     1985, 1985, 1985, 1985,  587, 1985, 1985, 1985, 1985, 1985,
     1985, 1985, 1985, 1985, 1985, 1985, 1985, 1985, 1985, 1985,
     1985, 1985, 1985, 1985, 1985, 1985, 1985, 1985, 1985, 1985,
     1985, 1985, 1985, 1985, 1985,  586, 1985, 1985, 1985, 1985,
     1985, 1985, 1985, 1985, 1985, 1985, 1985, 1985, 1985, 1985,
     1985, 1985, 1985, 1985, 1985, 1985, 1985, 1985, 1985, 1985,
     1985, 1985, 1985, 1985, 1985, 1985, 1985, 1985, 1985, 1985,
     1985, 1985,  585, 1985, 1985, 1985, 1985, 1985, 1985, 1985,
     1985, 1985, 1985, 1985, 1985, 1985, 1985, 1985, 1985, 1985,

     1985, 1985, 1985, 1985, 1985, 1985, 1985, 1985, 1985, 1985,
     1985, 1985, 1985, 1985, 1985, 1985, 1985, 1985, 1985, 1985,
     1985, 1985, 1985, 1985, 1985, 1985, 1985, 1985, 1985, 1985,
     1985, 1985, 1985, 1985, 1985, 1985, 1985, 1985, 1985, 1985,
     1985, 1985, 1985, 1985, 1985, 1985, 1985, 1985, 1985, 1985,
     1985, 1985, 1985, 1985, 1985, 1985, 1985, 1985, 1985, 1985,
     1985, 1985, 1985, 1985, 1985, 1985, 1985, 1985, 1985, 1985,
     1985, 1985, 1985, 1985, 1985, 1985, 1985, 1985, 1986, 1986,
     1986, 1986, 1986, 1986, 1986, 1986, 1986, 1986, 1986, 1986,
     1986, 1986, 1986, 1986, 1986, 1986, 1986, 1986, 1986, 1986,

     1986, 1986, 1986, 1986, 1986, 1986, 1986, 1986, 1986, 1986,
     1986, 1986, 1986, 1986, 1986, 1986, 1986, 1986, 1986, 1986,
     1986, 1986, 1986, 1986, 1986, 1986, 1986, 1986, 1986, 1986,
     1986, 1986, 1986, 1986, 1986, 1986, 1986, 1986, 1986, 1986,
     1986, 1986, 1986, 1986, 1986, 1986, 1986, 1986, 1986, 1986,
     1986, 1986, 1986, 1986, 1986, 1986, 1986, 1986, 1986, 1986,
     1986, 1986, 1986, 1986, 1986, 1986, 1986, 1986, 1986, 1986,
     1986, 1986, 1986, 1986, 1986, 1986, 1986, 1986, 1986, 1986,
     1986, 1986, 1986, 1986, 1986, 1986, 1986, 1986, 1986, 1986,
     1986, 1986, 1986, 1986, 1986, 1986, 1986, 1986, 1986, 1986,

     1986, 1986, 1986, 1986, 1986, 1986, 1986, 1986, 1986, 1986,
     1986, 1986, 1986, 1986, 1986, 1986, 1986, 1986, 1986, 1986,
     1986, 1986, 1986, 1986, 1986, 1986, 1986, 1986, 1986, 1986,
     1986, 1986, 1986, 1986, 1986, 1986, 1986, 1986, 1986, 1986,
     1986, 1986, 1986, 1986, 1986, 1986, 1986, 1986, 1986, 1986,
     1986, 1986, 1986, 1986, 1986, 1986, 1986, 1986, 1986, 1986,
     1986, 1986, 1986, 1986, 1986, 1986, 1986, 1986, 1986, 1986,
     1986, 1986, 1986, 1986, 1986, 1986, 1986, 1986, 1986, 1986,
     1986, 1986, 1986, 1986, 1986, 1986, 1986, 1986, 1986, 1986,
     1986, 1986, 1986, 1986, 1986, 1986, 1986, 1986, 1986, 1986,

     1986, 1986, 1986, 1986, 1986, 1986, 1986, 1986, 1986, 1986,
     1986, 1986, 1986, 1986, 1986, 1986, 1986, 1986, 1986, 1986,
     1986, 1986, 1986, 1986, 1986, 1986, 1986, 1986, 1986, 1986,
     1986, 1986, 1986, 1987, 1987, 1987, 1987, 1987, 1987, 1987,
     1987, 1987, 1987,  584,  583,  582,  580,  579,  578,  576,
     1987, 1987, 1987, 1987, 1987, 1987, 1987, 1987, 1987, 1987,
     1987, 1987, 1987, 1987, 1987, 1987, 1987, 1987, 1987, 1987,
     1987, 1987, 1987, 1987, 1987, 1987,  574,  573,  572,  571,
     1987,  569, 1987, 1987, 1987, 1987, 1987, 1987, 1987, 1987,
     1987, 1987, 1987, 1987, 1987, 1987, 1987, 1987, 1987, 1987,

     1987, 1987, 1987, 1987, 1987, 1987, 1987, 1987,  568,  567,
      566,  565, 1987, 1987, 1987, 1987, 1987, 1987, 1987, 1987,
     1987, 1987, 1987, 1987, 1987, 1987, 1987, 1987, 1987, 1987,
     1987, 1987, 1987, 1987, 1987, 1987, 1987, 1987, 1987, 1987,
     1987, 1987, 1987, 1987, 1987, 1987, 1987, 1987, 1987, 1987,
     1987, 1987, 1987, 1987, 1987, 1987, 1987, 1987, 1987, 1987,
     1987, 1987, 1987, 1987, 1987, 1987, 1987, 1987, 1987, 1987,
     1987, 1987, 1987, 1987, 1987, 1987, 1987, 1987, 1987, 1987,
     1987, 1987, 1987, 1987, 1987, 1987, 1987, 1987, 1987, 1987,
     1987, 1987, 1987, 1987, 1987, 1987, 1987, 1987, 1987, 1987,

     1987, 1987, 1987, 1987, 1987, 1987, 1987, 1987, 1987, 1987,
     1987, 1987, 1987, 1987, 1987, 1987, 1987, 1987, 1987, 1987,
     1987, 1987, 1987, 1987, 1987, 1987, 1987, 1987, 1987, 1987,
     1987, 1987, 1987, 1987, 1987, 1987, 1987, 1987, 1987, 1987,
     1987, 1988, 1988, 1988, 1988, 1988, 1988, 1988, 1988, 1988,
     1988,  564,  562,  561,  560,  559,  558,  556, 1988, 1988,
     1988, 1988, 1988, 1988, 1988, 1988, 1988, 1988, 1988, 1988,
     1988, 1988, 1988, 1988, 1988, 1988, 1988, 1988, 1988, 1988,
     1988, 1988, 1988, 1988,  555,  554,  553,  552, 1988,  551,
     1988, 1988, 1988, 1988, 1988, 1988, 1988, 1988, 1988, 1988,

     1988, 1988, 1988, 1988, 1988, 1988, 1988, 1988, 1988, 1988,
     1988, 1988, 1988, 1988, 1988, 1988,  550,  549,  548,  545,
     1988, 1988, 1988, 1988, 1988, 1988, 1988, 1988, 1988, 1988,
     1988, 1988, 1988, 1988, 1988, 1988, 1988, 1988, 1988, 1988,
     1988, 1988, 1988, 1988, 1988, 1988, 1988, 1988, 1988, 1988,
     1988, 1988, 1988, 1988, 1988, 1988, 1988, 1988, 1988, 1988,
     1988, 1988, 1988, 1988, 1988, 1988, 1988, 1988, 1988, 1988,
     1988, 1988, 1988, 1988, 1988, 1988, 1988, 1988, 1988, 1988,
     1988, 1988, 1988, 1988, 1988, 1988, 1988, 1988, 1988, 1988,
     1988, 1988, 1988, 1988, 1988, 1988, 1988, 1988, 1988, 1988,

     1988, 1988, 1988, 1988, 1988, 1988, 1988, 1988, 1988, 1988,
     1988, 1988, 1988, 1988, 1988, 1988, 1988, 1988, 1988, 1988,
     1988, 1988, 1988, 1988, 1988, 1988, 1988, 1988, 1988, 1988,
     1988, 1988, 1988, 1988, 1988, 1988, 1988, 1988, 1988, 1988,
     1988, 1988, 1988, 1988, 1988, 1988, 1988, 1988, 1988, 1989,
     1989, 1989, 1989, 1989, 1989, 1989, 1989, 1989, 1989, 1989,
     1989, 1989, 1989, 1989, 1989, 1989, 1989, 1989, 1989, 1989,
     1989, 1989, 1989, 1989, 1989, 1989, 1989, 1989, 1989, 1989,
     1989, 1989, 1989, 1989, 1989, 1989, 1989, 1989, 1989, 1989,
     1989, 1989, 1989, 1989, 1989, 1989, 1989, 1989, 1989, 1989,

     1989, 1989, 1989, 1989, 1989, 1989, 1989, 1989, 1989, 1989,
     1989, 1989, 1989, 1989, 1989, 1989, 1989, 1989, 1989, 1989,
     1989, 1989, 1989, 1989, 1989, 1989, 1989, 1989, 1989, 1989,
     1989, 1989, 1989, 1989, 1989, 1989, 1989, 1989, 1989, 1989,
     1989, 1989, 1989, 1989, 1989, 1989, 1989, 1989, 1989, 1989,
     1989, 1989, 1989, 1989, 1989, 1989, 1989, 1989, 1989, 1989,
     1989, 1989, 1989, 1989, 1989, 1989, 1989, 1989, 1989, 1989,
     1989, 1989, 1989, 1989, 1989, 1989, 1989, 1989, 1989, 1989,
     1989, 1989, 1989, 1989, 1989, 1989, 1989, 1989, 1989, 1989,
     1989, 1989, 1989, 1989, 1989, 1989, 1989, 1989, 1989, 1989,

     1989, 1989, 1989, 1989, 1989, 1989, 1989, 1989, 1989, 1989,
     1989, 1989, 1989, 1989, 1989, 1989, 1989, 1989, 1989, 1989,
     1989, 1989, 1989, 1989, 1989, 1989, 1989, 1989, 1989, 1989,
     1989, 1989, 1989, 1989, 1989, 1989, 1989, 1989, 1989, 1989,
     1989, 1989, 1989, 1989, 1989, 1989, 1989, 1989, 1989, 1989,
     1989, 1989, 1989, 1989, 1989, 1989, 1989, 1989, 1989, 1989,
     1989, 1989, 1989, 1989, 1989, 1989, 1989, 1989, 1989, 1989,
     1989, 1989, 1989, 1989, 1989, 1989, 1989, 1989, 1989, 1989,
     1989, 1989, 1989, 1989, 1989, 1989, 1989, 1989, 1989, 1989,
     1989, 1989, 1989, 1989, 1989, 1989, 1989, 1989, 1989, 1989,

     1989, 1989, 1989, 1989, 1990, 1990, 1990, 1990, 1990, 1990,
     1990, 1990, 1990, 1990,  544,  543,  541,  540,  539,  535,
      533, 1990, 1990, 1990, 1990, 1990, 1990, 1990, 1990, 1990,
     1990, 1990, 1990, 1990, 1990, 1990, 1990, 1990, 1990, 1990,
     1990, 1990, 1990, 1990, 1990, 1990, 1990,  530,  529,  527,
      526, 1990,  525, 1990, 1990, 1990, 1990, 1990, 1990, 1990,
     1990, 1990, 1990, 1990, 1990, 1990, 1990, 1990, 1990, 1990,
     1990, 1990, 1990, 1990, 1990, 1990, 1990, 1990, 1990,  524,
      523,  522,  521, 1990, 1990, 1990, 1990, 1990, 1990, 1990,
     1990, 1990, 1990, 1990, 1990, 1990, 1990, 1990, 1990, 1990,

     1990, 1990, 1990, 1990, 1990, 1990, 1990, 1990, 1990, 1990,
     1990, 1990, 1990, 1990, 1990, 1990, 1990, 1990, 1990, 1990,
     1990, 1990, 1990, 1990, 1990, 1990, 1990, 1990, 1990, 1990,
     1990, 1990, 1990, 1990, 1990, 1990, 1990, 1990, 1990, 1990,
     1990, 1990, 1990, 1990, 1990, 1990, 1990, 1990, 1990, 1990,
     1990, 1990, 1990, 1990, 1990, 1990, 1990, 1990, 1990, 1990,
     1990, 1990, 1990, 1990, 1990, 1990, 1990, 1990, 1990, 1990,
     1990, 1990, 1990, 1990, 1990, 1990, 1990, 1990, 1990, 1990,
     1990, 1990, 1990, 1990, 1990, 1990, 1990, 1990, 1990, 1990,
     1990, 1990, 1990, 1990, 1990, 1990, 1990, 1990, 1990, 1990,

     1990, 1990, 1990, 1990, 1990, 1990, 1990, 1990, 1990, 1990,
     1990, 1990, 1991, 1991, 1991, 1991, 1991, 1991, 1991, 1991,
     1991, 1991, 1991, 1991, 1991, 1991, 1991, 1991, 1991, 1991,
     1991, 1991, 1991, 1991, 1991, 1991, 1991, 1991, 1991, 1991,
     1991, 1991, 1991, 1991, 1991, 1991, 1991, 1991, 1991, 1991,
     1991, 1991, 1991, 1991, 1991, 1991, 1991, 1991, 1991, 1991,
     1991, 1991, 1991, 1991, 1991, 1991, 1991, 1991, 1991, 1991,
     1991, 1991, 1991, 1991, 1991, 1991, 1991, 1991, 1991, 1991,
     1991, 1991, 1991, 1991, 1991, 1991, 1991, 1991, 1991, 1991,
     1991, 1991, 1991, 1991, 1991, 1991, 1991, 1991, 1991, 1991,

     1991, 1991, 1991, 1991, 1991, 1991, 1991, 1991, 1991, 1991,
     1991, 1991, 1991, 1991, 1991, 1991, 1991, 1991, 1991, 1991,
     1991, 1991, 1991, 1991, 1991, 1991, 1991, 1991, 1991, 1991,
     1991, 1991, 1991, 1991, 1991, 1991, 1991, 1991, 1991, 1991,
     1991, 1991, 1991, 1991, 1991, 1991, 1991, 1991, 1991, 1991,
     1991, 1991, 1991, 1991, 1991, 1991, 1991, 1991, 1991, 1991,
     1991, 1991, 1991, 1991, 1991, 1991, 1991, 1991, 1991, 1991,
     1991, 1991, 1991, 1991, 1991, 1991, 1991, 1991, 1991, 1991,
     1991, 1991, 1991, 1991, 1991, 1991, 1991, 1991, 1991, 1991,
     1991, 1991, 1991, 1991, 1991, 1991, 1991, 1991, 1991, 1991,

     1991, 1991, 1991, 1991, 1991, 1991, 1991, 1991, 1991, 1991,
     1991, 1991, 1991, 1991, 1991, 1991, 1991, 1991, 1991, 1991,
     1991, 1991, 1991, 1991, 1991, 1991, 1991, 1991, 1991, 1991,
     1991, 1991, 1991, 1991, 1991, 1991, 1991, 1991, 1991, 1991,
     1991, 1991, 1991, 1991, 1991, 1991, 1991, 1991, 1991, 1991,
     1991, 1991, 1991, 1991, 1991, 1991, 1991, 1991, 1991, 1991,
     1991, 1991, 1991, 1991, 1991, 1991, 1991, 1992,  520,  519,
      518,  517,  515,  513,  512,  510,  509,  508,  507,  506,
      505, 1992, 1992, 1992, 1992, 1992, 1992, 1992, 1992, 1992,
     1992,  504,  503,  502,  501,  500,  499,  498, 1992, 1992,

     1992, 1992, 1992, 1992, 1992, 1992, 1992, 1992, 1992, 1992,
     1992, 1992, 1992, 1992, 1992, 1992, 1992, 1992, 1992, 1992,
     1992, 1992, 1992, 1992,  497,  496,  495,  494, 1992,  493,
     1992, 1992, 1992, 1992, 1992, 1992, 1992, 1992, 1992, 1992,
     1992, 1992, 1992, 1992, 1992, 1992, 1992, 1992, 1992, 1992,
     1992, 1992, 1992, 1992, 1992, 1992,  492,  491,  490,  489,
     1992, 1992, 1992, 1992, 1992, 1992, 1992, 1992, 1992, 1992,
     1992, 1992, 1992, 1992, 1992, 1992, 1992, 1992, 1992, 1992,
     1992, 1992, 1992, 1992, 1992, 1992, 1992, 1992, 1992, 1992,
     1992, 1992, 1992, 1992, 1992, 1992, 1992, 1992, 1992, 1992,

     1992, 1992, 1992, 1992, 1992, 1992, 1992, 1992, 1992, 1992,
     1992, 1992, 1992, 1992, 1992, 1992, 1992, 1992, 1992, 1992,
     1992, 1992, 1992, 1992, 1992, 1992, 1992, 1992, 1992, 1992,
     1992, 1992, 1992, 1992, 1992, 1992, 1992, 1992, 1992, 1992,
     1992, 1992, 1992, 1992, 1992, 1992, 1992, 1992, 1992, 1992,
     1992, 1992, 1992, 1992, 1992, 1992, 1992, 1992, 1992, 1992,
     1992, 1992, 1992, 1992, 1992, 1992, 1992, 1992, 1992, 1992,
     1992, 1992, 1992, 1992, 1992, 1992, 1992, 1992, 1992, 1992,
     1992, 1992, 1992, 1992, 1992, 1992, 1992, 1992, 1992, 1993,
      488,  486,  485,  484,  483,  482,  481,  480, 1993, 1993,

     1993, 1993, 1993, 1993, 1993, 1993, 1993, 1993,  479,  478,
      477,  476,  475,  474,  473, 1993, 1993, 1993, 1993, 1993,
     1993, 1993, 1993, 1993, 1993, 1993, 1993, 1993, 1993, 1993,
     1993, 1993, 1993, 1993, 1993, 1993, 1993, 1993, 1993, 1993,
     1993,  472,  471,  470,  469, 1993,  468, 1993, 1993, 1993,
     1993, 1993, 1993, 1993, 1993, 1993, 1993, 1993, 1993, 1993,
     1993, 1993, 1993, 1993, 1993, 1993, 1993, 1993, 1993, 1993,
     1993, 1993, 1993,  467,  466,  465,  464, 1993, 1993, 1993,
     1993, 1993, 1993, 1993, 1993, 1993, 1993, 1993, 1993, 1993,
     1993, 1993, 1993, 1993, 1993, 1993, 1993, 1993, 1993, 1993,

     1993, 1993, 1993, 1993, 1993, 1993, 1993, 1993, 1993, 1993,
     1993, 1993, 1993, 1993, 1993, 1993, 1993, 1993, 1993, 1993,
     1993, 1993, 1993, 1993, 1993, 1993, 1993, 1993, 1993, 1993,
     1993, 1993, 1993, 1993, 1993, 1993, 1993, 1993, 1993, 1993,
     1993, 1993, 1993, 1993, 1993, 1993, 1993, 1993, 1993, 1993,
     1993, 1993, 1993, 1993, 1993, 1993, 1993, 1993, 1993, 1993,
     1993, 1993, 1993, 1993, 1993, 1993, 1993, 1993, 1993, 1993,
     1993, 1993, 1993, 1993, 1993, 1993, 1993, 1993, 1993, 1993,
     1993, 1993, 1993, 1993, 1993, 1993, 1993, 1993, 1993, 1993,
     1993, 1993, 1993, 1993, 1993, 1993, 1993, 1993, 1993, 1993,

     1993, 1993, 1993, 1993, 1993, 1993, 1994, 1994, 1994, 1994,
     1994, 1994, 1994, 1994, 1994, 1994, 1994, 1994, 1994, 1994,
     1994, 1994, 1994, 1994, 1994, 1994, 1994, 1994, 1994, 1994,
     1994, 1994, 1994, 1994, 1994, 1994, 1994, 1994, 1994, 1994,
     1994, 1994, 1994, 1994, 1994, 1994, 1994, 1994, 1994, 1994,
     1994, 1994, 1994, 1994, 1994, 1994, 1994, 1994, 1994, 1994,
     1994, 1994, 1994, 1994, 1994, 1994, 1994, 1994, 1994, 1994,
     1994, 1994, 1994, 1994, 1994, 1994, 1994, 1994, 1994, 1994,
     1994, 1994, 1994, 1994, 1994, 1994, 1994, 1994, 1994, 1994,
     1994, 1994, 1994, 1994, 1994, 1994, 1994, 1994, 1994, 1994,

     1994, 1994, 1994, 1994, 1994, 1994, 1994, 1994, 1994, 1994,
     1994, 1994, 1994, 1994, 1994, 1994, 1994, 1994, 1994, 1994,
     1994, 1994, 1994, 1994, 1994, 1994, 1994, 1994, 1994, 1994,
     1994, 1994, 1994, 1994, 1994, 1994, 1994, 1994, 1994, 1994,
     1994, 1994, 1994, 1994, 1994, 1994, 1994, 1994, 1994, 1994,
     1994, 1994, 1994, 1994, 1994, 1994, 1994, 1994, 1994, 1994,
     1994, 1994, 1994, 1994, 1994, 1994, 1994, 1994, 1994, 1994,
     1994, 1994, 1994, 1994, 1994, 1994, 1994, 1994, 1994, 1994,
     1994, 1994, 1994, 1994, 1994, 1994, 1994, 1994, 1994, 1994,
     1994, 1994, 1994, 1994, 1994, 1994, 1994, 1994, 1994, 1994,

     1994, 1994, 1994, 1994, 1994, 1994, 1994, 1994, 1994, 1994,
     1994, 1994, 1994, 1994, 1994, 1994, 1994, 1994, 1994, 1994,
     1994, 1994, 1994, 1994, 1994, 1994, 1994, 1994, 1994, 1994,
     1994, 1994, 1994, 1994, 1994, 1994, 1994, 1994, 1994, 1994,
     1994, 1994, 1994, 1994, 1994, 1994, 1994, 1994, 1994, 1994,
     1994, 1994, 1994, 1994, 1994, 1994, 1994, 1994, 1994, 1994,
     1994, 1995, 1995, 1995, 1995, 1995, 1995, 1995, 1995, 1995,
     1995,  463,  462,  461,  460,  459,  458,  457, 1995, 1995,
     1995, 1995, 1995, 1995, 1995, 1995, 1995, 1995, 1995, 1995,
     1995, 1995, 1995, 1995, 1995, 1995, 1995, 1995, 1995, 1995,

     1995, 1995, 1995, 1995,  456,  455,  454,  453, 1995,  452,
     1995, 1995, 1995, 1995, 1995, 1995, 1995, 1995, 1995, 1995,
     1995, 1995, 1995, 1995, 1995, 1995, 1995, 1995, 1995, 1995,
     1995, 1995, 1995, 1995, 1995, 1995,  449,  448,  396,  391,
     1995, 1995, 1995, 1995, 1995, 1995, 1995, 1995, 1995, 1995,
     1995, 1995, 1995, 1995, 1995, 1995, 1995, 1995, 1995, 1995,
     1995, 1995, 1995, 1995, 1995, 1995, 1995, 1995, 1995, 1995,
     1995, 1995, 1995, 1995, 1995, 1995, 1995, 1995, 1995, 1995,
     1995, 1995, 1995, 1995, 1995, 1995, 1995, 1995, 1995, 1995,
     1995, 1995, 1995, 1995, 1995, 1995, 1995, 1995, 1995, 1995,

     1995, 1995, 1995, 1995, 1995, 1995, 1995, 1995, 1995, 1995,
     1995, 1995, 1995, 1995, 1995, 1995, 1995, 1995, 1995, 1995,
     1995, 1995, 1995, 1995, 1995, 1995, 1995, 1995, 1995, 1995,
     1995, 1995, 1995, 1995, 1995, 1995, 1995, 1995, 1995, 1995,
     1995, 1995, 1995, 1995, 1995, 1995, 1995, 1995, 1995, 1995,
     1995, 1995, 1995, 1995, 1995, 1995, 1995, 1995, 1995, 1995,
     1995, 1995, 1995, 1995, 1995, 1995, 1995, 1995, 1995, 1996,
     1996, 1996, 1996, 1996, 1996, 1996, 1996, 1996, 1996, 1996,
     1996, 1996, 1996, 1996, 1996, 1996, 1996, 1996, 1996, 1996,
     1996, 1996, 1996, 1996, 1996, 1996, 1996, 1996, 1996, 1996,

     1996, 1996, 1996, 1996, 1996, 1996, 1996, 1996, 1996, 1996,
     1996, 1996, 1996, 1996, 1996, 1996, 1996, 1996, 1996, 1996,
     1996, 1996, 1996, 1996, 1996, 1996, 1996, 1996, 1996, 1996,
     1996, 1996, 1996, 1996, 1996, 1996, 1996, 1996, 1996, 1996,
     1996, 1996, 1996, 1996, 1996, 1996, 1996, 1996, 1996, 1996,
     1996, 1996, 1996, 1996, 1996, 1996, 1996, 1996, 1996, 1996,
     1996, 1996, 1996, 1996, 1996, 1996, 1996, 1996, 1996, 1996,
     1996, 1996, 1996, 1996, 1996, 1996, 1996, 1996, 1996, 1996,
     1996, 1996, 1996, 1996, 1996, 1996, 1996, 1996, 1996, 1996,
     1996, 1996, 1996, 1996, 1996, 1996, 1996, 1996, 1996, 1996,

     1996, 1996, 1996, 1996, 1996, 1996, 1996, 1996, 1996, 1996,
     1996, 1996, 1996, 1996, 1996, 1996, 1996, 1996, 1996, 1996,
     1996, 1996, 1996, 1996, 1996, 1996, 1996, 1996, 1996, 1996,
     1996, 1996, 1996, 1996, 1996, 1996, 1996, 1996, 1996, 1996,
     1996, 1996, 1996, 1996, 1996, 1996, 1996, 1996, 1996, 1996,
     1996, 1996, 1996, 1996, 1996, 1996, 1996, 1996, 1996, 1996,
     1996, 1996, 1996, 1996, 1996, 1996, 1996, 1996, 1996, 1996,
     1996, 1996, 1996, 1996, 1996, 1996, 1996, 1996, 1996, 1996,
     1996, 1996, 1996, 1996, 1996, 1996, 1996, 1996, 1996, 1996,
     1996, 1996, 1996, 1996, 1996, 1996, 1996, 1996, 1996, 1996,

     1996, 1996, 1996, 1996, 1996, 1996, 1996, 1996, 1996, 1996,
     1996, 1996, 1996, 1996, 1996, 1996, 1996, 1996, 1996, 1996,
     1996, 1996, 1996, 1996, 1997, 1997, 1997, 1997, 1997, 1997,
     1997, 1997, 1997, 1997, 1997, 1997, 1997, 1997, 1997, 1997,
     1997, 1997, 1997, 1997, 1997, 1997, 1997, 1997, 1997, 1997,
     1997, 1997, 1997, 1997, 1997, 1997, 1997, 1997, 1997, 1997,
     1997, 1997, 1997, 1997, 1997, 1997, 1997, 1997, 1997, 1997,
     1997, 1997, 1997, 1997, 1997, 1997, 1997, 1997, 1997, 1997,
     1997, 1997, 1997, 1997, 1997, 1997, 1997, 1997, 1997, 1997,
     1997, 1997, 1997, 1997, 1997, 1997, 1997, 1997, 1997, 1997,

     1997, 1997, 1997, 1997, 1997, 1997, 1997, 1997, 1997, 1997,
     1997, 1997, 1997, 1997, 1997, 1997, 1997, 1997, 1997, 1997,
     1997, 1997, 1997, 1997, 1997, 1997, 1997, 1997, 1997, 1997,
     1997, 1997, 1997, 1997, 1997, 1997, 1997, 1997, 1997, 1997,
     1997, 1997, 1997, 1997, 1997, 1997, 1997, 1997, 1997, 1997,
     1997, 1997, 1997, 1997, 1997, 1997, 1997, 1997, 1997, 1997,
     1997, 1997, 1997, 1997, 1997, 1997, 1997, 1997, 1997, 1997,
     1997, 1997, 1997, 1997, 1997, 1997, 1997, 1997, 1997, 1997,
     1997, 1997, 1997, 1997, 1997, 1997, 1997, 1997, 1997, 1997,
     1997, 1997, 1997, 1997, 1997, 1997, 1997, 1997, 1997, 1997,

     1997, 1997, 1997, 1997, 1997, 1997, 1997, 1997, 1997, 1997,
     1997, 1997, 1997, 1997, 1997, 1997, 1997, 1997, 1997, 1997,
     1997, 1997, 1997, 1997, 1997, 1997, 1997, 1997, 1997, 1997,
     1997, 1997, 1997, 1997, 1997, 1997, 1997, 1997, 1997, 1997,
     1997, 1997, 1997, 1997, 1997, 1997, 1997, 1997, 1997, 1997,
     1997, 1997, 1997, 1997, 1997, 1997, 1997, 1997, 1997, 1997,
     1997, 1997, 1997, 1997, 1997, 1997, 1997, 1997, 1997, 1997,
     1997, 1997, 1997, 1997, 1997, 1997, 1997, 1997, 1997, 1998,
     1998, 1998, 1998, 1998, 1998, 1998, 1998, 1998, 1998, 1998,
     1998, 1998, 1998, 1998, 1998, 1998, 1998, 1998, 1998, 1998,

     1998, 1998, 1998, 1998, 1998, 1998, 1998, 1998, 1998, 1998,
     1998, 1998, 1998, 1998, 1998, 1998, 1998, 1998, 1998, 1998,
     1998, 1998, 1998, 1998, 1998, 1998, 1998, 1998, 1998, 1998,
     1998, 1998, 1998, 1998, 1998, 1998, 1998, 1998, 1998, 1998,
     1998, 1998, 1998, 1998, 1998, 1998, 1998, 1998, 1998, 1998,
     1998, 1998, 1998, 1998, 1998, 1998, 1998, 1998, 1998, 1998,
     1998, 1998, 1998, 1998, 1998, 1998, 1998, 1998, 1998, 1998,
     1998, 1998, 1998, 1998, 1998, 1998, 1998, 1998, 1998, 1998,
     1998, 1998, 1998, 1998, 1998, 1998, 1998, 1998, 1998, 1998,
     1998, 1998, 1998, 1998, 1998, 1998, 1998, 1998, 1998, 1998,

     1998, 1998, 1998, 1998, 1998, 1998, 1998, 1998, 1998, 1998,
     1998, 1998, 1998, 1998, 1998, 1998, 1998, 1998, 1998, 1998,
     1998, 1998, 1998, 1998, 1998, 1998, 1998, 1998, 1998, 1998,
     1998, 1998, 1998, 1998, 1998, 1998, 1998, 1998, 1998, 1998,
     1998, 1998, 1998, 1998, 1998, 1998, 1998, 1998, 1998, 1998,
     1998, 1998, 1998, 1998, 1998, 1998, 1998, 1998, 1998, 1998,
     1998, 1998, 1998, 1998, 1998, 1998, 1998, 1998, 1998, 1998,
     1998, 1998, 1998, 1998, 1998, 1998, 1998, 1998, 1998, 1998,
     1998, 1998, 1998, 1998, 1998, 1998, 1998, 1998, 1998, 1998,
     1998, 1998, 1998, 1998, 1998, 1998, 1998, 1998, 1998, 1998,

     1998, 1998, 1998, 1998, 1998, 1998, 1998, 1998, 1998, 1998,
     1998, 1998, 1998, 1998, 1998, 1998, 1998, 1998, 1998, 1998,
     1998, 1998, 1998, 1998, 1998, 1998, 1998, 1998, 1998, 1998,
     1998, 1998, 1998, 1998, 1999, 1999, 1999, 1999, 1999, 1999,
     1999, 1999, 1999, 1999, 1999, 1999, 1999, 1999, 1999, 1999,
     1999, 1999, 1999, 1999, 1999, 1999, 1999, 1999, 1999, 1999,
     1999, 1999, 1999, 1999, 1999, 1999, 1999, 1999, 1999, 1999,
     1999, 1999, 1999, 1999, 1999, 1999, 1999, 1999, 1999, 1999,
     1999, 1999, 1999, 1999, 1999, 1999, 1999, 1999, 1999, 1999,
     1999, 1999, 1999, 1999, 1999, 1999, 1999, 1999, 1999, 1999,

     1999, 1999, 1999, 1999, 1999, 1999, 1999, 1999, 1999, 1999,
     1999, 1999, 1999, 1999, 1999, 1999, 1999, 1999, 1999, 1999,
     1999, 1999, 1999, 1999, 1999, 1999, 1999, 1999, 1999, 1999,
     1999, 1999, 1999, 1999, 1999, 1999, 1999, 1999, 1999, 1999,
     1999, 1999, 1999, 1999, 1999, 1999, 1999, 1999, 1999, 1999,
     1999, 1999, 1999, 1999, 1999, 1999, 1999, 1999, 1999, 1999,
     1999, 1999, 1999, 1999, 1999, 1999, 1999, 1999, 1999, 1999,
     1999, 1999, 1999, 1999, 1999, 1999, 1999, 1999, 1999, 1999,
     1999, 1999, 1999, 1999, 1999, 1999, 1999, 1999, 1999, 1999,
     1999, 1999, 1999, 1999, 1999, 1999, 1999, 1999, 1999, 1999,

     1999, 1999, 1999, 1999, 1999, 1999, 1999, 1999, 1999, 1999,
     1999, 1999, 1999, 1999, 1999, 1999, 1999, 1999, 1999, 1999,
     1999, 1999, 1999, 1999, 1999, 1999, 1999, 1999, 1999, 1999,
     1999, 1999, 1999, 1999, 1999, 1999, 1999, 1999, 1999, 1999,
     1999, 1999, 1999, 1999, 1999, 1999, 1999, 1999, 1999, 1999,
     1999, 1999, 1999, 1999, 1999, 1999, 1999, 1999, 1999, 1999,
     1999, 1999, 1999, 1999, 1999, 1999, 1999, 1999, 1999, 1999,
     1999, 1999, 1999, 1999, 1999, 1999, 1999, 1999, 1999, 1999,
     1999, 1999, 1999, 1999, 1999, 1999, 1999, 1999, 1999, 2000,
     2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000,

     2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000,
     2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000,
     2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000,
     2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000,
     2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000,
     2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000,
     2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000,
     2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000,
     2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000,
     2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000,

     2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000,
     2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000,
     2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000,
     2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000,
     2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000,
     2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000,
     2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000,
     2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000,
     2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000,
     2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000,

     2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000,
     2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000,
     2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000,
     2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000,
     2000, 2000, 2000, 2000, 2001, 2001, 2001, 2001, 2001, 2001,
     2001, 2001, 2001, 2001, 2001, 2001, 2001, 2001, 2001, 2001,
     2001, 2001, 2001, 2001, 2001, 2001, 2001, 2001, 2001, 2001,
     2001, 2001, 2001, 2001, 2001, 2001, 2001, 2001, 2001, 2001,
     2001, 2001, 2001, 2001, 2001, 2001, 2001, 2001, 2001, 2001,
     2001, 2001, 2001, 2001, 2001, 2001, 2001, 2001, 2001, 2001,

     2001, 2001, 2001, 2001, 2001, 2001, 2001, 2001, 2001, 2001,
     2001, 2001, 2001, 2001, 2001, 2001, 2001, 2001, 2001, 2001,
     2001, 2001, 2001, 2001, 2001, 2001, 2001, 2001, 2001, 2001,
     2001, 2001, 2001, 2001, 2001, 2001, 2001, 2001, 2001, 2001,
     2001, 2001, 2001, 2001, 2001, 2001, 2001, 2001, 2001, 2001,
     2001, 2001, 2001, 2001, 2001, 2001, 2001, 2001, 2001, 2001,
     2001, 2001, 2001, 2001, 2001, 2001, 2001, 2001, 2001, 2001,
     2001, 2001, 2001, 2001, 2001, 2001, 2001, 2001, 2001, 2001,
     2001, 2001, 2001, 2001, 2001, 2001, 2001, 2001, 2001, 2001,
     2001, 2001, 2001, 2001, 2001, 2001, 2001, 2001, 2001, 2001,

     2001, 2001, 2001, 2001, 2001, 2001, 2001, 2001, 2001, 2001,
     2001, 2001, 2001, 2001, 2001, 2001, 2001, 2001, 2001, 2001,
     2001, 2001, 2001, 2001, 2001, 2001, 2001, 2001, 2001, 2001,
     2001, 2001, 2001, 2001, 2001, 2001, 2001, 2001, 2001, 2001,
     2001, 2001, 2001, 2001, 2001, 2001, 2001, 2001, 2001, 2001,
     2001, 2001, 2001, 2001, 2001, 2001, 2001, 2001, 2001, 2001,
     2001, 2001, 2001, 2001, 2001, 2001, 2001, 2001, 2001, 2001,
     2001, 2001, 2001, 2001, 2001, 2001, 2001, 2001, 2001, 2001,
     2001, 2001, 2001, 2001, 2001, 2001, 2001, 2001, 2001, 2001,
     2001, 2001, 2001, 2001, 2001, 2001, 2001, 2001, 2001,  350,

      347,  345,  338,  337,  332,  326,  316,  314,  310,  306,
      305,  304,  302,  298,  287,  282,  276,  275,  264,  223,
      213,  210,  198,  169,  166,  148,  146,  140,  134,  119,
      118,  113,  109,  106,  101,  100,   99,   96,   95,   91,
       90,   89,   67,   63,   56,   48,   43,    2,    1, 1927,
     1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927,
     1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927,
     1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927,
     1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927,
     1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927,

     1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927,
     1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927,
     1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927,
     1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927,
     1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927,
     1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927,
     1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927,
     1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927,
     1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927,
     1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927,

     1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927,
     1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927,
     1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927,
     1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927,
     1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927,
     1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927,
     1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927,
     1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927,
     1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927,
     1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927, 1927,

     1927, 1927, 1927, 1927, 1927, 1927
    } ;

static yyconst yy_state_type yy_NUL_trans[1927] =
    {   0,
       44,   44,   46,   46,   93,   93,   97,   97,   93,   93,
       46,   46,   46,   46,  107,  107,  111,  111,   46,   46,
       46,   46,  115,  115,  115,  115,   46,   46,  126,  126,
      131,  131,  138,  138,  142,  142,  145,  145,   46,   46,
       46,   46,    0,  165,    0,    0,    0,    0,  170,    0,
        0,    0,    0,  178,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
      264,    0,  268,    0,    0,    0,  271,    0,    0,    0,

        0,    0,    0,    0,    0,    0,  279,    0,    0,  279,
      285,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,  295,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,  342,    0,    0,
        0,    0,    0,    0,  349,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,  165,    0,    0,    0,    0,  170,
        0,  367,    0,    0,    0,    0,    0,  178,  369,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,

        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
      170,  178,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,  264,    0,    0,    0,  268,    0,    0,
      271,    0,    0,    0,    0,    0,    0,    0,  279,    0,
        0,    0,  279,  279,  285,    0,    0,    0,    0,    0,
        0,    0,    0,    0,  295,    0,    0,    0,    0,    0,

        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,  342,    0,    0,    0,    0,    0,    0,  650,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,  170,    0,  178,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,

        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,

        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,

        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,  975,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,

        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,

        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,

        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0, 1288,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,

        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,

        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,

        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0, 1554,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,

        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,

        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,

        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0, 1748,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,

        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,

        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0, 1858,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,

        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0, 1891,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
     1907,    0,    0,    0,    0,    0,    0,    0,    0,    0,

        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0
    } ;

static yyconst flex_int16_t yy_rule_linenum[448] =
    {   0,
      136,  137,  138,  139,  140,  141,  142,  143,  144,  145,
      150,  154,  161,  168,  175,  182,  188,  192,  204,  208,
      213,  217,  220,  224,  225,  229,  232,  236,  238,  243,
      247,  248,  249,  250,  251,  252,  253,  254,  255,  256,
      257,  258,  259,  260,  261,  262,  263,  264,  265,  266,
      267,  268,  269,  270,  271,  272,  273,  274,  275,  276,
      277,  278,  279,  280,  281,  282,  283,  284,  285,  286,
      287,  288,  289,  290,  291,  292,  293,  294,  295,  296,
      297,  298,  299,  300,  301,  302,  303,  304,  305,  306,
      307,  308,  309,  310,  311,  312,  313,  314,  315,  323,

      331,  343,  344,  345,  346,  347,  348,  349,  350,  351,
      352,  353,  354,  355,  356,  357,  358,  359,  360,  361,
      362,  363,  364,  365,  366,  367,  368,  369,  370,  396,
      397,  398,  399,  400,  401,  402,  403,  404,  409,  410,
      411,  412,  413,  417,  424,  430,  440,  447,  454,  462,
      475,  480,  489,  492,  493,  494,  511,  515,  520,  521,
      528,  529,  530,  534,  535,  542,  548,  556,  557,  558,
      559,  560,  563,  564,  565,  566,  567,  568,  569,  570,
      571,  572,  573,  574,  575,  576,  577,  578,  579,  580,
      581,  582,  583,  584,  585,  586,  587,  588,  589,  590,

      591,  592,  593,  594,  595,  596,  597,  598,  599,  600,
      601,  602,  603,  604,  605,  606,  607,  608,  609,  610,
      611,  612,  613,  614,  615,  616,  617,  618,  619,  620,
      621,  622,  623,  624,  625,  626,  627,  628,  629,  630,
      631,  632,  633,  634,  635,  636,  637,  638,  639,  640,
      641,  642,  643,  644,  645,  646,  647,  648,  649,  650,
      651,  652,  653,  654,  655,  656,  657,  658,  659,  660,
      661,  662,  663,  664,  665,  666,  667,  668,  669,  670,
      671,  672,  673,  674,  675,  676,  677,  678,  679,  680,
      681,  682,  683,  684,  685,  686,  687,  688,  689,  690,

      691,  692,  693,  694,  695,  696,  697,  698,  699,  700,
      701,  702,  703,  704,  705,  706,  707,  708,  709,  710,
      711,  712,  713,  714,  715,  716,  717,  718,  719,  720,
      721,  722,  723,  724,  725,  726,  727,  728,  729,  730,
      731,  732,  733,  734,  735,  736,  737,  738,  739,  740,
      741,  742,  743,  744,  745,  746,  747,  748,  749,  750,
      751,  752,  753,  754,  755,  756,  757,  758,  759,  760,
      761,  762,  763,  764,  765,  766,  767,  768,  769,  770,
      771,  772,  773,  774,  775,  776,  777,  778,  779,  780,
      781,  782,  783,  784,  785,  786,  787,  788,  789,  790,

      791,  792,  793,  794,  795,  796,  797,  798,  799,  800,
      801,  802,  803,  804,  805,  806,  807,  808,  809,  810,
      813,  814,  815,  816,  817,  818,  821,  822,  825,  830,
      838,  845,  860,  874,  881,  894,  900,  904,  908,  912,
      919,  920,  921,  922,  923,  927,  933
    } ;

/* The intent behind this definition is that it'll catch
 * any uses of REJECT which flex missed.
 */
#define REJECT reject_used_but_not_detected
#define yymore() (yyg->yy_more_flag = 1)
#define YY_MORE_ADJ yyg->yy_more_len
#define YY_RESTORE_YY_MORE_OFFSET
#line 1 "scanner.l"
/*
  +----------------------------------------------------------------------+
  | XHP                                                                  |
  +----------------------------------------------------------------------+
  | Copyright (c) 1998-2010 Zend Technologies Ltd. (http://www.zend.com) |
  | Copyright (c) 2009 - 2010 Facebook, Inc. (http://www.facebook.com)          |
  +----------------------------------------------------------------------+
  | This source file is subject to version 2.00 of the Zend license,     |
  | that is bundled with this package in the file LICENSE.ZEND, and is   |
  | available through the world-wide-web at the following url:           |
  | http://www.zend.com/license/2_00.txt.                                |
  | If you did not receive a copy of the Zend license and are unable to  |
  | obtain it through the world-wide-web, please send a note to          |
  | license@zend.com so we can mail you a copy immediately.              |
  +----------------------------------------------------------------------+
*/
#line 19 "scanner.l"
#include "xhp.hpp"
#include <string.h>
#define push_state(s) xhp_new_push_state(s, yyg)
#define pop_state() xhp_new_pop_state(yyg)
#define set_state(s) xhp_set_state(s, yyg)
#define last_curly_token() (yyextra->curly_stack.empty() ? 0 : yyextra->curly_stack.top())
#define last_token() yyextra->last_token

#define YY_USER_ACTION \
  if (yyextra->terminated) \
    return 0; \
  if (!yyg->yy_more_len) \
    yyextra->first_lineno = yyextra->lineno;
#define tok(t) \
  if (yyextra->has_doc_block) { \
    *yylval = yyextra->doc_block + code_rope(yytext, yyextra->first_lineno, yyextra->lineno - yyextra->first_lineno); \
    yyextra->has_doc_block = false; \
  } else { \
    *yylval = code_rope(yytext, yyextra->first_lineno, yyextra->lineno - yyextra->first_lineno); \
  } \
  return yy_token(t, yyg)
#ifdef DEBUG
  static void yy_log_token(int tok);
  #define tokt(t) *yylval = t; push_state(XHP_AFTER_ENT); yy_log_token(T_XHP_TEXT); return yyextra->last_token = T_XHP_TEXT;
#else
  #define tokt(t) *yylval = t; push_state(XHP_AFTER_ENT); return yyextra->last_token = T_XHP_TEXT;
#endif
#define YY_USER_INIT \
  if (yyextra->insert_token) { \
    yyg->yy_init = 0; \
    int ft = yyextra->insert_token; \
    yyextra->insert_token = 0; \
    return yy_token(ft, yyg); \
  }

using namespace std;

const char* yytokname(int tok);
static int yy_token(int tok, struct yyguts_t* yyg);
static void yy_scan_newlines(const char* text, struct yyguts_t* yyg);

static bool utf8ize(uint32_t v, char* buf /* [5] */) {
  if (v <= 0x7f) { // 0xxxxxxx
    buf[0] = v;
    buf[1] = 0;
  } else if (v <= 0x7ff) { // 110yyyxx 10xxxxxx
    buf[0] = 0xc0 | (v >> 6);
    buf[1] = 0x80 | (v & 0x3f);
    buf[2] = 0;
  } else if (v <= 0xffff) { // 1110yyyy 10yyyyxx 10xxxxxx
    buf[0] = 0xe0 | (v >> 12);
    buf[1] = 0x80 | ((v >> 6) & 0x3f);
    buf[2] = 0x80 | (v & 0x3f);
    buf[3] = 0;
  } else if (v <= 0x1fffff) { // 11110zzz 10zzyyyy 10yyyyxx 10xxxxxx
    buf[0] = 0xf0 | (v >> 18);
    buf[1] = 0x80 | ((v >> 12) & 0x3f);
    buf[2] = 0x80 | ((v >> 6) & 0x3f);
    buf[3] = 0x80 | (v & 0x3f);
    buf[4] = 0;
  } else {
    return false;
  }
  return true;
}

/* I think an interactive scanner is required because of the bison state 
* pushing we do. I'm putting an explicit interactive declaration here in case
* someone tries adding -CF or whatever to the make flags. */




















#line 6303 "scanner.lex.cpp"

#define INITIAL 0
#define PHP 1
#define PHP_COMMENT 2
#define PHP_EOL_COMMENT 3
#define PHP_DOC_COMMENT 4
#define PHP_HEREDOC_START 5
#define PHP_HEREDOC_NSTART 6
#define PHP_HEREDOC_NEWLINE 7
#define PHP_HEREDOC_DATA 8
#define PHP_NO_RESERVED_WORDS 9
#define PHP_NO_RESERVED_WORDS_PERSIST 10
#define XHP_LABEL 11
#define XHP_LABEL_WHITESPACE 12
#define XHP_ATTRS 13
#define XHP_ATTR_VAL 14
#define XHP_AFTER_ENT 15
#define XHP_CHILD 16
#define XHP_CHILD_START 17
#define XHP_INVALID_ENTITY 18
#define XHP_ATTR_TYPE_DECL 19
#define XHP_CHILDREN_DECL 20

#ifndef YY_NO_UNISTD_H
/* Special case for "unistd.h", since it is non-ANSI. We include it way
 * down here because we want the user's section 1 to have been scanned first.
 * The user has a chance to override it with an option.
 */
/* %if-c-only */
#include <unistd.h>
/* %endif */
/* %if-c++-only */
/* %endif */
#endif

#ifndef YY_EXTRA_TYPE
#define YY_EXTRA_TYPE void *
#endif

/* %if-c-only Reentrant structure and macros (non-C++). */
/* %if-reentrant */

/* Holds the entire state of the reentrant scanner. */
struct yyguts_t
    {

    /* User-defined. Not touched by flex. */
    YY_EXTRA_TYPE yyextra_r;

    /* The rest are the same as the globals declared in the non-reentrant scanner. */
    FILE *yyin_r, *yyout_r;
    size_t yy_buffer_stack_top; /**< index of top of stack. */
    size_t yy_buffer_stack_max; /**< capacity of stack. */
    YY_BUFFER_STATE * yy_buffer_stack; /**< Stack as an array. */
    char yy_hold_char;
    int yy_n_chars;
    int yyleng_r;
    char *yy_c_buf_p;
    int yy_init;
    int yy_start;
    int yy_did_buffer_switch_on_eof;
    int yy_start_stack_ptr;
    int yy_start_stack_depth;
    int *yy_start_stack;
    yy_state_type yy_last_accepting_state;
    char* yy_last_accepting_cpos;

    int yylineno_r;
    int yy_flex_debug_r;

    char *yytext_r;
    int yy_more_flag;
    int yy_more_len;

    YYSTYPE * yylval_r;

    }; /* end struct yyguts_t */

/* %if-c-only */

static int yy_init_globals (yyscan_t yyscanner );

/* %endif */

/* %if-reentrant */

    /* This must go here because YYSTYPE and YYLTYPE are included
     * from bison output in section 1.*/
    #    define yylval yyg->yylval_r
    
int xhplex_init (yyscan_t* scanner);

int xhplex_init_extra (YY_EXTRA_TYPE user_defined,yyscan_t* scanner);

/* %endif */

/* %endif End reentrant structures and macros. */

/* Accessor methods to globals.
   These are made visible to non-reentrant scanners for convenience. */

int xhplex_destroy (yyscan_t yyscanner );

int xhpget_debug (yyscan_t yyscanner );

void xhpset_debug (int debug_flag ,yyscan_t yyscanner );

YY_EXTRA_TYPE xhpget_extra (yyscan_t yyscanner );

void xhpset_extra (YY_EXTRA_TYPE user_defined ,yyscan_t yyscanner );

FILE *xhpget_in (yyscan_t yyscanner );

void xhpset_in  (FILE * in_str ,yyscan_t yyscanner );

FILE *xhpget_out (yyscan_t yyscanner );

void xhpset_out  (FILE * out_str ,yyscan_t yyscanner );

int xhpget_leng (yyscan_t yyscanner );

char *xhpget_text (yyscan_t yyscanner );

int xhpget_lineno (yyscan_t yyscanner );

void xhpset_lineno (int line_number ,yyscan_t yyscanner );

/* %if-bison-bridge */

YYSTYPE * xhpget_lval (yyscan_t yyscanner );

void xhpset_lval (YYSTYPE * yylval_param ,yyscan_t yyscanner );

/* %endif */

/* Macros after this point can all be overridden by user definitions in
 * section 1.
 */

#ifndef YY_SKIP_YYWRAP
#ifdef __cplusplus
extern "C" int xhpwrap (yyscan_t yyscanner );
#else
extern int xhpwrap (yyscan_t yyscanner );
#endif
#endif

/* %not-for-header */

    static void yyunput (int c,char *buf_ptr  ,yyscan_t yyscanner);
    
/* %ok-for-header */

/* %endif */

#ifndef yytext_ptr
static void yy_flex_strncpy (char *,yyconst char *,int ,yyscan_t yyscanner);
#endif

#ifdef YY_NEED_STRLEN
static int yy_flex_strlen (yyconst char * ,yyscan_t yyscanner);
#endif

#ifndef YY_NO_INPUT
/* %if-c-only Standard (non-C++) definition */
/* %not-for-header */

#ifdef __cplusplus
static int yyinput (yyscan_t yyscanner );
#else
static int input (yyscan_t yyscanner );
#endif
/* %ok-for-header */

/* %endif */
#endif

/* %if-c-only */

    static void yy_push_state (int new_state ,yyscan_t yyscanner);
    
    static void yy_pop_state (yyscan_t yyscanner );
    
    static int yy_top_state (yyscan_t yyscanner );
    
/* %endif */

/* Amount of stuff to slurp up with each read. */
#ifndef YY_READ_BUF_SIZE
#define YY_READ_BUF_SIZE 8192
#endif

/* Copy whatever the last rule matched to the standard output. */
#ifndef ECHO
/* %if-c-only Standard (non-C++) definition */
/* This used to be an fputs(), but since the string might contain NUL's,
 * we now use fwrite().
 */
#define ECHO fwrite( yytext, yyleng, 1, yyout )
/* %endif */
/* %if-c++-only C++ definition */
/* %endif */
#endif

/* Gets input and stuffs it into "buf".  number of characters read, or YY_NULL,
 * is returned in "result".
 */
#ifndef YY_INPUT
#define YY_INPUT(buf,result,max_size) \
/* %% [5.0] fread()/read() definition of YY_INPUT goes here unless we're doing C++ \ */\
	if ( YY_CURRENT_BUFFER_LVALUE->yy_is_interactive ) \
		{ \
		int c = '*'; \
		unsigned n; \
		for ( n = 0; n < max_size && \
			     (c = getc( yyin )) != EOF && c != '\n'; ++n ) \
			buf[n] = (char) c; \
		if ( c == '\n' ) \
			buf[n++] = (char) c; \
		if ( c == EOF && ferror( yyin ) ) \
			YY_FATAL_ERROR( "input in flex scanner failed" ); \
		result = n; \
		} \
	else \
		{ \
		errno=0; \
		while ( (result = fread(buf, 1, max_size, yyin))==0 && ferror(yyin)) \
			{ \
			if( errno != EINTR) \
				{ \
				YY_FATAL_ERROR( "input in flex scanner failed" ); \
				break; \
				} \
			errno=0; \
			clearerr(yyin); \
			} \
		}\
\
/* %if-c++-only C++ definition \ */\
/* %endif */

#endif

/* No semi-colon after return; correct usage is to write "yyterminate();" -
 * we don't want an extra ';' after the "return" because that will cause
 * some compilers to complain about unreachable statements.
 */
#ifndef yyterminate
#define yyterminate() return YY_NULL
#endif

/* Number of entries by which start-condition stack grows. */
#ifndef YY_START_STACK_INCR
#define YY_START_STACK_INCR 25
#endif

/* Report a fatal error. */
#ifndef YY_FATAL_ERROR
/* %if-c-only */
#define YY_FATAL_ERROR(msg) yy_fatal_error( msg , yyscanner)
/* %endif */
/* %if-c++-only */
/* %endif */
#endif

/* %if-tables-serialization structures and prototypes */
/* %not-for-header */

/* %ok-for-header */

/* %not-for-header */

/* %tables-yydmap generated elements */
/* %endif */
/* end tables serialization structures and prototypes */

/* %ok-for-header */

/* Default declaration of generated scanner - a define so the user can
 * easily add parameters.
 */
#ifndef YY_DECL
#define YY_DECL_IS_OURS 1
/* %if-c-only Standard (non-C++) definition */

extern int xhplex \
               (YYSTYPE * yylval_param ,yyscan_t yyscanner);

#define YY_DECL int xhplex \
               (YYSTYPE * yylval_param , yyscan_t yyscanner)
/* %endif */
/* %if-c++-only C++ definition */
/* %endif */
#endif /* !YY_DECL */

/* Code executed at the beginning of each rule, after yytext and yyleng
 * have been set up.
 */
#ifndef YY_USER_ACTION
#define YY_USER_ACTION
#endif

/* Code executed at the end of each rule. */
#ifndef YY_BREAK
#define YY_BREAK break;
#endif

/* %% [6.0] YY_RULE_SETUP definition goes here */
#define YY_RULE_SETUP \
	YY_USER_ACTION

/* %not-for-header */

/** The main scanner function which does all the work.
 */
YY_DECL
{
	register yy_state_type yy_current_state;
	register char *yy_cp, *yy_bp;
	register int yy_act;
    struct yyguts_t * yyg = (struct yyguts_t*)yyscanner;

/* %% [7.0] user's declarations go here */
#line 133 "scanner.l"


#line 6630 "scanner.lex.cpp"

    yylval = yylval_param;

	if ( !yyg->yy_init )
		{
		yyg->yy_init = 1;

#ifdef YY_USER_INIT
		YY_USER_INIT;
#endif

		if ( ! yyg->yy_start )
			yyg->yy_start = 1;	/* first start state */

		if ( ! yyin )
/* %if-c-only */
			yyin = stdin;
/* %endif */
/* %if-c++-only */
/* %endif */

		if ( ! yyout )
/* %if-c-only */
			yyout = stdout;
/* %endif */
/* %if-c++-only */
/* %endif */

		if ( ! YY_CURRENT_BUFFER ) {
			xhpensure_buffer_stack (yyscanner);
			YY_CURRENT_BUFFER_LVALUE =
				xhp_create_buffer(yyin,YY_BUF_SIZE ,yyscanner);
		}

		xhp_load_buffer_state(yyscanner );
		}

	while ( 1 )		/* loops until end-of-file is reached */
		{
/* %% [8.0] yymore()-related code goes here */
		yyg->yy_more_len = 0;
		if ( yyg->yy_more_flag )
			{
			yyg->yy_more_len = yyg->yy_c_buf_p - yyg->yytext_ptr;
			yyg->yy_more_flag = 0;
			}
		yy_cp = yyg->yy_c_buf_p;

		/* Support of yytext. */
		*yy_cp = yyg->yy_hold_char;

		/* yy_bp points to the position in yy_ch_buf of the start of
		 * the current run.
		 */
		yy_bp = yy_cp;

/* %% [9.0] code to set up and find next match goes here */
		yy_current_state = yyg->yy_start;
yy_match:
		do
			{
			register YY_CHAR yy_c = YY_SC_TO_UI(*yy_cp);
			if ( yy_accept[yy_current_state] )
				{
				yyg->yy_last_accepting_state = yy_current_state;
				yyg->yy_last_accepting_cpos = yy_cp;
				}
			while ( yy_chk[yy_base[yy_current_state] + yy_c] != yy_current_state )
				{
				yy_current_state = (int) yy_def[yy_current_state];
				}
			yy_current_state = yy_nxt[yy_base[yy_current_state] + (unsigned int) yy_c];
			++yy_cp;
			}
		while ( yy_base[yy_current_state] != 21550 );

yy_find_action:
/* %% [10.0] code to find the action number goes here */
		yy_act = yy_accept[yy_current_state];
		if ( yy_act == 0 )
			{ /* have to back up */
			yy_cp = yyg->yy_last_accepting_cpos;
			yy_current_state = yyg->yy_last_accepting_state;
			yy_act = yy_accept[yy_current_state];
			}

		YY_DO_BEFORE_ACTION;

/* %% [11.0] code for yylineno update goes here */

do_action:	/* This label is used only to access EOF actions. */

/* %% [12.0] debug code goes here */
		if ( yy_flex_debug )
			{
			if ( yy_act == 0 )
				fprintf( stderr, "--scanner backing up\n" );
			else if ( yy_act < 448 )
				fprintf( stderr, "--accepting rule at line %ld (\"%s\")\n",
				         (long)yy_rule_linenum[yy_act], yytext );
			else if ( yy_act == 448 )
				fprintf( stderr, "--accepting default rule (\"%s\")\n",
				         yytext );
			else if ( yy_act == 449 )
				fprintf( stderr, "--(end of buffer or a NUL)\n" );
			else
				fprintf( stderr, "--EOF (start condition %d)\n", YY_START );
			}

		switch ( yy_act )
	{ /* beginning of action switch */
/* %% [13.0] actions go here */
			case 0: /* must back up */
			/* undo the effects of YY_DO_BEFORE_ACTION */
			*yy_cp = yyg->yy_hold_char;
			yy_cp = yyg->yy_last_accepting_cpos;
			yy_current_state = yyg->yy_last_accepting_state;
			goto yy_find_action;

case 1:
YY_RULE_SETUP
#line 136 "scanner.l"
tok(T_XHP_BOOLEAN);
	YY_BREAK
case 2:
YY_RULE_SETUP
#line 137 "scanner.l"
tok(T_XHP_NUMBER);
	YY_BREAK
case 3:
YY_RULE_SETUP
#line 138 "scanner.l"
tok(T_XHP_FLOAT);
	YY_BREAK
case 4:
YY_RULE_SETUP
#line 139 "scanner.l"
tok(T_VAR);
	YY_BREAK
case 5:
YY_RULE_SETUP
#line 140 "scanner.l"
tok(T_XHP_ARRAY);
	YY_BREAK
case 6:
YY_RULE_SETUP
#line 141 "scanner.l"
tok(T_XHP_STRING);
	YY_BREAK
case 7:
YY_RULE_SETUP
#line 142 "scanner.l"
tok(T_XHP_ENUM);
	YY_BREAK
case 8:
YY_RULE_SETUP
#line 143 "scanner.l"
tok(T_XHP_REQUIRED);
	YY_BREAK
case 9:
YY_RULE_SETUP
#line 144 "scanner.l"
tok('(');
	YY_BREAK
case 10:
YY_RULE_SETUP
#line 145 "scanner.l"
tok(T_XHP_COLON);
	YY_BREAK

/* Open / close PHP + inline HTML */

case 11:
/* rule 11 can match eol */
YY_RULE_SETUP
#line 150 "scanner.l"
{
    yy_scan_newlines(yytext + 5, yyg);
    tok(T_OPEN_TAG);
  }
	YY_BREAK
case 12:
YY_RULE_SETUP
#line 154 "scanner.l"
{
    if (yyextra->short_tags) {
      tok(T_OPEN_TAG);
    } else {
      tok(T_INLINE_HTML);
    }
  }
	YY_BREAK
case 13:
YY_RULE_SETUP
#line 161 "scanner.l"
{
    if (yyextra->short_tags) {
      tok(T_OPEN_TAG_WITH_ECHO);
    } else {
      tok(T_INLINE_HTML);
    }
  }
	YY_BREAK
case 14:
YY_RULE_SETUP
#line 168 "scanner.l"
{
    if (yyextra->asp_tags) {
      tok(T_OPEN_TAG);
    } else {
      tok(T_INLINE_HTML);
    }
  }
	YY_BREAK
case 15:
YY_RULE_SETUP
#line 175 "scanner.l"
{
    if (yyextra->asp_tags) {
      tok(T_OPEN_TAG_WITH_ECHO);
    } else {
      tok(T_INLINE_HTML);
    }
  }
	YY_BREAK
case 16:
/* rule 16 can match eol */
YY_RULE_SETUP
#line 182 "scanner.l"
{
    yy_scan_newlines(yytext, yyg);
    tok(T_INLINE_HTML);
  }
	YY_BREAK


case 17:
/* rule 17 can match eol */
YY_RULE_SETUP
#line 188 "scanner.l"
{
    yy_scan_newlines(yytext + 2, yyg);
    tok(T_CLOSE_TAG);
  }
	YY_BREAK
case 18:
YY_RULE_SETUP
#line 192 "scanner.l"
{
    if (yyextra->asp_tags) {
      tok(T_CLOSE_TAG);
    } else {
      yyless(1);
      tok(yytext[0]);
    }
  }
	YY_BREAK

/* Comments and whitespace */

case 19:
YY_RULE_SETUP
#line 204 "scanner.l"
{
    push_state(PHP_EOL_COMMENT);
    yymore();
  }
	YY_BREAK
case 20:
/* rule 20 can match eol */
YY_RULE_SETUP
#line 208 "scanner.l"
{
    yy_scan_newlines(yytext + 3, yyg);
    push_state(PHP_DOC_COMMENT);
    yymore();
  }
	YY_BREAK
case 21:
YY_RULE_SETUP
#line 213 "scanner.l"
{
    push_state(PHP_COMMENT);
    yymore();
  }
	YY_BREAK
case 22:
/* rule 22 can match eol */
YY_RULE_SETUP
#line 217 "scanner.l"
yy_scan_newlines(yytext, yyg);
	YY_BREAK


case 23:
/* rule 23 can match eol */
YY_RULE_SETUP
#line 220 "scanner.l"
{
    ++yyextra->lineno;
    pop_state();
  }
	YY_BREAK
case 24:
YY_RULE_SETUP
#line 224 "scanner.l"
yymore();
	YY_BREAK
case 25:
YY_RULE_SETUP
#line 225 "scanner.l"
{
    yyless(yyleng - 2);
    pop_state();
  }
	YY_BREAK
case 26:
YY_RULE_SETUP
#line 229 "scanner.l"
yymore();
	YY_BREAK


case 27:
/* rule 27 can match eol */
YY_RULE_SETUP
#line 232 "scanner.l"
{
    ++yyextra->lineno;
    yymore();
  }
	YY_BREAK
case 28:
YY_RULE_SETUP
#line 236 "scanner.l"
yymore();
	YY_BREAK

case 29:
YY_RULE_SETUP
#line 238 "scanner.l"
{
  yyextra->doc_block = code_rope(yytext, yyextra->first_lineno, yyextra->lineno - yyextra->first_lineno);
  yyextra->has_doc_block = true;
  pop_state();
}
	YY_BREAK
case 30:
YY_RULE_SETUP
#line 243 "scanner.l"
pop_state();
	YY_BREAK
/* Reserved words */

case 31:
YY_RULE_SETUP
#line 247 "scanner.l"
tok(T_INCLUDE);
	YY_BREAK
case 32:
YY_RULE_SETUP
#line 248 "scanner.l"
tok(T_INCLUDE_ONCE);
	YY_BREAK
case 33:
YY_RULE_SETUP
#line 249 "scanner.l"
tok(T_EVAL);
	YY_BREAK
case 34:
YY_RULE_SETUP
#line 250 "scanner.l"
tok(T_REQUIRE);
	YY_BREAK
case 35:
YY_RULE_SETUP
#line 251 "scanner.l"
tok(T_REQUIRE_ONCE);
	YY_BREAK
case 36:
YY_RULE_SETUP
#line 252 "scanner.l"
tok(T_LOGICAL_OR);
	YY_BREAK
case 37:
YY_RULE_SETUP
#line 253 "scanner.l"
tok(T_LOGICAL_XOR);
	YY_BREAK
case 38:
YY_RULE_SETUP
#line 254 "scanner.l"
tok(T_LOGICAL_AND);
	YY_BREAK
case 39:
YY_RULE_SETUP
#line 255 "scanner.l"
tok(T_PRINT);
	YY_BREAK
case 40:
YY_RULE_SETUP
#line 256 "scanner.l"
tok(T_INSTANCEOF);
	YY_BREAK
case 41:
YY_RULE_SETUP
#line 257 "scanner.l"
tok(T_NEW);
	YY_BREAK
case 42:
YY_RULE_SETUP
#line 258 "scanner.l"
tok(T_CLONE);
	YY_BREAK
case 43:
YY_RULE_SETUP
#line 259 "scanner.l"
tok(T_EXIT);
	YY_BREAK
case 44:
YY_RULE_SETUP
#line 260 "scanner.l"
tok(T_IF);
	YY_BREAK
case 45:
YY_RULE_SETUP
#line 261 "scanner.l"
tok(T_ELSEIF);
	YY_BREAK
case 46:
YY_RULE_SETUP
#line 262 "scanner.l"
tok(T_ELSE);
	YY_BREAK
case 47:
YY_RULE_SETUP
#line 263 "scanner.l"
tok(T_ENDIF);
	YY_BREAK
case 48:
YY_RULE_SETUP
#line 264 "scanner.l"
tok(T_ECHO);
	YY_BREAK
case 49:
YY_RULE_SETUP
#line 265 "scanner.l"
tok(T_DO);
	YY_BREAK
case 50:
YY_RULE_SETUP
#line 266 "scanner.l"
tok(T_WHILE);
	YY_BREAK
case 51:
YY_RULE_SETUP
#line 267 "scanner.l"
tok(T_ENDWHILE);
	YY_BREAK
case 52:
YY_RULE_SETUP
#line 268 "scanner.l"
tok(T_FOR);
	YY_BREAK
case 53:
YY_RULE_SETUP
#line 269 "scanner.l"
tok(T_ENDFOR);
	YY_BREAK
case 54:
YY_RULE_SETUP
#line 270 "scanner.l"
tok(T_FOREACH);
	YY_BREAK
case 55:
YY_RULE_SETUP
#line 271 "scanner.l"
tok(T_ENDFOREACH);
	YY_BREAK
case 56:
YY_RULE_SETUP
#line 272 "scanner.l"
tok(T_DECLARE);
	YY_BREAK
case 57:
YY_RULE_SETUP
#line 273 "scanner.l"
tok(T_ENDDECLARE);
	YY_BREAK
case 58:
YY_RULE_SETUP
#line 274 "scanner.l"
tok(T_AS);
	YY_BREAK
case 59:
YY_RULE_SETUP
#line 275 "scanner.l"
tok(T_SWITCH);
	YY_BREAK
case 60:
YY_RULE_SETUP
#line 276 "scanner.l"
tok(T_ENDSWITCH);
	YY_BREAK
case 61:
YY_RULE_SETUP
#line 277 "scanner.l"
tok(T_CASE);
	YY_BREAK
case 62:
YY_RULE_SETUP
#line 278 "scanner.l"
tok(T_DEFAULT);
	YY_BREAK
case 63:
YY_RULE_SETUP
#line 279 "scanner.l"
tok(T_BREAK);
	YY_BREAK
case 64:
YY_RULE_SETUP
#line 280 "scanner.l"
tok(T_CONTINUE);
	YY_BREAK
case 65:
YY_RULE_SETUP
#line 281 "scanner.l"
tok(T_GOTO);
	YY_BREAK
case 66:
YY_RULE_SETUP
#line 282 "scanner.l"
tok(T_FUNCTION);
	YY_BREAK
case 67:
YY_RULE_SETUP
#line 283 "scanner.l"
tok(T_CONST);
	YY_BREAK
case 68:
YY_RULE_SETUP
#line 284 "scanner.l"
tok(T_RETURN);
	YY_BREAK
case 69:
YY_RULE_SETUP
#line 285 "scanner.l"
tok(T_TRY);
	YY_BREAK
case 70:
YY_RULE_SETUP
#line 286 "scanner.l"
tok(T_CATCH);
	YY_BREAK
case 71:
YY_RULE_SETUP
#line 287 "scanner.l"
tok(T_THROW);
	YY_BREAK
case 72:
YY_RULE_SETUP
#line 288 "scanner.l"
tok(T_USE);
	YY_BREAK
case 73:
YY_RULE_SETUP
#line 289 "scanner.l"
tok(T_GLOBAL);
	YY_BREAK
case 74:
YY_RULE_SETUP
#line 290 "scanner.l"
tok(T_STATIC);
	YY_BREAK
case 75:
YY_RULE_SETUP
#line 291 "scanner.l"
tok(T_ABSTRACT);
	YY_BREAK
case 76:
YY_RULE_SETUP
#line 292 "scanner.l"
tok(T_FINAL);
	YY_BREAK
case 77:
YY_RULE_SETUP
#line 293 "scanner.l"
tok(T_PRIVATE);
	YY_BREAK
case 78:
YY_RULE_SETUP
#line 294 "scanner.l"
tok(T_PROTECTED);
	YY_BREAK
case 79:
YY_RULE_SETUP
#line 295 "scanner.l"
tok(T_PUBLIC);
	YY_BREAK
case 80:
YY_RULE_SETUP
#line 296 "scanner.l"
tok(T_VAR);
	YY_BREAK
case 81:
YY_RULE_SETUP
#line 297 "scanner.l"
tok(T_UNSET);
	YY_BREAK
case 82:
YY_RULE_SETUP
#line 298 "scanner.l"
tok(T_ISSET);
	YY_BREAK
case 83:
YY_RULE_SETUP
#line 299 "scanner.l"
tok(T_EMPTY);
	YY_BREAK
case 84:
YY_RULE_SETUP
#line 300 "scanner.l"
tok(T_HALT_COMPILER);
	YY_BREAK
case 85:
YY_RULE_SETUP
#line 301 "scanner.l"
tok(T_CLASS);
	YY_BREAK
case 86:
YY_RULE_SETUP
#line 302 "scanner.l"
tok(T_INTERFACE);
	YY_BREAK
case 87:
YY_RULE_SETUP
#line 303 "scanner.l"
tok(T_EXTENDS);
	YY_BREAK
case 88:
YY_RULE_SETUP
#line 304 "scanner.l"
tok(T_IMPLEMENTS);
	YY_BREAK
case 89:
YY_RULE_SETUP
#line 305 "scanner.l"
tok(T_LIST);
	YY_BREAK
case 90:
YY_RULE_SETUP
#line 306 "scanner.l"
tok(T_ARRAY);
	YY_BREAK
case 91:
YY_RULE_SETUP
#line 307 "scanner.l"
tok(T_CLASS_C);
	YY_BREAK
case 92:
YY_RULE_SETUP
#line 308 "scanner.l"
tok(T_METHOD_C);
	YY_BREAK
case 93:
YY_RULE_SETUP
#line 309 "scanner.l"
tok(T_FUNC_C);
	YY_BREAK
case 94:
YY_RULE_SETUP
#line 310 "scanner.l"
tok(T_LINE);
	YY_BREAK
case 95:
YY_RULE_SETUP
#line 311 "scanner.l"
tok(T_FILE);
	YY_BREAK
case 96:
YY_RULE_SETUP
#line 312 "scanner.l"
tok(T_NAMESPACE);
	YY_BREAK
case 97:
YY_RULE_SETUP
#line 313 "scanner.l"
tok(T_NS_C);
	YY_BREAK
case 98:
YY_RULE_SETUP
#line 314 "scanner.l"
tok(T_DIR);
	YY_BREAK
case 99:
YY_RULE_SETUP
#line 315 "scanner.l"
{
    if ((last_token() == '{' || last_token() == '}' || last_token() == ';') &&
        (yyextra->expecting_xhp_class_statements)) {
      tok(T_XHP_ATTRIBUTE);
    } else {
      tok(T_STRING);
    }
  }
	YY_BREAK
case 100:
YY_RULE_SETUP
#line 323 "scanner.l"
{
    if ((last_token() == '{' || last_token() == '}' || last_token() == ';') &&
        (yyextra->expecting_xhp_class_statements)) {
      tok(T_XHP_CATEGORY);
    } else {
      tok(T_STRING);
    }
  }
	YY_BREAK
case 101:
YY_RULE_SETUP
#line 331 "scanner.l"
{
    if ((last_token() == '{' || last_token() == '}' || last_token() == ';') &&
        (yyextra->expecting_xhp_class_statements)) {
      tok(T_XHP_CHILDREN);
    } else {
      tok(T_STRING);
    }
  }
	YY_BREAK

/* Operators */

case 102:
YY_RULE_SETUP
#line 343 "scanner.l"
tok(T_PLUS_EQUAL);
	YY_BREAK
case 103:
YY_RULE_SETUP
#line 344 "scanner.l"
tok(T_MINUS_EQUAL);
	YY_BREAK
case 104:
YY_RULE_SETUP
#line 345 "scanner.l"
tok(T_MUL_EQUAL);
	YY_BREAK
case 105:
YY_RULE_SETUP
#line 346 "scanner.l"
tok(T_DIV_EQUAL);
	YY_BREAK
case 106:
YY_RULE_SETUP
#line 347 "scanner.l"
tok(T_CONCAT_EQUAL);
	YY_BREAK
case 107:
YY_RULE_SETUP
#line 348 "scanner.l"
tok(T_MOD_EQUAL);
	YY_BREAK
case 108:
YY_RULE_SETUP
#line 349 "scanner.l"
tok(T_AND_EQUAL);
	YY_BREAK
case 109:
YY_RULE_SETUP
#line 350 "scanner.l"
tok(T_OR_EQUAL);
	YY_BREAK
case 110:
YY_RULE_SETUP
#line 351 "scanner.l"
tok(T_XOR_EQUAL);
	YY_BREAK
case 111:
YY_RULE_SETUP
#line 352 "scanner.l"
tok(T_SL_EQUAL);
	YY_BREAK
case 112:
YY_RULE_SETUP
#line 353 "scanner.l"
tok(T_SR_EQUAL);
	YY_BREAK
case 113:
YY_RULE_SETUP
#line 354 "scanner.l"
tok(T_BOOLEAN_OR);
	YY_BREAK
case 114:
YY_RULE_SETUP
#line 355 "scanner.l"
tok(T_BOOLEAN_AND);
	YY_BREAK
case 115:
YY_RULE_SETUP
#line 356 "scanner.l"
tok(T_IS_EQUAL);
	YY_BREAK
case 116:
YY_RULE_SETUP
#line 357 "scanner.l"
tok(T_IS_NOT_EQUAL);
	YY_BREAK
case 117:
YY_RULE_SETUP
#line 358 "scanner.l"
tok(T_IS_IDENTICAL);
	YY_BREAK
case 118:
YY_RULE_SETUP
#line 359 "scanner.l"
tok(T_IS_NOT_IDENTICAL);
	YY_BREAK
case 119:
YY_RULE_SETUP
#line 360 "scanner.l"
tok(T_IS_SMALLER_OR_EQUAL);
	YY_BREAK
case 120:
YY_RULE_SETUP
#line 361 "scanner.l"
tok(T_IS_GREATER_OR_EQUAL);
	YY_BREAK
case 121:
YY_RULE_SETUP
#line 362 "scanner.l"
tok(T_SL);
	YY_BREAK
case 122:
YY_RULE_SETUP
#line 363 "scanner.l"
tok(T_SR);
	YY_BREAK
case 123:
YY_RULE_SETUP
#line 364 "scanner.l"
tok(T_INC);
	YY_BREAK
case 124:
YY_RULE_SETUP
#line 365 "scanner.l"
tok(T_DEC);
	YY_BREAK
case 125:
YY_RULE_SETUP
#line 366 "scanner.l"
tok(T_OBJECT_OPERATOR);
	YY_BREAK
case 126:
YY_RULE_SETUP
#line 367 "scanner.l"
tok(T_DOUBLE_ARROW);
	YY_BREAK
case 127:
YY_RULE_SETUP
#line 368 "scanner.l"
tok(T_PAAMAYIM_NEKUDOTAYIM);
	YY_BREAK
case 128:
YY_RULE_SETUP
#line 369 "scanner.l"
tok(T_NS_SEPARATOR);
	YY_BREAK
case 129:
YY_RULE_SETUP
#line 370 "scanner.l"
{
    switch (yyextra->last_token) {
      case ',': case '=': case '|': case '^': case '&': case '<': case '>':
      case '+': case '-': case '%': case '!': case '~': case '[': case '(':
      case '{': case '.':
      case T_LOGICAL_OR: case T_LOGICAL_XOR: case T_LOGICAL_AND:
      case T_PLUS_EQUAL: case T_MINUS_EQUAL: case T_MUL_EQUAL:
      case T_DIV_EQUAL: case T_CONCAT_EQUAL: case T_MOD_EQUAL:
      case T_AND_EQUAL: case T_OR_EQUAL: case T_XOR_EQUAL:
      case T_SL_EQUAL: case T_SR_EQUAL: case T_BOOLEAN_OR:
      case T_BOOLEAN_AND: case T_IS_EQUAL: case T_IS_NOT_EQUAL:
      case T_IS_IDENTICAL: case T_IS_NOT_IDENTICAL: case T_IS_SMALLER_OR_EQUAL:
      case T_IS_GREATER_OR_EQUAL: case T_ECHO: case T_RETURN:
      case T_EXTENDS: case T_INSTANCEOF: case T_DOUBLE_ARROW:
      case T_XHP_ATTRIBUTE:
        tok(T_XHP_COLON);
        break;
      default:
        tok(':');
        break;
    }
  }
	YY_BREAK

/* Casts */

case 130:
YY_RULE_SETUP
#line 396 "scanner.l"
tok(T_INT_CAST);
	YY_BREAK
case 131:
YY_RULE_SETUP
#line 397 "scanner.l"
tok(T_DOUBLE_CAST);
	YY_BREAK
case 132:
YY_RULE_SETUP
#line 398 "scanner.l"
tok(T_STRING_CAST);
	YY_BREAK
case 133:
YY_RULE_SETUP
#line 399 "scanner.l"
tok(T_UNICODE_CAST);
	YY_BREAK
case 134:
YY_RULE_SETUP
#line 400 "scanner.l"
tok(T_BINARY_CAST);
	YY_BREAK
case 135:
YY_RULE_SETUP
#line 401 "scanner.l"
tok(T_ARRAY_CAST);
	YY_BREAK
case 136:
YY_RULE_SETUP
#line 402 "scanner.l"
tok(T_OBJECT_CAST);
	YY_BREAK
case 137:
YY_RULE_SETUP
#line 403 "scanner.l"
tok(T_BOOL_CAST);
	YY_BREAK
case 138:
YY_RULE_SETUP
#line 404 "scanner.l"
tok(T_UNSET_CAST);
	YY_BREAK

/* Scalars (parsing these doesn't really matter since we just pass them through literally) */

case 139:
YY_RULE_SETUP
#line 409 "scanner.l"
tok(T_LNUMBER);
	YY_BREAK
case 140:
YY_RULE_SETUP
#line 410 "scanner.l"
tok(T_DNUMBER);
	YY_BREAK
case 141:
YY_RULE_SETUP
#line 411 "scanner.l"
tok(T_STRING);
	YY_BREAK
case 142:
YY_RULE_SETUP
#line 412 "scanner.l"
tok(T_VARIABLE);
	YY_BREAK
case 143:
/* rule 143 can match eol */
YY_RULE_SETUP
#line 413 "scanner.l"
{
    yy_scan_newlines(yytext, yyg);
    tok(T_CONSTANT_ENCAPSED_STRING);
  }
	YY_BREAK
case 144:
/* rule 144 can match eol */
YY_RULE_SETUP
#line 417 "scanner.l"
{
    yy_scan_newlines(yytext, yyg);
    tok(T_BACKTICKS_EXPR);
  }
	YY_BREAK

/* (HERE|NOW)DOC's */
case 145:
YY_RULE_SETUP
#line 424 "scanner.l"
{
  push_state(PHP_HEREDOC_START);
  yyextra->heredoc_yyleng = yyleng;
  yymore();
}
	YY_BREAK

case 146:
YY_RULE_SETUP
#line 430 "scanner.l"
{
    // Create a new string for the heredoc label. Since we're using yymore above
    // yytext will actually start at the "<<<" and not the label. Use of
    // heredoc_yyleng jumps past that. Then we add 1 to get past the " or '. The
    // match is similar to calculate length.
    yyextra->heredoc_label = string(yytext + yyextra->heredoc_yyleng + 1, yyleng - yyextra->heredoc_yyleng - 2);
    set_state(PHP_HEREDOC_NSTART);
    yyextra->heredoc_yyleng = yyleng;
    yymore();
  }
	YY_BREAK
case 147:
YY_RULE_SETUP
#line 440 "scanner.l"
{
    yyextra->heredoc_label = string(yytext + yyextra->heredoc_yyleng);
    set_state(PHP_HEREDOC_NSTART);
    yyextra->heredoc_yyleng = yyleng;
    yymore();
  }
	YY_BREAK

case 148:
/* rule 148 can match eol */
YY_RULE_SETUP
#line 447 "scanner.l"
{
  ++yyextra->lineno;
  yyextra->heredoc_data = yytext + yyleng;
  set_state(PHP_HEREDOC_DATA);
  yymore();
}
	YY_BREAK

case 149:
/* rule 149 can match eol */
YY_RULE_SETUP
#line 454 "scanner.l"
{
    ++yyextra->lineno;
    set_state(PHP_HEREDOC_NEWLINE);
    yyextra->heredoc_yyleng = yyleng;
    yymore();
  }
	YY_BREAK


case 150:
/* rule 150 can match eol */
YY_RULE_SETUP
#line 462 "scanner.l"
{
    if (strncmp(yyextra->heredoc_label.c_str(), yytext + yyextra->heredoc_yyleng, yyextra->heredoc_label.size()) == 0) {
      switch (yytext[yyextra->heredoc_yyleng + yyextra->heredoc_label.size()]) {
        case ';': case '\n': case '\r':
          yyless(yyleng - (yyleng - yyextra->heredoc_yyleng - yyextra->heredoc_label.size()));
          pop_state();
          tok(T_HEREDOC);
      }
    }
    ++yyextra->lineno;
    yyextra->heredoc_yyleng = yyleng;
    yymore();
  }
	YY_BREAK
case 151:
YY_RULE_SETUP
#line 475 "scanner.l"
{
    set_state(PHP_HEREDOC_DATA);
    yyextra->heredoc_yyleng = yyleng;
    yymore();
  }
	YY_BREAK
case 152:
/* rule 152 can match eol */
YY_RULE_SETUP
#line 480 "scanner.l"
{
    ++yyextra->lineno;
    yyextra->heredoc_yyleng = yyleng;
    yymore();
  }
	YY_BREAK

/* XHP */

case 153:
/* rule 153 can match eol */
YY_RULE_SETUP
#line 489 "scanner.l"
yy_scan_newlines(yytext, yyg);
	YY_BREAK


case 154:
YY_RULE_SETUP
#line 492 "scanner.l"
tok(T_XHP_COLON);
	YY_BREAK
case 155:
YY_RULE_SETUP
#line 493 "scanner.l"
tok(T_XHP_HYPHEN);
	YY_BREAK
case 156:
YY_RULE_SETUP
#line 494 "scanner.l"
{
    pop_state();

    // Hack: Please don't expect this to work: $foo = <a href={Thing::if} />;
    // PHP will let you use reserved words for member variables and methods, but
    // they are verboten in XHP classes now.
    //
    // We don't use tok() because that pushes PHP_NO_RESERVED_WORDS, which the
    // scanner expects to pop at some point, but XHP_LABEL (in parser.y) will pop
    // sooner and then you're left with an imbalanced tag stack and that's when
    // the fun stops.
  *yylval = code_rope(yytext, yyextra->first_lineno, yyextra->lineno - yyextra->first_lineno);
#ifdef DEBUG
  yy_log_token(T_PAAMAYIM_NEKUDOTAYIM);
#endif
    return T_PAAMAYIM_NEKUDOTAYIM;
  }
	YY_BREAK
case 157:
YY_RULE_SETUP
#line 511 "scanner.l"
{
    pop_state();
    tok(T_DEC);
  }
	YY_BREAK
case 158:
/* rule 158 can match eol */
YY_RULE_SETUP
#line 515 "scanner.l"
{
    yy_scan_newlines(yytext, yyg);
    pop_state();
    tok(T_XHP_WHITESPACE);
  }
	YY_BREAK
case 159:
YY_RULE_SETUP
#line 520 "scanner.l"
tok(T_STRING);
	YY_BREAK
case 160:
YY_RULE_SETUP
#line 521 "scanner.l"
{
    pop_state();
    tok(yytext[0]);
  }
	YY_BREAK


case 161:
YY_RULE_SETUP
#line 528 "scanner.l"
tok(yytext[0]);
	YY_BREAK
case 162:
/* rule 162 can match eol */
YY_RULE_SETUP
#line 529 "scanner.l"
yy_scan_newlines(yytext, yyg);
	YY_BREAK
case 163:
YY_RULE_SETUP
#line 530 "scanner.l"
tok(T_STRING);
	YY_BREAK


case 164:
/* rule 164 can match eol */
YY_RULE_SETUP
#line 534 "scanner.l"
tok(T_XHP_TEXT);
	YY_BREAK
case 165:
YY_RULE_SETUP
#line 535 "scanner.l"
{
    pop_state();
    tok('"');
  }
	YY_BREAK


case 166:
/* rule 166 can match eol */
YY_RULE_SETUP
#line 542 "scanner.l"
{
    /* ignore whitespace at the start */
    yy_scan_newlines(yytext, yyg);
    unput(' ');
    set_state(XHP_CHILD);
  }
	YY_BREAK
case 167:
YY_RULE_SETUP
#line 548 "scanner.l"
{
    yyless(0);
    set_state(XHP_CHILD);
  }
	YY_BREAK


/* xml entities */
case 168:
YY_RULE_SETUP
#line 556 "scanner.l"
tokt("\"");
	YY_BREAK
case 169:
YY_RULE_SETUP
#line 557 "scanner.l"
tokt("&");
	YY_BREAK
case 170:
YY_RULE_SETUP
#line 558 "scanner.l"
tokt("\\'");
	YY_BREAK
case 171:
YY_RULE_SETUP
#line 559 "scanner.l"
tokt("<")
	YY_BREAK
case 172:
YY_RULE_SETUP
#line 560 "scanner.l"
tokt(">");
	YY_BREAK
/* html entities */
case 173:
YY_RULE_SETUP
#line 563 "scanner.l"
tokt("\u00A0");
	YY_BREAK
case 174:
YY_RULE_SETUP
#line 564 "scanner.l"
tokt("\u00A1");
	YY_BREAK
case 175:
YY_RULE_SETUP
#line 565 "scanner.l"
tokt("\u00A2");
	YY_BREAK
case 176:
YY_RULE_SETUP
#line 566 "scanner.l"
tokt("\u00A3");
	YY_BREAK
case 177:
YY_RULE_SETUP
#line 567 "scanner.l"
tokt("\u00A4");
	YY_BREAK
case 178:
YY_RULE_SETUP
#line 568 "scanner.l"
tokt("\u00A5");
	YY_BREAK
case 179:
YY_RULE_SETUP
#line 569 "scanner.l"
tokt("\u00A6");
	YY_BREAK
case 180:
YY_RULE_SETUP
#line 570 "scanner.l"
tokt("\u00A7");
	YY_BREAK
case 181:
YY_RULE_SETUP
#line 571 "scanner.l"
tokt("\u00A8");
	YY_BREAK
case 182:
YY_RULE_SETUP
#line 572 "scanner.l"
tokt("\u00A9");
	YY_BREAK
case 183:
YY_RULE_SETUP
#line 573 "scanner.l"
tokt("\u00AA");
	YY_BREAK
case 184:
YY_RULE_SETUP
#line 574 "scanner.l"
tokt("\u00AB");
	YY_BREAK
case 185:
YY_RULE_SETUP
#line 575 "scanner.l"
tokt("\u00AC");
	YY_BREAK
case 186:
YY_RULE_SETUP
#line 576 "scanner.l"
tokt("\u00AD");
	YY_BREAK
case 187:
YY_RULE_SETUP
#line 577 "scanner.l"
tokt("\u00AE");
	YY_BREAK
case 188:
YY_RULE_SETUP
#line 578 "scanner.l"
tokt("\u00AF");
	YY_BREAK
case 189:
YY_RULE_SETUP
#line 579 "scanner.l"
tokt("\u00B0");
	YY_BREAK
case 190:
YY_RULE_SETUP
#line 580 "scanner.l"
tokt("\u00B1");
	YY_BREAK
case 191:
YY_RULE_SETUP
#line 581 "scanner.l"
tokt("\u00B2");
	YY_BREAK
case 192:
YY_RULE_SETUP
#line 582 "scanner.l"
tokt("\u00B3");
	YY_BREAK
case 193:
YY_RULE_SETUP
#line 583 "scanner.l"
tokt("\u00B4");
	YY_BREAK
case 194:
YY_RULE_SETUP
#line 584 "scanner.l"
tokt("\u00B5");
	YY_BREAK
case 195:
YY_RULE_SETUP
#line 585 "scanner.l"
tokt("\u00B6");
	YY_BREAK
case 196:
YY_RULE_SETUP
#line 586 "scanner.l"
tokt("\u00B7");
	YY_BREAK
case 197:
YY_RULE_SETUP
#line 587 "scanner.l"
tokt("\u00B8");
	YY_BREAK
case 198:
YY_RULE_SETUP
#line 588 "scanner.l"
tokt("\u00B9");
	YY_BREAK
case 199:
YY_RULE_SETUP
#line 589 "scanner.l"
tokt("\u00BA");
	YY_BREAK
case 200:
YY_RULE_SETUP
#line 590 "scanner.l"
tokt("\u00BB");
	YY_BREAK
case 201:
YY_RULE_SETUP
#line 591 "scanner.l"
tokt("\u00BC");
	YY_BREAK
case 202:
YY_RULE_SETUP
#line 592 "scanner.l"
tokt("\u00BD");
	YY_BREAK
case 203:
YY_RULE_SETUP
#line 593 "scanner.l"
tokt("\u00BE");
	YY_BREAK
case 204:
YY_RULE_SETUP
#line 594 "scanner.l"
tokt("\u00BF");
	YY_BREAK
case 205:
YY_RULE_SETUP
#line 595 "scanner.l"
tokt("\u00C0");
	YY_BREAK
case 206:
YY_RULE_SETUP
#line 596 "scanner.l"
tokt("\u00C1");
	YY_BREAK
case 207:
YY_RULE_SETUP
#line 597 "scanner.l"
tokt("\u00C2");
	YY_BREAK
case 208:
YY_RULE_SETUP
#line 598 "scanner.l"
tokt("\u00C3");
	YY_BREAK
case 209:
YY_RULE_SETUP
#line 599 "scanner.l"
tokt("\u00C4");
	YY_BREAK
case 210:
YY_RULE_SETUP
#line 600 "scanner.l"
tokt("\u00C5");
	YY_BREAK
case 211:
YY_RULE_SETUP
#line 601 "scanner.l"
tokt("\u00C6");
	YY_BREAK
case 212:
YY_RULE_SETUP
#line 602 "scanner.l"
tokt("\u00C7");
	YY_BREAK
case 213:
YY_RULE_SETUP
#line 603 "scanner.l"
tokt("\u00C8");
	YY_BREAK
case 214:
YY_RULE_SETUP
#line 604 "scanner.l"
tokt("\u00C9");
	YY_BREAK
case 215:
YY_RULE_SETUP
#line 605 "scanner.l"
tokt("\u00CA");
	YY_BREAK
case 216:
YY_RULE_SETUP
#line 606 "scanner.l"
tokt("\u00CB");
	YY_BREAK
case 217:
YY_RULE_SETUP
#line 607 "scanner.l"
tokt("\u00CC");
	YY_BREAK
case 218:
YY_RULE_SETUP
#line 608 "scanner.l"
tokt("\u00CD");
	YY_BREAK
case 219:
YY_RULE_SETUP
#line 609 "scanner.l"
tokt("\u00CE");
	YY_BREAK
case 220:
YY_RULE_SETUP
#line 610 "scanner.l"
tokt("\u00CF");
	YY_BREAK
case 221:
YY_RULE_SETUP
#line 611 "scanner.l"
tokt("\u00D0");
	YY_BREAK
case 222:
YY_RULE_SETUP
#line 612 "scanner.l"
tokt("\u00D1");
	YY_BREAK
case 223:
YY_RULE_SETUP
#line 613 "scanner.l"
tokt("\u00D2");
	YY_BREAK
case 224:
YY_RULE_SETUP
#line 614 "scanner.l"
tokt("\u00D3");
	YY_BREAK
case 225:
YY_RULE_SETUP
#line 615 "scanner.l"
tokt("\u00D4");
	YY_BREAK
case 226:
YY_RULE_SETUP
#line 616 "scanner.l"
tokt("\u00D5");
	YY_BREAK
case 227:
YY_RULE_SETUP
#line 617 "scanner.l"
tokt("\u00D6");
	YY_BREAK
case 228:
YY_RULE_SETUP
#line 618 "scanner.l"
tokt("\u00D7");
	YY_BREAK
case 229:
YY_RULE_SETUP
#line 619 "scanner.l"
tokt("\u00D8");
	YY_BREAK
case 230:
YY_RULE_SETUP
#line 620 "scanner.l"
tokt("\u00D9");
	YY_BREAK
case 231:
YY_RULE_SETUP
#line 621 "scanner.l"
tokt("\u00DA");
	YY_BREAK
case 232:
YY_RULE_SETUP
#line 622 "scanner.l"
tokt("\u00DB");
	YY_BREAK
case 233:
YY_RULE_SETUP
#line 623 "scanner.l"
tokt("\u00DC");
	YY_BREAK
case 234:
YY_RULE_SETUP
#line 624 "scanner.l"
tokt("\u00DD");
	YY_BREAK
case 235:
YY_RULE_SETUP
#line 625 "scanner.l"
tokt("\u00DE");
	YY_BREAK
case 236:
YY_RULE_SETUP
#line 626 "scanner.l"
tokt("\u00DF");
	YY_BREAK
case 237:
YY_RULE_SETUP
#line 627 "scanner.l"
tokt("\u00E0");
	YY_BREAK
case 238:
YY_RULE_SETUP
#line 628 "scanner.l"
tokt("\u00E1");
	YY_BREAK
case 239:
YY_RULE_SETUP
#line 629 "scanner.l"
tokt("\u00E2");
	YY_BREAK
case 240:
YY_RULE_SETUP
#line 630 "scanner.l"
tokt("\u00E3");
	YY_BREAK
case 241:
YY_RULE_SETUP
#line 631 "scanner.l"
tokt("\u00E4");
	YY_BREAK
case 242:
YY_RULE_SETUP
#line 632 "scanner.l"
tokt("\u00E5");
	YY_BREAK
case 243:
YY_RULE_SETUP
#line 633 "scanner.l"
tokt("\u00E6");
	YY_BREAK
case 244:
YY_RULE_SETUP
#line 634 "scanner.l"
tokt("\u00E7");
	YY_BREAK
case 245:
YY_RULE_SETUP
#line 635 "scanner.l"
tokt("\u00E8");
	YY_BREAK
case 246:
YY_RULE_SETUP
#line 636 "scanner.l"
tokt("\u00E9");
	YY_BREAK
case 247:
YY_RULE_SETUP
#line 637 "scanner.l"
tokt("\u00EA");
	YY_BREAK
case 248:
YY_RULE_SETUP
#line 638 "scanner.l"
tokt("\u00EB");
	YY_BREAK
case 249:
YY_RULE_SETUP
#line 639 "scanner.l"
tokt("\u00EC");
	YY_BREAK
case 250:
YY_RULE_SETUP
#line 640 "scanner.l"
tokt("\u00ED");
	YY_BREAK
case 251:
YY_RULE_SETUP
#line 641 "scanner.l"
tokt("\u00EE");
	YY_BREAK
case 252:
YY_RULE_SETUP
#line 642 "scanner.l"
tokt("\u00EF");
	YY_BREAK
case 253:
YY_RULE_SETUP
#line 643 "scanner.l"
tokt("\u00F0");
	YY_BREAK
case 254:
YY_RULE_SETUP
#line 644 "scanner.l"
tokt("\u00F1");
	YY_BREAK
case 255:
YY_RULE_SETUP
#line 645 "scanner.l"
tokt("\u00F2");
	YY_BREAK
case 256:
YY_RULE_SETUP
#line 646 "scanner.l"
tokt("\u00F3");
	YY_BREAK
case 257:
YY_RULE_SETUP
#line 647 "scanner.l"
tokt("\u00F4");
	YY_BREAK
case 258:
YY_RULE_SETUP
#line 648 "scanner.l"
tokt("\u00F5");
	YY_BREAK
case 259:
YY_RULE_SETUP
#line 649 "scanner.l"
tokt("\u00F6");
	YY_BREAK
case 260:
YY_RULE_SETUP
#line 650 "scanner.l"
tokt("\u00F7");
	YY_BREAK
case 261:
YY_RULE_SETUP
#line 651 "scanner.l"
tokt("\u00F8");
	YY_BREAK
case 262:
YY_RULE_SETUP
#line 652 "scanner.l"
tokt("\u00F9");
	YY_BREAK
case 263:
YY_RULE_SETUP
#line 653 "scanner.l"
tokt("\u00FA");
	YY_BREAK
case 264:
YY_RULE_SETUP
#line 654 "scanner.l"
tokt("\u00FB");
	YY_BREAK
case 265:
YY_RULE_SETUP
#line 655 "scanner.l"
tokt("\u00FC");
	YY_BREAK
case 266:
YY_RULE_SETUP
#line 656 "scanner.l"
tokt("\u00FD");
	YY_BREAK
case 267:
YY_RULE_SETUP
#line 657 "scanner.l"
tokt("\u00FE");
	YY_BREAK
case 268:
YY_RULE_SETUP
#line 658 "scanner.l"
tokt("\u00FF");
	YY_BREAK
case 269:
YY_RULE_SETUP
#line 659 "scanner.l"
tokt("\u0152");
	YY_BREAK
case 270:
YY_RULE_SETUP
#line 660 "scanner.l"
tokt("\u0153");
	YY_BREAK
case 271:
YY_RULE_SETUP
#line 661 "scanner.l"
tokt("\u0160");
	YY_BREAK
case 272:
YY_RULE_SETUP
#line 662 "scanner.l"
tokt("\u0161");
	YY_BREAK
case 273:
YY_RULE_SETUP
#line 663 "scanner.l"
tokt("\u0178");
	YY_BREAK
case 274:
YY_RULE_SETUP
#line 664 "scanner.l"
tokt("\u0192");
	YY_BREAK
case 275:
YY_RULE_SETUP
#line 665 "scanner.l"
tokt("\u02C6");
	YY_BREAK
case 276:
YY_RULE_SETUP
#line 666 "scanner.l"
tokt("\u02DC");
	YY_BREAK
case 277:
YY_RULE_SETUP
#line 667 "scanner.l"
tokt("\u0391");
	YY_BREAK
case 278:
YY_RULE_SETUP
#line 668 "scanner.l"
tokt("\u0392");
	YY_BREAK
case 279:
YY_RULE_SETUP
#line 669 "scanner.l"
tokt("\u0393");
	YY_BREAK
case 280:
YY_RULE_SETUP
#line 670 "scanner.l"
tokt("\u0394");
	YY_BREAK
case 281:
YY_RULE_SETUP
#line 671 "scanner.l"
tokt("\u0395");
	YY_BREAK
case 282:
YY_RULE_SETUP
#line 672 "scanner.l"
tokt("\u0396");
	YY_BREAK
case 283:
YY_RULE_SETUP
#line 673 "scanner.l"
tokt("\u0397");
	YY_BREAK
case 284:
YY_RULE_SETUP
#line 674 "scanner.l"
tokt("\u0398");
	YY_BREAK
case 285:
YY_RULE_SETUP
#line 675 "scanner.l"
tokt("\u0399");
	YY_BREAK
case 286:
YY_RULE_SETUP
#line 676 "scanner.l"
tokt("\u039A");
	YY_BREAK
case 287:
YY_RULE_SETUP
#line 677 "scanner.l"
tokt("\u039B");
	YY_BREAK
case 288:
YY_RULE_SETUP
#line 678 "scanner.l"
tokt("\u039C");
	YY_BREAK
case 289:
YY_RULE_SETUP
#line 679 "scanner.l"
tokt("\u039D");
	YY_BREAK
case 290:
YY_RULE_SETUP
#line 680 "scanner.l"
tokt("\u039E");
	YY_BREAK
case 291:
YY_RULE_SETUP
#line 681 "scanner.l"
tokt("\u039F");
	YY_BREAK
case 292:
YY_RULE_SETUP
#line 682 "scanner.l"
tokt("\u03A0");
	YY_BREAK
case 293:
YY_RULE_SETUP
#line 683 "scanner.l"
tokt("\u03A1");
	YY_BREAK
case 294:
YY_RULE_SETUP
#line 684 "scanner.l"
tokt("\u03A3");
	YY_BREAK
case 295:
YY_RULE_SETUP
#line 685 "scanner.l"
tokt("\u03A4");
	YY_BREAK
case 296:
YY_RULE_SETUP
#line 686 "scanner.l"
tokt("\u03A5");
	YY_BREAK
case 297:
YY_RULE_SETUP
#line 687 "scanner.l"
tokt("\u03A6");
	YY_BREAK
case 298:
YY_RULE_SETUP
#line 688 "scanner.l"
tokt("\u03A7");
	YY_BREAK
case 299:
YY_RULE_SETUP
#line 689 "scanner.l"
tokt("\u03A8");
	YY_BREAK
case 300:
YY_RULE_SETUP
#line 690 "scanner.l"
tokt("\u03A9");
	YY_BREAK
case 301:
YY_RULE_SETUP
#line 691 "scanner.l"
tokt("\u03B1");
	YY_BREAK
case 302:
YY_RULE_SETUP
#line 692 "scanner.l"
tokt("\u03B2");
	YY_BREAK
case 303:
YY_RULE_SETUP
#line 693 "scanner.l"
tokt("\u03B3");
	YY_BREAK
case 304:
YY_RULE_SETUP
#line 694 "scanner.l"
tokt("\u03B4");
	YY_BREAK
case 305:
YY_RULE_SETUP
#line 695 "scanner.l"
tokt("\u03B5");
	YY_BREAK
case 306:
YY_RULE_SETUP
#line 696 "scanner.l"
tokt("\u03B6");
	YY_BREAK
case 307:
YY_RULE_SETUP
#line 697 "scanner.l"
tokt("\u03B7");
	YY_BREAK
case 308:
YY_RULE_SETUP
#line 698 "scanner.l"
tokt("\u03B8");
	YY_BREAK
case 309:
YY_RULE_SETUP
#line 699 "scanner.l"
tokt("\u03B9");
	YY_BREAK
case 310:
YY_RULE_SETUP
#line 700 "scanner.l"
tokt("\u03BA");
	YY_BREAK
case 311:
YY_RULE_SETUP
#line 701 "scanner.l"
tokt("\u03BB");
	YY_BREAK
case 312:
YY_RULE_SETUP
#line 702 "scanner.l"
tokt("\u03BC");
	YY_BREAK
case 313:
YY_RULE_SETUP
#line 703 "scanner.l"
tokt("\u03BD");
	YY_BREAK
case 314:
YY_RULE_SETUP
#line 704 "scanner.l"
tokt("\u03BE");
	YY_BREAK
case 315:
YY_RULE_SETUP
#line 705 "scanner.l"
tokt("\u03BF");
	YY_BREAK
case 316:
YY_RULE_SETUP
#line 706 "scanner.l"
tokt("\u03C0");
	YY_BREAK
case 317:
YY_RULE_SETUP
#line 707 "scanner.l"
tokt("\u03C1");
	YY_BREAK
case 318:
YY_RULE_SETUP
#line 708 "scanner.l"
tokt("\u03C2");
	YY_BREAK
case 319:
YY_RULE_SETUP
#line 709 "scanner.l"
tokt("\u03C3");
	YY_BREAK
case 320:
YY_RULE_SETUP
#line 710 "scanner.l"
tokt("\u03C4");
	YY_BREAK
case 321:
YY_RULE_SETUP
#line 711 "scanner.l"
tokt("\u03C5");
	YY_BREAK
case 322:
YY_RULE_SETUP
#line 712 "scanner.l"
tokt("\u03C6");
	YY_BREAK
case 323:
YY_RULE_SETUP
#line 713 "scanner.l"
tokt("\u03C7");
	YY_BREAK
case 324:
YY_RULE_SETUP
#line 714 "scanner.l"
tokt("\u03C8");
	YY_BREAK
case 325:
YY_RULE_SETUP
#line 715 "scanner.l"
tokt("\u03C9");
	YY_BREAK
case 326:
YY_RULE_SETUP
#line 716 "scanner.l"
tokt("\u03D1");
	YY_BREAK
case 327:
YY_RULE_SETUP
#line 717 "scanner.l"
tokt("\u03D2");
	YY_BREAK
case 328:
YY_RULE_SETUP
#line 718 "scanner.l"
tokt("\u03D6");
	YY_BREAK
case 329:
YY_RULE_SETUP
#line 719 "scanner.l"
tokt("\u2002");
	YY_BREAK
case 330:
YY_RULE_SETUP
#line 720 "scanner.l"
tokt("\u2003");
	YY_BREAK
case 331:
YY_RULE_SETUP
#line 721 "scanner.l"
tokt("\u2009");
	YY_BREAK
case 332:
YY_RULE_SETUP
#line 722 "scanner.l"
tokt("\u200C");
	YY_BREAK
case 333:
YY_RULE_SETUP
#line 723 "scanner.l"
tokt("\u200D");
	YY_BREAK
case 334:
YY_RULE_SETUP
#line 724 "scanner.l"
tokt("\u200E");
	YY_BREAK
case 335:
YY_RULE_SETUP
#line 725 "scanner.l"
tokt("\u200F");
	YY_BREAK
case 336:
YY_RULE_SETUP
#line 726 "scanner.l"
tokt("\u2013");
	YY_BREAK
case 337:
YY_RULE_SETUP
#line 727 "scanner.l"
tokt("\u2014");
	YY_BREAK
case 338:
YY_RULE_SETUP
#line 728 "scanner.l"
tokt("\u2018");
	YY_BREAK
case 339:
YY_RULE_SETUP
#line 729 "scanner.l"
tokt("\u2019");
	YY_BREAK
case 340:
YY_RULE_SETUP
#line 730 "scanner.l"
tokt("\u201A");
	YY_BREAK
case 341:
YY_RULE_SETUP
#line 731 "scanner.l"
tokt("\u201C");
	YY_BREAK
case 342:
YY_RULE_SETUP
#line 732 "scanner.l"
tokt("\u201D");
	YY_BREAK
case 343:
YY_RULE_SETUP
#line 733 "scanner.l"
tokt("\u201E");
	YY_BREAK
case 344:
YY_RULE_SETUP
#line 734 "scanner.l"
tokt("\u2020");
	YY_BREAK
case 345:
YY_RULE_SETUP
#line 735 "scanner.l"
tokt("\u2021");
	YY_BREAK
case 346:
YY_RULE_SETUP
#line 736 "scanner.l"
tokt("\u2022");
	YY_BREAK
case 347:
YY_RULE_SETUP
#line 737 "scanner.l"
tokt("\u2026");
	YY_BREAK
case 348:
YY_RULE_SETUP
#line 738 "scanner.l"
tokt("\u2030");
	YY_BREAK
case 349:
YY_RULE_SETUP
#line 739 "scanner.l"
tokt("\u2032");
	YY_BREAK
case 350:
YY_RULE_SETUP
#line 740 "scanner.l"
tokt("\u2033");
	YY_BREAK
case 351:
YY_RULE_SETUP
#line 741 "scanner.l"
tokt("\u2039");
	YY_BREAK
case 352:
YY_RULE_SETUP
#line 742 "scanner.l"
tokt("\u203A");
	YY_BREAK
case 353:
YY_RULE_SETUP
#line 743 "scanner.l"
tokt("\u203E");
	YY_BREAK
case 354:
YY_RULE_SETUP
#line 744 "scanner.l"
tokt("\u2044");
	YY_BREAK
case 355:
YY_RULE_SETUP
#line 745 "scanner.l"
tokt("\u20AC");
	YY_BREAK
case 356:
YY_RULE_SETUP
#line 746 "scanner.l"
tokt("\u2111");
	YY_BREAK
case 357:
YY_RULE_SETUP
#line 747 "scanner.l"
tokt("\u2118");
	YY_BREAK
case 358:
YY_RULE_SETUP
#line 748 "scanner.l"
tokt("\u211C");
	YY_BREAK
case 359:
YY_RULE_SETUP
#line 749 "scanner.l"
tokt("\u2122");
	YY_BREAK
case 360:
YY_RULE_SETUP
#line 750 "scanner.l"
tokt("\u2135");
	YY_BREAK
case 361:
YY_RULE_SETUP
#line 751 "scanner.l"
tokt("\u2190");
	YY_BREAK
case 362:
YY_RULE_SETUP
#line 752 "scanner.l"
tokt("\u2191");
	YY_BREAK
case 363:
YY_RULE_SETUP
#line 753 "scanner.l"
tokt("\u2192");
	YY_BREAK
case 364:
YY_RULE_SETUP
#line 754 "scanner.l"
tokt("\u2193");
	YY_BREAK
case 365:
YY_RULE_SETUP
#line 755 "scanner.l"
tokt("\u2194");
	YY_BREAK
case 366:
YY_RULE_SETUP
#line 756 "scanner.l"
tokt("\u21B5");
	YY_BREAK
case 367:
YY_RULE_SETUP
#line 757 "scanner.l"
tokt("\u21D0");
	YY_BREAK
case 368:
YY_RULE_SETUP
#line 758 "scanner.l"
tokt("\u21D1");
	YY_BREAK
case 369:
YY_RULE_SETUP
#line 759 "scanner.l"
tokt("\u21D2");
	YY_BREAK
case 370:
YY_RULE_SETUP
#line 760 "scanner.l"
tokt("\u21D3");
	YY_BREAK
case 371:
YY_RULE_SETUP
#line 761 "scanner.l"
tokt("\u21D4");
	YY_BREAK
case 372:
YY_RULE_SETUP
#line 762 "scanner.l"
tokt("\u2200");
	YY_BREAK
case 373:
YY_RULE_SETUP
#line 763 "scanner.l"
tokt("\u2202");
	YY_BREAK
case 374:
YY_RULE_SETUP
#line 764 "scanner.l"
tokt("\u2203");
	YY_BREAK
case 375:
YY_RULE_SETUP
#line 765 "scanner.l"
tokt("\u2205");
	YY_BREAK
case 376:
YY_RULE_SETUP
#line 766 "scanner.l"
tokt("\u2207");
	YY_BREAK
case 377:
YY_RULE_SETUP
#line 767 "scanner.l"
tokt("\u2208");
	YY_BREAK
case 378:
YY_RULE_SETUP
#line 768 "scanner.l"
tokt("\u2209");
	YY_BREAK
case 379:
YY_RULE_SETUP
#line 769 "scanner.l"
tokt("\u220B");
	YY_BREAK
case 380:
YY_RULE_SETUP
#line 770 "scanner.l"
tokt("\u220F");
	YY_BREAK
case 381:
YY_RULE_SETUP
#line 771 "scanner.l"
tokt("\u2211");
	YY_BREAK
case 382:
YY_RULE_SETUP
#line 772 "scanner.l"
tokt("\u2212");
	YY_BREAK
case 383:
YY_RULE_SETUP
#line 773 "scanner.l"
tokt("\u2217");
	YY_BREAK
case 384:
YY_RULE_SETUP
#line 774 "scanner.l"
tokt("\u221A");
	YY_BREAK
case 385:
YY_RULE_SETUP
#line 775 "scanner.l"
tokt("\u221D");
	YY_BREAK
case 386:
YY_RULE_SETUP
#line 776 "scanner.l"
tokt("\u221E");
	YY_BREAK
case 387:
YY_RULE_SETUP
#line 777 "scanner.l"
tokt("\u2220");
	YY_BREAK
case 388:
YY_RULE_SETUP
#line 778 "scanner.l"
tokt("\u2227");
	YY_BREAK
case 389:
YY_RULE_SETUP
#line 779 "scanner.l"
tokt("\u2228");
	YY_BREAK
case 390:
YY_RULE_SETUP
#line 780 "scanner.l"
tokt("\u2229");
	YY_BREAK
case 391:
YY_RULE_SETUP
#line 781 "scanner.l"
tokt("\u222A");
	YY_BREAK
case 392:
YY_RULE_SETUP
#line 782 "scanner.l"
tokt("\u222B");
	YY_BREAK
case 393:
YY_RULE_SETUP
#line 783 "scanner.l"
tokt("\u2234");
	YY_BREAK
case 394:
YY_RULE_SETUP
#line 784 "scanner.l"
tokt("\u223C");
	YY_BREAK
case 395:
YY_RULE_SETUP
#line 785 "scanner.l"
tokt("\u2245");
	YY_BREAK
case 396:
YY_RULE_SETUP
#line 786 "scanner.l"
tokt("\u2248");
	YY_BREAK
case 397:
YY_RULE_SETUP
#line 787 "scanner.l"
tokt("\u2260");
	YY_BREAK
case 398:
YY_RULE_SETUP
#line 788 "scanner.l"
tokt("\u2261");
	YY_BREAK
case 399:
YY_RULE_SETUP
#line 789 "scanner.l"
tokt("\u2264");
	YY_BREAK
case 400:
YY_RULE_SETUP
#line 790 "scanner.l"
tokt("\u2265");
	YY_BREAK
case 401:
YY_RULE_SETUP
#line 791 "scanner.l"
tokt("\u2282");
	YY_BREAK
case 402:
YY_RULE_SETUP
#line 792 "scanner.l"
tokt("\u2283");
	YY_BREAK
case 403:
YY_RULE_SETUP
#line 793 "scanner.l"
tokt("\u2284");
	YY_BREAK
case 404:
YY_RULE_SETUP
#line 794 "scanner.l"
tokt("\u2286");
	YY_BREAK
case 405:
YY_RULE_SETUP
#line 795 "scanner.l"
tokt("\u2287");
	YY_BREAK
case 406:
YY_RULE_SETUP
#line 796 "scanner.l"
tokt("\u2295");
	YY_BREAK
case 407:
YY_RULE_SETUP
#line 797 "scanner.l"
tokt("\u2297");
	YY_BREAK
case 408:
YY_RULE_SETUP
#line 798 "scanner.l"
tokt("\u22A5");
	YY_BREAK
case 409:
YY_RULE_SETUP
#line 799 "scanner.l"
tokt("\u22C5");
	YY_BREAK
case 410:
YY_RULE_SETUP
#line 800 "scanner.l"
tokt("\u2308");
	YY_BREAK
case 411:
YY_RULE_SETUP
#line 801 "scanner.l"
tokt("\u2309");
	YY_BREAK
case 412:
YY_RULE_SETUP
#line 802 "scanner.l"
tokt("\u230A");
	YY_BREAK
case 413:
YY_RULE_SETUP
#line 803 "scanner.l"
tokt("\u230B");
	YY_BREAK
case 414:
YY_RULE_SETUP
#line 804 "scanner.l"
tokt("\u2329");
	YY_BREAK
case 415:
YY_RULE_SETUP
#line 805 "scanner.l"
tokt("\u232A");
	YY_BREAK
case 416:
YY_RULE_SETUP
#line 806 "scanner.l"
tokt("\u25CA");
	YY_BREAK
case 417:
YY_RULE_SETUP
#line 807 "scanner.l"
tokt("\u2660");
	YY_BREAK
case 418:
YY_RULE_SETUP
#line 808 "scanner.l"
tokt("\u2663");
	YY_BREAK
case 419:
YY_RULE_SETUP
#line 809 "scanner.l"
tokt("\u2665");
	YY_BREAK
case 420:
YY_RULE_SETUP
#line 810 "scanner.l"
tokt("\u2666");
	YY_BREAK
/* awesome entities */
case 421:
YY_RULE_SETUP
#line 813 "scanner.l"
tokt("\u2601");
	YY_BREAK
case 422:
YY_RULE_SETUP
#line 814 "scanner.l"
tokt("\u2602");
	YY_BREAK
case 423:
YY_RULE_SETUP
#line 815 "scanner.l"
tokt("\u2603");
	YY_BREAK
case 424:
YY_RULE_SETUP
#line 816 "scanner.l"
tokt("\u2745");
	YY_BREAK
case 425:
YY_RULE_SETUP
#line 817 "scanner.l"
tokt("\u2604");
	YY_BREAK
case 426:
YY_RULE_SETUP
#line 818 "scanner.l"
tokt("\u2608");
	YY_BREAK
/* pseudo entities */
case 427:
YY_RULE_SETUP
#line 821 "scanner.l"
tokt("\\'");
	YY_BREAK
case 428:
YY_RULE_SETUP
#line 822 "scanner.l"
tokt("\\\\");
	YY_BREAK
/* meta entities */
case 429:
YY_RULE_SETUP
#line 825 "scanner.l"
{
    char buf[5];
    utf8ize(atoi(yytext + 2), buf);
    tokt(buf);
  }
	YY_BREAK
case 430:
YY_RULE_SETUP
#line 830 "scanner.l"
{
    char buf[5];
    char *_;
    utf8ize(strtol(yytext + 3, &_, 16), buf);
    tokt(buf);
  }
	YY_BREAK
/* not entities */
case 431:
YY_RULE_SETUP
#line 838 "scanner.l"
{
    yymore();
    BEGIN(XHP_INVALID_ENTITY);
  }
	YY_BREAK


case 432:
/* rule 432 can match eol */
YY_RULE_SETUP
#line 845 "scanner.l"
{
    for (char* ii = yytext; *ii; ++ii) {
      if (*ii == ';') {
        ii[1] = 0;
        break;
      }
    }
    if (!yyextra->terminated) {
      yyextra->error = string("Invalid entity: (") + yytext + ")";
      yyextra->terminated = true;
    }
  }
	YY_BREAK


case 433:
/* rule 433 can match eol */
YY_RULE_SETUP
#line 860 "scanner.l"
{
    if (*yytext == '\r' || *yytext == '\n') {
      // Since we rewrite newlines into space we need to increment both line
      // counters. The first_lineno increment is quite a hack, and makes it so
      // that this ent is on the wrong line but it doesn't mess up the rest of
      // the file.
      ++yyextra->lineno;
      ++yyextra->first_lineno;
    }
    pop_state();
    yytext[0] = ' ';
    yytext[1] = 0;
    tok(T_XHP_TEXT);
  }
	YY_BREAK
case 434:
YY_RULE_SETUP
#line 874 "scanner.l"
{
    pop_state();
    yyless(0);
  }
	YY_BREAK


case 435:
/* rule 435 can match eol */
YY_RULE_SETUP
#line 881 "scanner.l"
{
    yy_scan_newlines(yytext, yyg);
    // Crunch white space at the end
    char* ii = yytext + yyleng - 1;
    while (*ii == ' ' || *ii == '\t' || *ii == '\n' || *ii == '\r') {
      --ii;
    }
   if (ii != yytext + yyleng - 1) {
      ii[1] = ' ';
      ii[2] = 0;
    }
    tok(T_XHP_TEXT);
  }
	YY_BREAK
case 436:
/* rule 436 can match eol */
YY_RULE_SETUP
#line 894 "scanner.l"
{
    yy_scan_newlines(yytext, yyg);
    yytext[0] = ' ';
    yytext[1] = 0;
    tok(T_XHP_TEXT);
  }
	YY_BREAK
case 437:
/* rule 437 can match eol */
YY_RULE_SETUP
#line 900 "scanner.l"
{
    yy_scan_newlines(yytext, yyg);
    tok('{');
  }
	YY_BREAK
case 438:
/* rule 438 can match eol */
YY_RULE_SETUP
#line 904 "scanner.l"
{
    yy_scan_newlines(yytext, yyg);
    tok('<');
  }
	YY_BREAK
case 439:
/* rule 439 can match eol */
YY_RULE_SETUP
#line 908 "scanner.l"
{
    yy_scan_newlines(yytext, yyg);
    tok(T_XHP_LT_DIV);
  }
	YY_BREAK
case 440:
/* rule 440 can match eol */
YY_RULE_SETUP
#line 912 "scanner.l"
{
    yy_scan_newlines(yytext, yyg);
    tok(T_XHP_LT_DIV_GT);
  }
	YY_BREAK


case 441:
YY_RULE_SETUP
#line 919 "scanner.l"
tok(T_XHP_ANY);
	YY_BREAK
case 442:
YY_RULE_SETUP
#line 920 "scanner.l"
tok(T_XHP_PCDATA);
	YY_BREAK
case 443:
YY_RULE_SETUP
#line 921 "scanner.l"
tok(T_XHP_EMPTY);
	YY_BREAK
case 444:
YY_RULE_SETUP
#line 922 "scanner.l"
tok(T_STRING);
	YY_BREAK
case 445:
YY_RULE_SETUP
#line 923 "scanner.l"
{
    pop_state();
    tok(';');
  }
	YY_BREAK
case 446:
YY_RULE_SETUP
#line 927 "scanner.l"
{
    tok(T_XHP_COLON);
  }
	YY_BREAK

/* Other */
case 447:
/* rule 447 can match eol */
YY_RULE_SETUP
#line 933 "scanner.l"
{
  tok(yytext[0]);
  // fix unused function warnings
  yy_top_state(NULL);
  yyunput(0, 0, NULL);
}
	YY_BREAK
case 448:
YY_RULE_SETUP
#line 940 "scanner.l"
YY_FATAL_ERROR( "flex scanner jammed" );
	YY_BREAK
#line 9351 "scanner.lex.cpp"
case YY_STATE_EOF(INITIAL):
case YY_STATE_EOF(PHP):
case YY_STATE_EOF(PHP_COMMENT):
case YY_STATE_EOF(PHP_EOL_COMMENT):
case YY_STATE_EOF(PHP_DOC_COMMENT):
case YY_STATE_EOF(PHP_HEREDOC_START):
case YY_STATE_EOF(PHP_HEREDOC_NSTART):
case YY_STATE_EOF(PHP_HEREDOC_NEWLINE):
case YY_STATE_EOF(PHP_HEREDOC_DATA):
case YY_STATE_EOF(PHP_NO_RESERVED_WORDS):
case YY_STATE_EOF(PHP_NO_RESERVED_WORDS_PERSIST):
case YY_STATE_EOF(XHP_LABEL):
case YY_STATE_EOF(XHP_LABEL_WHITESPACE):
case YY_STATE_EOF(XHP_ATTRS):
case YY_STATE_EOF(XHP_ATTR_VAL):
case YY_STATE_EOF(XHP_AFTER_ENT):
case YY_STATE_EOF(XHP_CHILD):
case YY_STATE_EOF(XHP_CHILD_START):
case YY_STATE_EOF(XHP_INVALID_ENTITY):
case YY_STATE_EOF(XHP_ATTR_TYPE_DECL):
case YY_STATE_EOF(XHP_CHILDREN_DECL):
	yyterminate();

	case YY_END_OF_BUFFER:
		{
		/* Amount of text matched not including the EOB char. */
		int yy_amount_of_matched_text = (int) (yy_cp - yyg->yytext_ptr) - 1;

		/* Undo the effects of YY_DO_BEFORE_ACTION. */
		*yy_cp = yyg->yy_hold_char;
		YY_RESTORE_YY_MORE_OFFSET

		if ( YY_CURRENT_BUFFER_LVALUE->yy_buffer_status == YY_BUFFER_NEW )
			{
			/* We're scanning a new file or input source.  It's
			 * possible that this happened because the user
			 * just pointed yyin at a new source and called
			 * xhplex().  If so, then we have to assure
			 * consistency between YY_CURRENT_BUFFER and our
			 * globals.  Here is the right place to do so, because
			 * this is the first action (other than possibly a
			 * back-up) that will match for the new input source.
			 */
			yyg->yy_n_chars = YY_CURRENT_BUFFER_LVALUE->yy_n_chars;
			YY_CURRENT_BUFFER_LVALUE->yy_input_file = yyin;
			YY_CURRENT_BUFFER_LVALUE->yy_buffer_status = YY_BUFFER_NORMAL;
			}

		/* Note that here we test for yy_c_buf_p "<=" to the position
		 * of the first EOB in the buffer, since yy_c_buf_p will
		 * already have been incremented past the NUL character
		 * (since all states make transitions on EOB to the
		 * end-of-buffer state).  Contrast this with the test
		 * in input().
		 */
		if ( yyg->yy_c_buf_p <= &YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[yyg->yy_n_chars] )
			{ /* This was really a NUL. */
			yy_state_type yy_next_state;

			yyg->yy_c_buf_p = yyg->yytext_ptr + yy_amount_of_matched_text;

			yy_current_state = yy_get_previous_state( yyscanner );

			/* Okay, we're now positioned to make the NUL
			 * transition.  We couldn't have
			 * yy_get_previous_state() go ahead and do it
			 * for us because it doesn't know how to deal
			 * with the possibility of jamming (and we don't
			 * want to build jamming into it because then it
			 * will run more slowly).
			 */

			yy_next_state = yy_try_NUL_trans( yy_current_state , yyscanner);

			yy_bp = yyg->yytext_ptr + YY_MORE_ADJ;

			if ( yy_next_state )
				{
				/* Consume the NUL. */
				yy_cp = ++yyg->yy_c_buf_p;
				yy_current_state = yy_next_state;
				goto yy_match;
				}

			else
				{
/* %% [14.0] code to do back-up for compressed tables and set up yy_cp goes here */
				yy_cp = yyg->yy_c_buf_p;
				goto yy_find_action;
				}
			}

		else switch ( yy_get_next_buffer( yyscanner ) )
			{
			case EOB_ACT_END_OF_FILE:
				{
				yyg->yy_did_buffer_switch_on_eof = 0;

				if ( xhpwrap(yyscanner ) )
					{
					/* Note: because we've taken care in
					 * yy_get_next_buffer() to have set up
					 * yytext, we can now set up
					 * yy_c_buf_p so that if some total
					 * hoser (like flex itself) wants to
					 * call the scanner after we return the
					 * YY_NULL, it'll still work - another
					 * YY_NULL will get returned.
					 */
					yyg->yy_c_buf_p = yyg->yytext_ptr + YY_MORE_ADJ;

					yy_act = YY_STATE_EOF(YY_START);
					goto do_action;
					}

				else
					{
					if ( ! yyg->yy_did_buffer_switch_on_eof )
						YY_NEW_FILE;
					}
				break;
				}

			case EOB_ACT_CONTINUE_SCAN:
				yyg->yy_c_buf_p =
					yyg->yytext_ptr + yy_amount_of_matched_text;

				yy_current_state = yy_get_previous_state( yyscanner );

				yy_cp = yyg->yy_c_buf_p;
				yy_bp = yyg->yytext_ptr + YY_MORE_ADJ;
				goto yy_match;

			case EOB_ACT_LAST_MATCH:
				yyg->yy_c_buf_p =
				&YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[yyg->yy_n_chars];

				yy_current_state = yy_get_previous_state( yyscanner );

				yy_cp = yyg->yy_c_buf_p;
				yy_bp = yyg->yytext_ptr + YY_MORE_ADJ;
				goto yy_find_action;
			}
		break;
		}

	default:
		YY_FATAL_ERROR(
			"fatal flex scanner internal error--no action found" );
	} /* end of action switch */
		} /* end of scanning one token */
} /* end of xhplex */
/* %ok-for-header */

/* %if-c++-only */
/* %not-for-header */

/* %ok-for-header */

/* %endif */

/* yy_get_next_buffer - try to read in a new buffer
 *
 * Returns a code representing an action:
 *	EOB_ACT_LAST_MATCH -
 *	EOB_ACT_CONTINUE_SCAN - continue scanning from current position
 *	EOB_ACT_END_OF_FILE - end of file
 */
/* %if-c-only */
static int yy_get_next_buffer (yyscan_t yyscanner)
/* %endif */
/* %if-c++-only */
/* %endif */
{
    struct yyguts_t * yyg = (struct yyguts_t*)yyscanner;
	register char *dest = YY_CURRENT_BUFFER_LVALUE->yy_ch_buf;
	register char *source = yyg->yytext_ptr;
	register int number_to_move, i;
	int ret_val;

	if ( yyg->yy_c_buf_p > &YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[yyg->yy_n_chars + 1] )
		YY_FATAL_ERROR(
		"fatal flex scanner internal error--end of buffer missed" );

	if ( YY_CURRENT_BUFFER_LVALUE->yy_fill_buffer == 0 )
		{ /* Don't try to fill the buffer, so this is an EOF. */
		if ( yyg->yy_c_buf_p - yyg->yytext_ptr - YY_MORE_ADJ == 1 )
			{
			/* We matched a single character, the EOB, so
			 * treat this as a final EOF.
			 */
			return EOB_ACT_END_OF_FILE;
			}

		else
			{
			/* We matched some text prior to the EOB, first
			 * process it.
			 */
			return EOB_ACT_LAST_MATCH;
			}
		}

	/* Try to read more data. */

	/* First move last chars to start of buffer. */
	number_to_move = (int) (yyg->yy_c_buf_p - yyg->yytext_ptr) - 1;

	for ( i = 0; i < number_to_move; ++i )
		*(dest++) = *(source++);

	if ( YY_CURRENT_BUFFER_LVALUE->yy_buffer_status == YY_BUFFER_EOF_PENDING )
		/* don't do the read, it's not guaranteed to return an EOF,
		 * just force an EOF
		 */
		YY_CURRENT_BUFFER_LVALUE->yy_n_chars = yyg->yy_n_chars = 0;

	else
		{
			int num_to_read =
			YY_CURRENT_BUFFER_LVALUE->yy_buf_size - number_to_move - 1;

		while ( num_to_read <= 0 )
			{ /* Not enough room in the buffer - grow it. */

			/* just a shorter name for the current buffer */
			YY_BUFFER_STATE b = YY_CURRENT_BUFFER;

			int yy_c_buf_p_offset =
				(int) (yyg->yy_c_buf_p - b->yy_ch_buf);

			if ( b->yy_is_our_buffer )
				{
				int new_size = b->yy_buf_size * 2;

				if ( new_size <= 0 )
					b->yy_buf_size += b->yy_buf_size / 8;
				else
					b->yy_buf_size *= 2;

				b->yy_ch_buf = (char *)
					/* Include room in for 2 EOB chars. */
					xhprealloc((void *) b->yy_ch_buf,b->yy_buf_size + 2 ,yyscanner );
				}
			else
				/* Can't grow it, we don't own it. */
				b->yy_ch_buf = 0;

			if ( ! b->yy_ch_buf )
				YY_FATAL_ERROR(
				"fatal error - scanner input buffer overflow" );

			yyg->yy_c_buf_p = &b->yy_ch_buf[yy_c_buf_p_offset];

			num_to_read = YY_CURRENT_BUFFER_LVALUE->yy_buf_size -
						number_to_move - 1;

			}

		if ( num_to_read > YY_READ_BUF_SIZE )
			num_to_read = YY_READ_BUF_SIZE;

		/* Read in more data. */
		YY_INPUT( (&YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[number_to_move]),
			yyg->yy_n_chars, (size_t) num_to_read );

		YY_CURRENT_BUFFER_LVALUE->yy_n_chars = yyg->yy_n_chars;
		}

	if ( yyg->yy_n_chars == 0 )
		{
		if ( number_to_move == YY_MORE_ADJ )
			{
			ret_val = EOB_ACT_END_OF_FILE;
			xhprestart(yyin  ,yyscanner);
			}

		else
			{
			ret_val = EOB_ACT_LAST_MATCH;
			YY_CURRENT_BUFFER_LVALUE->yy_buffer_status =
				YY_BUFFER_EOF_PENDING;
			}
		}

	else
		ret_val = EOB_ACT_CONTINUE_SCAN;

	if ((yy_size_t) (yyg->yy_n_chars + number_to_move) > YY_CURRENT_BUFFER_LVALUE->yy_buf_size) {
		/* Extend the array by 50%, plus the number we really need. */
		yy_size_t new_size = yyg->yy_n_chars + number_to_move + (yyg->yy_n_chars >> 1);
		YY_CURRENT_BUFFER_LVALUE->yy_ch_buf = (char *) xhprealloc((void *) YY_CURRENT_BUFFER_LVALUE->yy_ch_buf,new_size ,yyscanner );
		if ( ! YY_CURRENT_BUFFER_LVALUE->yy_ch_buf )
			YY_FATAL_ERROR( "out of dynamic memory in yy_get_next_buffer()" );
	}

	yyg->yy_n_chars += number_to_move;
	YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[yyg->yy_n_chars] = YY_END_OF_BUFFER_CHAR;
	YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[yyg->yy_n_chars + 1] = YY_END_OF_BUFFER_CHAR;

	yyg->yytext_ptr = &YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[0];

	return ret_val;
}

/* yy_get_previous_state - get the state just before the EOB char was reached */

/* %if-c-only */
/* %not-for-header */

    static yy_state_type yy_get_previous_state (yyscan_t yyscanner)
/* %endif */
/* %if-c++-only */
/* %endif */
{
	register yy_state_type yy_current_state;
	register char *yy_cp;
    struct yyguts_t * yyg = (struct yyguts_t*)yyscanner;

/* %% [15.0] code to get the start state into yy_current_state goes here */
	yy_current_state = yyg->yy_start;

	for ( yy_cp = yyg->yytext_ptr + YY_MORE_ADJ; yy_cp < yyg->yy_c_buf_p; ++yy_cp )
		{
/* %% [16.0] code to find the next state goes here */
		if ( yy_accept[yy_current_state] )
			{
			yyg->yy_last_accepting_state = yy_current_state;
			yyg->yy_last_accepting_cpos = yy_cp;
			}
		if ( *yy_cp )
			{
			register YY_CHAR yy_c = YY_SC_TO_UI(*yy_cp);
			if ( yy_accept[yy_current_state] )
				{
				yyg->yy_last_accepting_state = yy_current_state;
				yyg->yy_last_accepting_cpos = yy_cp;
				}
			while ( yy_chk[yy_base[yy_current_state] + yy_c] != yy_current_state )
				{
				yy_current_state = (int) yy_def[yy_current_state];
				}
			yy_current_state = yy_nxt[yy_base[yy_current_state] + (unsigned int) yy_c];
			}
		else
			yy_current_state = yy_NUL_trans[yy_current_state];
		}

	return yy_current_state;
}

/* yy_try_NUL_trans - try to make a transition on the NUL character
 *
 * synopsis
 *	next_state = yy_try_NUL_trans( current_state );
 */
/* %if-c-only */
    static yy_state_type yy_try_NUL_trans  (yy_state_type yy_current_state , yyscan_t yyscanner)
/* %endif */
/* %if-c++-only */
/* %endif */
{
	register int yy_is_jam;
    struct yyguts_t * yyg = (struct yyguts_t*)yyscanner; /* This var may be unused depending upon options. */
/* %% [17.0] code to find the next state, and perhaps do backing up, goes here */

	yy_current_state = yy_NUL_trans[yy_current_state];
	yy_is_jam = (yy_current_state == 0);

	return yy_is_jam ? 0 : yy_current_state;
}

/* %if-c-only */

    static void yyunput (int c, register char * yy_bp , yyscan_t yyscanner)
/* %endif */
/* %if-c++-only */
/* %endif */
{
	register char *yy_cp;
    struct yyguts_t * yyg = (struct yyguts_t*)yyscanner;

    yy_cp = yyg->yy_c_buf_p;

	/* undo effects of setting up yytext */
	*yy_cp = yyg->yy_hold_char;

	if ( yy_cp < YY_CURRENT_BUFFER_LVALUE->yy_ch_buf + 2 )
		{ /* need to shift things up to make room */
		/* +2 for EOB chars. */
		register int number_to_move = yyg->yy_n_chars + 2;
		register char *dest = &YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[
					YY_CURRENT_BUFFER_LVALUE->yy_buf_size + 2];
		register char *source =
				&YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[number_to_move];

		while ( source > YY_CURRENT_BUFFER_LVALUE->yy_ch_buf )
			*--dest = *--source;

		yy_cp += (int) (dest - source);
		yy_bp += (int) (dest - source);
		YY_CURRENT_BUFFER_LVALUE->yy_n_chars =
			yyg->yy_n_chars = YY_CURRENT_BUFFER_LVALUE->yy_buf_size;

		if ( yy_cp < YY_CURRENT_BUFFER_LVALUE->yy_ch_buf + 2 )
			YY_FATAL_ERROR( "flex scanner push-back overflow" );
		}

	*--yy_cp = (char) c;

/* %% [18.0] update yylineno here */

	yyg->yytext_ptr = yy_bp;
	yyg->yy_hold_char = *yy_cp;
	yyg->yy_c_buf_p = yy_cp;
}
/* %if-c-only */

/* %endif */

/* %if-c-only */
#ifndef YY_NO_INPUT
#ifdef __cplusplus
    static int yyinput (yyscan_t yyscanner)
#else
    static int input  (yyscan_t yyscanner)
#endif

/* %endif */
/* %if-c++-only */
/* %endif */
{
	int c;
    struct yyguts_t * yyg = (struct yyguts_t*)yyscanner;

	*yyg->yy_c_buf_p = yyg->yy_hold_char;

	if ( *yyg->yy_c_buf_p == YY_END_OF_BUFFER_CHAR )
		{
		/* yy_c_buf_p now points to the character we want to return.
		 * If this occurs *before* the EOB characters, then it's a
		 * valid NUL; if not, then we've hit the end of the buffer.
		 */
		if ( yyg->yy_c_buf_p < &YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[yyg->yy_n_chars] )
			/* This was really a NUL. */
			*yyg->yy_c_buf_p = '\0';

		else
			{ /* need more input */
			int offset = yyg->yy_c_buf_p - yyg->yytext_ptr;
			++yyg->yy_c_buf_p;

			switch ( yy_get_next_buffer( yyscanner ) )
				{
				case EOB_ACT_LAST_MATCH:
					/* This happens because yy_g_n_b()
					 * sees that we've accumulated a
					 * token and flags that we need to
					 * try matching the token before
					 * proceeding.  But for input(),
					 * there's no matching to consider.
					 * So convert the EOB_ACT_LAST_MATCH
					 * to EOB_ACT_END_OF_FILE.
					 */

					/* Reset buffer status. */
					xhprestart(yyin ,yyscanner);

					/*FALLTHROUGH*/

				case EOB_ACT_END_OF_FILE:
					{
					if ( xhpwrap(yyscanner ) )
						return EOF;

					if ( ! yyg->yy_did_buffer_switch_on_eof )
						YY_NEW_FILE;
#ifdef __cplusplus
					return yyinput(yyscanner);
#else
					return input(yyscanner);
#endif
					}

				case EOB_ACT_CONTINUE_SCAN:
					yyg->yy_c_buf_p = yyg->yytext_ptr + offset;
					break;
				}
			}
		}

	c = *(unsigned char *) yyg->yy_c_buf_p;	/* cast for 8-bit char's */
	*yyg->yy_c_buf_p = '\0';	/* preserve yytext */
	yyg->yy_hold_char = *++yyg->yy_c_buf_p;

/* %% [19.0] update BOL and yylineno */

	return c;
}
/* %if-c-only */
#endif	/* ifndef YY_NO_INPUT */
/* %endif */

/** Immediately switch to a different input stream.
 * @param input_file A readable stream.
 * @param yyscanner The scanner object.
 * @note This function does not reset the start condition to @c INITIAL .
 */
/* %if-c-only */
    void xhprestart  (FILE * input_file , yyscan_t yyscanner)
/* %endif */
/* %if-c++-only */
/* %endif */
{
    struct yyguts_t * yyg = (struct yyguts_t*)yyscanner;

	if ( ! YY_CURRENT_BUFFER ){
        xhpensure_buffer_stack (yyscanner);
		YY_CURRENT_BUFFER_LVALUE =
            xhp_create_buffer(yyin,YY_BUF_SIZE ,yyscanner);
	}

	xhp_init_buffer(YY_CURRENT_BUFFER,input_file ,yyscanner);
	xhp_load_buffer_state(yyscanner );
}

/** Switch to a different input buffer.
 * @param new_buffer The new input buffer.
 * @param yyscanner The scanner object.
 */
/* %if-c-only */
    void xhp_switch_to_buffer  (YY_BUFFER_STATE  new_buffer , yyscan_t yyscanner)
/* %endif */
/* %if-c++-only */
/* %endif */
{
    struct yyguts_t * yyg = (struct yyguts_t*)yyscanner;

	/* TODO. We should be able to replace this entire function body
	 * with
	 *		xhppop_buffer_state();
	 *		xhppush_buffer_state(new_buffer);
     */
	xhpensure_buffer_stack (yyscanner);
	if ( YY_CURRENT_BUFFER == new_buffer )
		return;

	if ( YY_CURRENT_BUFFER )
		{
		/* Flush out information for old buffer. */
		*yyg->yy_c_buf_p = yyg->yy_hold_char;
		YY_CURRENT_BUFFER_LVALUE->yy_buf_pos = yyg->yy_c_buf_p;
		YY_CURRENT_BUFFER_LVALUE->yy_n_chars = yyg->yy_n_chars;
		}

	YY_CURRENT_BUFFER_LVALUE = new_buffer;
	xhp_load_buffer_state(yyscanner );

	/* We don't actually know whether we did this switch during
	 * EOF (xhpwrap()) processing, but the only time this flag
	 * is looked at is after xhpwrap() is called, so it's safe
	 * to go ahead and always set it.
	 */
	yyg->yy_did_buffer_switch_on_eof = 1;
}

/* %if-c-only */
static void xhp_load_buffer_state  (yyscan_t yyscanner)
/* %endif */
/* %if-c++-only */
/* %endif */
{
    struct yyguts_t * yyg = (struct yyguts_t*)yyscanner;
	yyg->yy_n_chars = YY_CURRENT_BUFFER_LVALUE->yy_n_chars;
	yyg->yytext_ptr = yyg->yy_c_buf_p = YY_CURRENT_BUFFER_LVALUE->yy_buf_pos;
	yyin = YY_CURRENT_BUFFER_LVALUE->yy_input_file;
	yyg->yy_hold_char = *yyg->yy_c_buf_p;
}

/** Allocate and initialize an input buffer state.
 * @param file A readable stream.
 * @param size The character buffer size in bytes. When in doubt, use @c YY_BUF_SIZE.
 * @param yyscanner The scanner object.
 * @return the allocated buffer state.
 */
/* %if-c-only */
    YY_BUFFER_STATE xhp_create_buffer  (FILE * file, int  size , yyscan_t yyscanner)
/* %endif */
/* %if-c++-only */
/* %endif */
{
	YY_BUFFER_STATE b;
    
	b = (YY_BUFFER_STATE) xhpalloc(sizeof( struct yy_buffer_state ) ,yyscanner );
	if ( ! b )
		YY_FATAL_ERROR( "out of dynamic memory in xhp_create_buffer()" );

	b->yy_buf_size = size;

	/* yy_ch_buf has to be 2 characters longer than the size given because
	 * we need to put in 2 end-of-buffer characters.
	 */
	b->yy_ch_buf = (char *) xhpalloc(b->yy_buf_size + 2 ,yyscanner );
	if ( ! b->yy_ch_buf )
		YY_FATAL_ERROR( "out of dynamic memory in xhp_create_buffer()" );

	b->yy_is_our_buffer = 1;

	xhp_init_buffer(b,file ,yyscanner);

	return b;
}

/** Destroy the buffer.
 * @param b a buffer created with xhp_create_buffer()
 * @param yyscanner The scanner object.
 */
/* %if-c-only */
    void xhp_delete_buffer (YY_BUFFER_STATE  b , yyscan_t yyscanner)
/* %endif */
/* %if-c++-only */
/* %endif */
{
    struct yyguts_t * yyg = (struct yyguts_t*)yyscanner;

	if ( ! b )
		return;

	if ( b == YY_CURRENT_BUFFER ) /* Not sure if we should pop here. */
		YY_CURRENT_BUFFER_LVALUE = (YY_BUFFER_STATE) 0;

	if ( b->yy_is_our_buffer )
		xhpfree((void *) b->yy_ch_buf ,yyscanner );

	xhpfree((void *) b ,yyscanner );
}

/* %if-c-only */

#ifndef __cplusplus
extern int isatty (int );
#endif /* __cplusplus */
    
/* %endif */

/* %if-c++-only */
/* %endif */

/* Initializes or reinitializes a buffer.
 * This function is sometimes called more than once on the same buffer,
 * such as during a xhprestart() or at EOF.
 */
/* %if-c-only */
    static void xhp_init_buffer  (YY_BUFFER_STATE  b, FILE * file , yyscan_t yyscanner)
/* %endif */
/* %if-c++-only */
/* %endif */

{
	int oerrno = errno;
    struct yyguts_t * yyg = (struct yyguts_t*)yyscanner;

	xhp_flush_buffer(b ,yyscanner);

	b->yy_input_file = file;
	b->yy_fill_buffer = 1;

    /* If b is the current buffer, then xhp_init_buffer was _probably_
     * called from xhprestart() or through yy_get_next_buffer.
     * In that case, we don't want to reset the lineno or column.
     */
    if (b != YY_CURRENT_BUFFER){
        b->yy_bs_lineno = 1;
        b->yy_bs_column = 0;
    }

/* %if-c-only */

        b->yy_is_interactive = file ? (isatty( fileno(file) ) > 0) : 0;
    
/* %endif */
/* %if-c++-only */
/* %endif */
	errno = oerrno;
}

/** Discard all buffered characters. On the next scan, YY_INPUT will be called.
 * @param b the buffer state to be flushed, usually @c YY_CURRENT_BUFFER.
 * @param yyscanner The scanner object.
 */
/* %if-c-only */
    void xhp_flush_buffer (YY_BUFFER_STATE  b , yyscan_t yyscanner)
/* %endif */
/* %if-c++-only */
/* %endif */
{
    struct yyguts_t * yyg = (struct yyguts_t*)yyscanner;
	if ( ! b )
		return;

	b->yy_n_chars = 0;

	/* We always need two end-of-buffer characters.  The first causes
	 * a transition to the end-of-buffer state.  The second causes
	 * a jam in that state.
	 */
	b->yy_ch_buf[0] = YY_END_OF_BUFFER_CHAR;
	b->yy_ch_buf[1] = YY_END_OF_BUFFER_CHAR;

	b->yy_buf_pos = &b->yy_ch_buf[0];

	b->yy_at_bol = 1;
	b->yy_buffer_status = YY_BUFFER_NEW;

	if ( b == YY_CURRENT_BUFFER )
		xhp_load_buffer_state(yyscanner );
}

/* %if-c-or-c++ */
/** Pushes the new state onto the stack. The new state becomes
 *  the current state. This function will allocate the stack
 *  if necessary.
 *  @param new_buffer The new state.
 *  @param yyscanner The scanner object.
 */
/* %if-c-only */
void xhppush_buffer_state (YY_BUFFER_STATE new_buffer , yyscan_t yyscanner)
/* %endif */
/* %if-c++-only */
/* %endif */
{
    struct yyguts_t * yyg = (struct yyguts_t*)yyscanner;
	if (new_buffer == NULL)
		return;

	xhpensure_buffer_stack(yyscanner);

	/* This block is copied from xhp_switch_to_buffer. */
	if ( YY_CURRENT_BUFFER )
		{
		/* Flush out information for old buffer. */
		*yyg->yy_c_buf_p = yyg->yy_hold_char;
		YY_CURRENT_BUFFER_LVALUE->yy_buf_pos = yyg->yy_c_buf_p;
		YY_CURRENT_BUFFER_LVALUE->yy_n_chars = yyg->yy_n_chars;
		}

	/* Only push if top exists. Otherwise, replace top. */
	if (YY_CURRENT_BUFFER)
		yyg->yy_buffer_stack_top++;
	YY_CURRENT_BUFFER_LVALUE = new_buffer;

	/* copied from xhp_switch_to_buffer. */
	xhp_load_buffer_state(yyscanner );
	yyg->yy_did_buffer_switch_on_eof = 1;
}
/* %endif */

/* %if-c-or-c++ */
/** Removes and deletes the top of the stack, if present.
 *  The next element becomes the new top.
 *  @param yyscanner The scanner object.
 */
/* %if-c-only */
void xhppop_buffer_state (yyscan_t yyscanner)
/* %endif */
/* %if-c++-only */
/* %endif */
{
    struct yyguts_t * yyg = (struct yyguts_t*)yyscanner;
	if (!YY_CURRENT_BUFFER)
		return;

	xhp_delete_buffer(YY_CURRENT_BUFFER ,yyscanner);
	YY_CURRENT_BUFFER_LVALUE = NULL;
	if (yyg->yy_buffer_stack_top > 0)
		--yyg->yy_buffer_stack_top;

	if (YY_CURRENT_BUFFER) {
		xhp_load_buffer_state(yyscanner );
		yyg->yy_did_buffer_switch_on_eof = 1;
	}
}
/* %endif */

/* %if-c-or-c++ */
/* Allocates the stack if it does not exist.
 *  Guarantees space for at least one push.
 */
/* %if-c-only */
static void xhpensure_buffer_stack (yyscan_t yyscanner)
/* %endif */
/* %if-c++-only */
/* %endif */
{
	int num_to_alloc;
    struct yyguts_t * yyg = (struct yyguts_t*)yyscanner;

	if (!yyg->yy_buffer_stack) {

		/* First allocation is just for 2 elements, since we don't know if this
		 * scanner will even need a stack. We use 2 instead of 1 to avoid an
		 * immediate realloc on the next call.
         */
		num_to_alloc = 1;
		yyg->yy_buffer_stack = (struct yy_buffer_state**)xhpalloc
								(num_to_alloc * sizeof(struct yy_buffer_state*)
								, yyscanner);
		if ( ! yyg->yy_buffer_stack )
			YY_FATAL_ERROR( "out of dynamic memory in xhpensure_buffer_stack()" );
								  
		memset(yyg->yy_buffer_stack, 0, num_to_alloc * sizeof(struct yy_buffer_state*));
				
		yyg->yy_buffer_stack_max = num_to_alloc;
		yyg->yy_buffer_stack_top = 0;
		return;
	}

	if (yyg->yy_buffer_stack_top >= (yyg->yy_buffer_stack_max) - 1){

		/* Increase the buffer to prepare for a possible push. */
		int grow_size = 8 /* arbitrary grow size */;

		num_to_alloc = yyg->yy_buffer_stack_max + grow_size;
		yyg->yy_buffer_stack = (struct yy_buffer_state**)xhprealloc
								(yyg->yy_buffer_stack,
								num_to_alloc * sizeof(struct yy_buffer_state*)
								, yyscanner);
		if ( ! yyg->yy_buffer_stack )
			YY_FATAL_ERROR( "out of dynamic memory in xhpensure_buffer_stack()" );

		/* zero only the new slots.*/
		memset(yyg->yy_buffer_stack + yyg->yy_buffer_stack_max, 0, grow_size * sizeof(struct yy_buffer_state*));
		yyg->yy_buffer_stack_max = num_to_alloc;
	}
}
/* %endif */

/* %if-c-only */
/** Setup the input buffer state to scan directly from a user-specified character buffer.
 * @param base the character buffer
 * @param size the size in bytes of the character buffer
 * @param yyscanner The scanner object.
 * @return the newly allocated buffer state object. 
 */
YY_BUFFER_STATE xhp_scan_buffer  (char * base, yy_size_t  size , yyscan_t yyscanner)
{
	YY_BUFFER_STATE b;
    
	if ( size < 2 ||
	     base[size-2] != YY_END_OF_BUFFER_CHAR ||
	     base[size-1] != YY_END_OF_BUFFER_CHAR )
		/* They forgot to leave room for the EOB's. */
		return 0;

	b = (YY_BUFFER_STATE) xhpalloc(sizeof( struct yy_buffer_state ) ,yyscanner );
	if ( ! b )
		YY_FATAL_ERROR( "out of dynamic memory in xhp_scan_buffer()" );

	b->yy_buf_size = size - 2;	/* "- 2" to take care of EOB's */
	b->yy_buf_pos = b->yy_ch_buf = base;
	b->yy_is_our_buffer = 0;
	b->yy_input_file = 0;
	b->yy_n_chars = b->yy_buf_size;
	b->yy_is_interactive = 0;
	b->yy_at_bol = 1;
	b->yy_fill_buffer = 0;
	b->yy_buffer_status = YY_BUFFER_NEW;

	xhp_switch_to_buffer(b ,yyscanner );

	return b;
}
/* %endif */

/* %if-c-only */
/** Setup the input buffer state to scan a string. The next call to xhplex() will
 * scan from a @e copy of @a str.
 * @param yystr a NUL-terminated string to scan
 * @param yyscanner The scanner object.
 * @return the newly allocated buffer state object.
 * @note If you want to scan bytes that may contain NUL values, then use
 *       xhp_scan_bytes() instead.
 */
YY_BUFFER_STATE xhp_scan_string (yyconst char * yystr , yyscan_t yyscanner)
{
    
	return xhp_scan_bytes(yystr,strlen(yystr) ,yyscanner);
}
/* %endif */

/* %if-c-only */
/** Setup the input buffer state to scan the given bytes. The next call to xhplex() will
 * scan from a @e copy of @a bytes.
 * @param bytes the byte buffer to scan
 * @param len the number of bytes in the buffer pointed to by @a bytes.
 * @param yyscanner The scanner object.
 * @return the newly allocated buffer state object.
 */
YY_BUFFER_STATE xhp_scan_bytes  (yyconst char * yybytes, int  _yybytes_len , yyscan_t yyscanner)
{
	YY_BUFFER_STATE b;
	char *buf;
	yy_size_t n;
	int i;
    
	/* Get memory for full buffer, including space for trailing EOB's. */
	n = _yybytes_len + 2;
	buf = (char *) xhpalloc(n ,yyscanner );
	if ( ! buf )
		YY_FATAL_ERROR( "out of dynamic memory in xhp_scan_bytes()" );

	for ( i = 0; i < _yybytes_len; ++i )
		buf[i] = yybytes[i];

	buf[_yybytes_len] = buf[_yybytes_len+1] = YY_END_OF_BUFFER_CHAR;

	b = xhp_scan_buffer(buf,n ,yyscanner);
	if ( ! b )
		YY_FATAL_ERROR( "bad buffer in xhp_scan_bytes()" );

	/* It's okay to grow etc. this buffer, and we should throw it
	 * away when we're done.
	 */
	b->yy_is_our_buffer = 1;

	return b;
}
/* %endif */

/* %if-c-only */
    static void yy_push_state (int  new_state , yyscan_t yyscanner)
/* %endif */
/* %if-c++-only */
/* %endif */
{
    struct yyguts_t * yyg = (struct yyguts_t*)yyscanner;
	if ( yyg->yy_start_stack_ptr >= yyg->yy_start_stack_depth )
		{
		yy_size_t new_size;

		yyg->yy_start_stack_depth += YY_START_STACK_INCR;
		new_size = yyg->yy_start_stack_depth * sizeof( int );

		if ( ! yyg->yy_start_stack )
			yyg->yy_start_stack = (int *) xhpalloc(new_size ,yyscanner );

		else
			yyg->yy_start_stack = (int *) xhprealloc((void *) yyg->yy_start_stack,new_size ,yyscanner );

		if ( ! yyg->yy_start_stack )
			YY_FATAL_ERROR( "out of memory expanding start-condition stack" );
		}

	yyg->yy_start_stack[yyg->yy_start_stack_ptr++] = YY_START;

	BEGIN(new_state);
}

/* %if-c-only */
    static void yy_pop_state  (yyscan_t yyscanner)
/* %endif */
/* %if-c++-only */
/* %endif */
{
    struct yyguts_t * yyg = (struct yyguts_t*)yyscanner;
	if ( --yyg->yy_start_stack_ptr < 0 )
		YY_FATAL_ERROR( "start-condition stack underflow" );

	BEGIN(yyg->yy_start_stack[yyg->yy_start_stack_ptr]);
}

/* %if-c-only */
    static int yy_top_state  (yyscan_t yyscanner)
/* %endif */
/* %if-c++-only */
/* %endif */
{
    struct yyguts_t * yyg = (struct yyguts_t*)yyscanner;
	return yyg->yy_start_stack[yyg->yy_start_stack_ptr - 1];
}

#ifndef YY_EXIT_FAILURE
#define YY_EXIT_FAILURE 2
#endif

/* %if-c-only */
static void yy_fatal_error (yyconst char* msg , yyscan_t yyscanner)
{
    	(void) fprintf( stderr, "%s\n", msg );
	exit( YY_EXIT_FAILURE );
}
/* %endif */
/* %if-c++-only */
/* %endif */

/* Redefine yyless() so it works in section 3 code. */

#undef yyless
#define yyless(n) \
	do \
		{ \
		/* Undo effects of setting up yytext. */ \
        int yyless_macro_arg = (n); \
        YY_LESS_LINENO(yyless_macro_arg);\
		yytext[yyleng] = yyg->yy_hold_char; \
		yyg->yy_c_buf_p = yytext + yyless_macro_arg; \
		yyg->yy_hold_char = *yyg->yy_c_buf_p; \
		*yyg->yy_c_buf_p = '\0'; \
		yyleng = yyless_macro_arg; \
		} \
	while ( 0 )

/* Accessor  methods (get/set functions) to struct members. */

/* %if-c-only */
/* %if-reentrant */

/** Get the user-defined data for this scanner.
 * @param yyscanner The scanner object.
 */
YY_EXTRA_TYPE xhpget_extra  (yyscan_t yyscanner)
{
    struct yyguts_t * yyg = (struct yyguts_t*)yyscanner;
    return yyextra;
}

/* %endif */

/** Get the current line number.
 * @param yyscanner The scanner object.
 */
int xhpget_lineno  (yyscan_t yyscanner)
{
    struct yyguts_t * yyg = (struct yyguts_t*)yyscanner;
    
        if (! YY_CURRENT_BUFFER)
            return 0;
    
    return yylineno;
}

/** Get the current column number.
 * @param yyscanner The scanner object.
 */
int xhpget_column  (yyscan_t yyscanner)
{
    struct yyguts_t * yyg = (struct yyguts_t*)yyscanner;
    
        if (! YY_CURRENT_BUFFER)
            return 0;
    
    return yycolumn;
}

/** Get the input stream.
 * @param yyscanner The scanner object.
 */
FILE *xhpget_in  (yyscan_t yyscanner)
{
    struct yyguts_t * yyg = (struct yyguts_t*)yyscanner;
    return yyin;
}

/** Get the output stream.
 * @param yyscanner The scanner object.
 */
FILE *xhpget_out  (yyscan_t yyscanner)
{
    struct yyguts_t * yyg = (struct yyguts_t*)yyscanner;
    return yyout;
}

/** Get the length of the current token.
 * @param yyscanner The scanner object.
 */
int xhpget_leng  (yyscan_t yyscanner)
{
    struct yyguts_t * yyg = (struct yyguts_t*)yyscanner;
    return yyleng;
}

/** Get the current token.
 * @param yyscanner The scanner object.
 */

char *xhpget_text  (yyscan_t yyscanner)
{
    struct yyguts_t * yyg = (struct yyguts_t*)yyscanner;
    return yytext;
}

/* %if-reentrant */

/** Set the user-defined data. This data is never touched by the scanner.
 * @param user_defined The data to be associated with this scanner.
 * @param yyscanner The scanner object.
 */
void xhpset_extra (YY_EXTRA_TYPE  user_defined , yyscan_t yyscanner)
{
    struct yyguts_t * yyg = (struct yyguts_t*)yyscanner;
    yyextra = user_defined ;
}

/* %endif */

/** Set the current line number.
 * @param line_number
 * @param yyscanner The scanner object.
 */
void xhpset_lineno (int  line_number , yyscan_t yyscanner)
{
    struct yyguts_t * yyg = (struct yyguts_t*)yyscanner;

        /* lineno is only valid if an input buffer exists. */
        if (! YY_CURRENT_BUFFER )
           yy_fatal_error( "xhpset_lineno called with no buffer" , yyscanner); 
    
    yylineno = line_number;
}

/** Set the current column.
 * @param line_number
 * @param yyscanner The scanner object.
 */
void xhpset_column (int  column_no , yyscan_t yyscanner)
{
    struct yyguts_t * yyg = (struct yyguts_t*)yyscanner;

        /* column is only valid if an input buffer exists. */
        if (! YY_CURRENT_BUFFER )
           yy_fatal_error( "xhpset_column called with no buffer" , yyscanner); 
    
    yycolumn = column_no;
}

/** Set the input stream. This does not discard the current
 * input buffer.
 * @param in_str A readable stream.
 * @param yyscanner The scanner object.
 * @see xhp_switch_to_buffer
 */
void xhpset_in (FILE *  in_str , yyscan_t yyscanner)
{
    struct yyguts_t * yyg = (struct yyguts_t*)yyscanner;
    yyin = in_str ;
}

void xhpset_out (FILE *  out_str , yyscan_t yyscanner)
{
    struct yyguts_t * yyg = (struct yyguts_t*)yyscanner;
    yyout = out_str ;
}

int xhpget_debug  (yyscan_t yyscanner)
{
    struct yyguts_t * yyg = (struct yyguts_t*)yyscanner;
    return yy_flex_debug;
}

void xhpset_debug (int  bdebug , yyscan_t yyscanner)
{
    struct yyguts_t * yyg = (struct yyguts_t*)yyscanner;
    yy_flex_debug = bdebug ;
}

/* %endif */

/* %if-reentrant */
/* Accessor methods for yylval and yylloc */

/* %if-bison-bridge */

YYSTYPE * xhpget_lval  (yyscan_t yyscanner)
{
    struct yyguts_t * yyg = (struct yyguts_t*)yyscanner;
    return yylval;
}

void xhpset_lval (YYSTYPE *  yylval_param , yyscan_t yyscanner)
{
    struct yyguts_t * yyg = (struct yyguts_t*)yyscanner;
    yylval = yylval_param;
}

/* %endif */

/* User-visible API */

/* xhplex_init is special because it creates the scanner itself, so it is
 * the ONLY reentrant function that doesn't take the scanner as the last argument.
 * That's why we explicitly handle the declaration, instead of using our macros.
 */

int xhplex_init(yyscan_t* ptr_yy_globals)

{
    if (ptr_yy_globals == NULL){
        errno = EINVAL;
        return 1;
    }

    *ptr_yy_globals = (yyscan_t) xhpalloc ( sizeof( struct yyguts_t ), NULL );

    if (*ptr_yy_globals == NULL){
        errno = ENOMEM;
        return 1;
    }

    /* By setting to 0xAA, we expose bugs in yy_init_globals. Leave at 0x00 for releases. */
    memset(*ptr_yy_globals,0x00,sizeof(struct yyguts_t));

    return yy_init_globals ( *ptr_yy_globals );
}

/* xhplex_init_extra has the same functionality as xhplex_init, but follows the
 * convention of taking the scanner as the last argument. Note however, that
 * this is a *pointer* to a scanner, as it will be allocated by this call (and
 * is the reason, too, why this function also must handle its own declaration).
 * The user defined value in the first argument will be available to xhpalloc in
 * the yyextra field.
 */

int xhplex_init_extra(YY_EXTRA_TYPE yy_user_defined,yyscan_t* ptr_yy_globals )

{
    struct yyguts_t dummy_yyguts;

    xhpset_extra (yy_user_defined, &dummy_yyguts);

    if (ptr_yy_globals == NULL){
        errno = EINVAL;
        return 1;
    }
	
    *ptr_yy_globals = (yyscan_t) xhpalloc ( sizeof( struct yyguts_t ), &dummy_yyguts );
	
    if (*ptr_yy_globals == NULL){
        errno = ENOMEM;
        return 1;
    }
    
    /* By setting to 0xAA, we expose bugs in
    yy_init_globals. Leave at 0x00 for releases. */
    memset(*ptr_yy_globals,0x00,sizeof(struct yyguts_t));
    
    xhpset_extra (yy_user_defined, *ptr_yy_globals);
    
    return yy_init_globals ( *ptr_yy_globals );
}

/* %endif if-c-only */

/* %if-c-only */
static int yy_init_globals (yyscan_t yyscanner)
{
    struct yyguts_t * yyg = (struct yyguts_t*)yyscanner;
    /* Initialization is the same as for the non-reentrant scanner.
     * This function is called from xhplex_destroy(), so don't allocate here.
     */

    yyg->yy_buffer_stack = 0;
    yyg->yy_buffer_stack_top = 0;
    yyg->yy_buffer_stack_max = 0;
    yyg->yy_c_buf_p = (char *) 0;
    yyg->yy_init = 0;
    yyg->yy_start = 0;

    yyg->yy_start_stack_ptr = 0;
    yyg->yy_start_stack_depth = 0;
    yyg->yy_start_stack =  NULL;

/* Defined in main.c */
#ifdef YY_STDINIT
    yyin = stdin;
    yyout = stdout;
#else
    yyin = (FILE *) 0;
    yyout = (FILE *) 0;
#endif

    /* For future reference: Set errno on error, since we are called by
     * xhplex_init()
     */
    return 0;
}
/* %endif */

/* %if-c-only SNIP! this currently causes conflicts with the c++ scanner */
/* xhplex_destroy is for both reentrant and non-reentrant scanners. */
int xhplex_destroy  (yyscan_t yyscanner)
{
    struct yyguts_t * yyg = (struct yyguts_t*)yyscanner;

    /* Pop the buffer stack, destroying each element. */
	while(YY_CURRENT_BUFFER){
		xhp_delete_buffer(YY_CURRENT_BUFFER ,yyscanner );
		YY_CURRENT_BUFFER_LVALUE = NULL;
		xhppop_buffer_state(yyscanner);
	}

	/* Destroy the stack itself. */
	xhpfree(yyg->yy_buffer_stack ,yyscanner);
	yyg->yy_buffer_stack = NULL;

    /* Destroy the start condition stack. */
        xhpfree(yyg->yy_start_stack ,yyscanner );
        yyg->yy_start_stack = NULL;

    /* Reset the globals. This is important in a non-reentrant scanner so the next time
     * xhplex() is called, initialization will occur. */
    yy_init_globals( yyscanner);

/* %if-reentrant */
    /* Destroy the main struct (reentrant only). */
    xhpfree ( yyscanner , yyscanner );
    yyscanner = NULL;
/* %endif */
    return 0;
}
/* %endif */

/*
 * Internal utility routines.
 */

#ifndef yytext_ptr
static void yy_flex_strncpy (char* s1, yyconst char * s2, int n , yyscan_t yyscanner)
{
	register int i;
	for ( i = 0; i < n; ++i )
		s1[i] = s2[i];
}
#endif

#ifdef YY_NEED_STRLEN
static int yy_flex_strlen (yyconst char * s , yyscan_t yyscanner)
{
	register int n;
	for ( n = 0; s[n]; ++n )
		;

	return n;
}
#endif

void *xhpalloc (yy_size_t  size , yyscan_t yyscanner)
{
	return (void *) malloc( size );
}

void *xhprealloc  (void * ptr, yy_size_t  size , yyscan_t yyscanner)
{
	/* The cast to (char *) in the following accommodates both
	 * implementations that use char* generic pointers, and those
	 * that use void* generic pointers.  It works with the latter
	 * because both ANSI C and C++ allow castless assignment from
	 * any pointer type to void*, and deal with argument conversions
	 * as though doing an assignment.
	 */
	return (void *) realloc( (char *) ptr, size );
}

void xhpfree (void * ptr , yyscan_t yyscanner)
{
	free( (char *) ptr );	/* see xhprealloc() for (char *) cast */
}

/* %if-tables-serialization definitions */
/* %define-yytables   The name for this specific scanner's tables. */
#define YYTABLES_NAME "yytables"
/* %endif */

/* %ok-for-header */

#line 940 "scanner.l"



#ifdef DEBUG
static const char* yy_state_name(int state) {
  switch (state) {
    case INITIAL:
      return "INITIAL";
    case PHP:
      return "PHP";
    case PHP_COMMENT:
      return "PHP_COMMENT";
    case PHP_EOL_COMMENT:
      return "PHP_EOL_COMMENT";
    case PHP_DOC_COMMENT:
      return "PHP_DOC_COMMENT";
    case PHP_HEREDOC_START:
      return "PHP_HEREDOC_START";
    case PHP_HEREDOC_NSTART:
      return "PHP_HEREDOC_NSTART";
    case PHP_HEREDOC_NEWLINE:
      return "PHP_HEREDOC_NEWLINE";
    case PHP_HEREDOC_DATA:
      return "PHP_HEREDOC_DATA";
    case PHP_NO_RESERVED_WORDS:
      return "PHP_NO_RESERVED_WORDS";
    case PHP_NO_RESERVED_WORDS_PERSIST:
      return "PHP_NO_RESERVED_WORDS_PERSIST";
    case XHP_LABEL:
      return "XHP_LABEL";
    case XHP_LABEL_WHITESPACE:
      return "XHP_LABEL_WHITESPACE";
    case XHP_ATTRS:
      return "XHP_ATTRS";
    case XHP_ATTR_VAL:
      return "XHP_ATTR_VAL";
    case XHP_AFTER_ENT:
      return "XHP_AFTER_ENT";
    case XHP_CHILD:
      return "XHP_CHILD";
    case XHP_CHILD_START:
      return "XHP_CHILD_START";
    case XHP_INVALID_ENTITY:
      return "XHP_INVALID_ENTITY";
    case XHP_ATTR_TYPE_DECL:
      return "XHP_ATTR_TYPE_DECL";
    case XHP_CHILDREN_DECL:
      return "XHP_CHILDREN_DECL";
    default:
      return "???";
  }
}

static void yy_log_token(int tok) {
  const char* tokname = yytokname(tok);
  if (tokname) {
    fprintf(stderr, "--> %s\n", tokname);
  } else {
    fprintf(stderr, "--> '%c'\n", tok);
  }
}
#endif

static int yy_token(int tok, yyguts_t* yyg) {
  if (YY_START == PHP_NO_RESERVED_WORDS) {
    pop_state();
  }

  switch (tok) {
    case T_OPEN_TAG:
    case T_OPEN_TAG_WITH_ECHO:
    case T_OPEN_TAG_FAKE:
      push_state(PHP);
      break;

    case T_CLOSE_TAG:
      pop_state();
      return ';';

    case T_OBJECT_OPERATOR:
    case T_PAAMAYIM_NEKUDOTAYIM:
    case T_FUNCTION:
      push_state(PHP_NO_RESERVED_WORDS);
      break;

    case '{':
      yyextra->curly_stack.push(tok);
      break;
  }
#ifdef DEBUG
  yy_log_token(tok);
#endif
  return yyextra->last_token = tok;
}

static inline void yy_scan_newlines(const char* text, struct yyguts_t* yyg) {
  for (; *text; ++text) {
    if (*text == '\r') {
      if (text[1] == '\n') {
        ++text;
      }
      ++yyextra->lineno;
    } else if (*text == '\n') {
      ++yyextra->lineno;
    }
  }
}

void xhp_new_push_state(int s, struct yyguts_t* yyg) {
#ifdef DEBUG
  fprintf(stderr, "--> PUSH(%s -> %s)\n", yy_state_name(YY_START), yy_state_name(s));
#endif
  yy_push_state(s, yyg);
}

void xhp_new_pop_state(struct yyguts_t* yyg) {
#ifdef DEBUG
  int s = YY_START;
#endif
  yy_pop_state(yyg);
#ifdef DEBUG
  fprintf(stderr, "--> POP(%s -> %s)\n", yy_state_name(s), yy_state_name(YY_START));
#endif
}

void xhp_set_state(int s, struct yyguts_t* yyg) {
#ifdef DEBUG
  fprintf(stderr, "--> SET(%s)\n", yy_state_name(s));
#endif
  BEGIN(s);
}

