// @generated by "php idl.php inc {input.idl.php} {output.inc}"

#if EXT_TYPE == 0
"apache_note", T(Variant), S(0), "note_name", T(String), NULL, S(0), NULL, S(0), "note_value", T(String), "N;", S(2), "null", S(0), NULL, S(16384), "/**\n * ( excerpt from http://php.net/manual/en/function.apache-note.php )\n *\n * This function is a wrapper for Apache's table_get and table_set. It\n * edits the table of notes that exists during a request. The table's\n * purpose is to allow Apache modules to communicate.\n *\n * The main use for apache_note() is to pass information from one module\n * to another within the same request.\n *\n * @note_name  string  The name of the note.\n * @note_value string  The value of the note.\n *\n * @return     mixed   If called with one argument, it returns the current\n *                     value of note note_name. If called with two\n *                     arguments, it sets the value of note note_name to\n *                     note_value and returns the previous value of note\n *                     note_name. If the note cannot be retrieved, FALSE is\n *                     returned.\n */",
"apache_request_headers", T(Array), S(0), NULL, S(16384), "/**\n * ( excerpt from\n * http://php.net/manual/en/function.apache-request-headers.php )\n *\n * Fetches all HTTP request headers from the current request. This\n * function is only supported when PHP is installed as an Apache module.\n *\n * @return     vector  An associative array of all the HTTP headers in the\n *                     current request, or FALSE on failure.\n */", 
"apache_response_headers", T(Array), S(0), NULL, S(16384), "/**\n * ( excerpt from\n * http://php.net/manual/en/function.apache-response-headers.php )\n *\n * Fetch all HTTP response headers.\n *\n * @return     vector  An array of all Apache response headers on success\n *                     or FALSE on failure.\n */", 
"apache_setenv", T(Boolean), S(0), "variable", T(String), NULL, S(0), NULL, S(0), "value", T(String), NULL, S(0), NULL, S(0), "walk_to_top", T(Boolean), "b:0;", S(4), "false", S(0), NULL, S(16384), "/**\n * ( excerpt from http://php.net/manual/en/function.apache-setenv.php )\n *\n * apache_setenv() sets the value of the Apache environment variable\n * specified by variable.\n *\n * When setting an Apache environment variable, the corresponding $_SERVER\n * variable is not changed.\n *\n * @variable   string  The environment variable that's being set.\n * @value      string  The new variable value.\n * @walk_to_top\n *             bool    Whether to set the top-level variable available to\n *                     all Apache layers.\n *\n * @return     bool    Returns TRUE on success or FALSE on failure.\n */",
"getallheaders", T(Array), S(0), NULL, S(16384), "/**\n * ( excerpt from http://php.net/manual/en/function.getallheaders.php )\n *\n * Fetches all HTTP headers from the current request.\n *\n * This function is an alias for apache_request_headers(). Please read the\n * apache_request_headers() documentation for more information on how this\n * function works. This function is only supported when PHP is installed as\n * an Apache module.\n *\n * @return     vector  An associative array of all the HTTP headers in the\n *                     current request, or FALSE on failure.\n */", 
"virtual", T(Boolean), S(0), "filename", T(String), NULL, S(0), NULL, S(0), NULL, S(16384), "/**\n * ( excerpt from http://php.net/manual/en/function.virtual.php )\n *\n * virtual() is an Apache-specific function which is similar to\n * <!--#include virtual...--> in mod_include. It performs an Apache\n * sub-request. It is useful for including CGI scripts or .shtml files, or\n * anything else that you would parse through Apache. Note that for a CGI\n * script, the script must generate valid CGI headers. At the minimum that\n * means it must generate a Content-Type header.\n *\n * To run the sub-request, all buffers are terminated and flushed to the\n * browser, pending headers are sent too. This function is only supported\n * when PHP is installed as an Apache module.\n *\n * @filename   string  The file that the virtual command will be performed\n *                     on.\n *\n * @return     bool    Performs the virtual command on success, or returns\n *                     FALSE on failure.\n */",
"apache_get_config", T(Variant), S(0), NULL, S(16384), "/**\n * ( excerpt from http://php.net/manual/en/function.apache-get-config.php )\n *\n *\n * @return     mixed\n */", 
"apache_get_scoreboard", T(Variant), S(0), NULL, S(16384), "/**\n * ( excerpt from\n * http://php.net/manual/en/function.apache-get-scoreboard.php )\n *\n *\n * @return     mixed\n */", 
"apache_get_rewrite_rules", T(Variant), S(0), NULL, S(16384), "/**\n * ( excerpt from\n * http://php.net/manual/en/function.apache-get-rewrite-rules.php )\n *\n *\n * @return     mixed\n */", 

#elif EXT_TYPE == 1

#elif EXT_TYPE == 2

#endif
