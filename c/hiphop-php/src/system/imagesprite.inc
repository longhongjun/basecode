// @generated by "php idl.php inc {input.idl.php} {output.inc}"

#if EXT_TYPE == 0

#elif EXT_TYPE == 1

#elif EXT_TYPE == 2
"ImageSprite", "", NULL, "__construct", T(Void), S(0), NULL, S(16384), "/**\n * ( excerpt from http://php.net/manual/en/imagesprite.construct.php )\n *\n * Creates a new ImageSprite object\n *\n * @return     mixed   TODO\n */", S(16384),"addFile", T(Object), S(0), "file", T(String), NULL, S(0), NULL, S(0), "options", T(Array), "N;", S(2), "null", S(0), NULL, S(16384), "/**\n * ( excerpt from http://php.net/manual/en/imagesprite.addfile.php )\n *\n * Adds the image specified by the file path to the sprite.\n *\n * @file       string  The path to the image. Must be a path to the local\n *                     filesystem or a a stream format php supports.\n * @options    map     Associative array of options for this image. May\n *                     include the image's 'width' and 'height' (if\n *                     previously known to the developer), or spacing\n *                     requirements via the padding_DIRECTION keys, where\n *                     DIRECTION may be top, bottom, left, or right.  May\n *                     also include flush requirements that will force this\n *                     image to be 'flush_left' or 'flush_right' within the\n *                     sprite.\n *\n * @return     object  The ImageSprite object itself (for method chaining).\n */", S(16384),"addString", T(Object), S(0), "id", T(String), NULL, S(0), NULL, S(0), "data", T(String), NULL, S(0), NULL, S(0), "options", T(Array), "N;", S(2), "null", S(0), NULL, S(16384), "/**\n * ( excerpt from http://php.net/manual/en/imagesprite.addstring.php )\n *\n * Adds the image defined by the string to the sprite.\n *\n * @id         string  An identifier for this image. This will be the key\n *                     to referencing this image in the mapping.\n * @data       string  The data of this image.\n * @options    map     Associative array of options for this image. May\n *                     include the image's 'width' and 'height' (if\n *                     previously known to the developer), or spacing\n *                     requirements via the padding_DIRECTION keys, where\n *                     DIRECTION may be top, bottom, left, or right.  May\n *                     also include flush requirements that will force this\n *                     image to be 'flush_left' or 'flush_right' within the\n *                     sprite.\n *\n * @return     object  The ImageSprite object itself (for method chaining).\n */", S(16384),"addUrl", T(Object), S(0), "url", T(String), NULL, S(0), NULL, S(0), "timeout_ms", T(Int32), "i:0;", S(4), "0", S(0), "Options", T(Array), "N;", S(2), "null", S(0), NULL, S(16384), "/**\n * ( excerpt from http://php.net/manual/en/imagesprite.addurl.php )\n *\n * Adds the image located at the specified URL to the sprite.\n *\n * @url        string  The url of the image. The URL must be using the http\n *                     protocol; secure connections are not supported.\n * @timeout_ms int     The timeout in milliseconds for this request. A\n *                     value of 0 or lower will disable the timeout.\n * @Options    map     Associative array of options for this image. May\n *                     include the image's 'width' and 'height' (if\n *                     previously known to the developer), or spacing\n *                     requirements via the padding_DIRECTION keys, where\n *                     DIRECTION may be top, bottom, left, or right.  May\n *                     also include flush requirements that will force this\n *                     image to be 'flush_left' or 'flush_right' within the\n *                     sprite.\n *\n * @return     object  The ImageSprite object itself (for method chaining).\n */", S(16384),"clear", T(Object), S(0), "paths", T(Variant), "N;", S(2), "null", S(0), NULL, S(16384), "/**\n * ( excerpt from http://php.net/manual/en/imagesprite.clear.php )\n *\n * Removes images from the sprite and frees the memory associated with\n * that image.\n *\n * @paths      mixed   When passed a string, it will remove the images\n *                     specified by that path or identifier from the\n *                     sprite, if they exist. You may also pass an array of\n *                     strings, and it will remove each.  a null value will\n *                     remove all images from the sprite.\n *\n * @return     object  The ImageSprite object itself (for method chaining).\n */", S(16384),"loadDims", T(Object), S(0), "block", T(Boolean), "b:0;", S(4), "false", S(0), NULL, S(16384), "/**\n * ( excerpt from http://php.net/manual/en/imagesprite.loaddims.php )\n *\n * Loads the dimensions for the images in the sprite, but not necessarily\n * their data.\n *\n * @block      bool    Whether this call should block until all the data is\n *                     loaded or allow them to load in the background.\n *\n * @return     object  The ImageSprite object itself (for method chaining).\n */", S(16384),"loadImages", T(Object), S(0), "block", T(Boolean), "b:0;", S(4), "false", S(0), NULL, S(16384), "/**\n * ( excerpt from http://php.net/manual/en/imagesprite.loadimages.php )\n *\n * Loads the images in the sprite and sets the correct dimensions.\n *\n * @block      bool    Whether this call should block until all the data is\n *                     loaded or allow them to load in the background.\n *\n * @return     object  The ImageSprite object itself (for method chaining).\n */", S(16384),"output", T(String), S(0), "output_file", T(String), "N;", S(2), "null", S(0), "format", T(String), "s:3:\"png\";", S(10), "\"png\"", S(0), "quality", T(Int32), "i:75;", S(5), "75", S(0), NULL, S(16384), "/**\n * ( excerpt from http://php.net/manual/en/imagesprite.output.php )\n *\n * Retrieves the resulting sprite image.\n *\n * @output_file\n *             string  Path to where the output image should be saved. If\n *                     empty or null, the image data is returned as a\n *                     string.\n * @format     string  The format the output image should be returned in.\n *                     Defaults to png.\n * @quality    int     The output quality of the image. Only applies to\n *                     jpeg output, and defaults to 75.\n *\n * @return     string  The image data, if the $output_file is not\n *                     specified.\n */", S(16384),"css", T(String), S(0), "css_namespace", T(String), NULL, S(0), NULL, S(0), "sprite_file", T(String), "N;", S(2), "null", S(0), "output_file", T(String), "N;", S(2), "null", S(0), "verbose", T(Boolean), "b:0;", S(4), "false", S(0), NULL, S(16384), "/**\n * ( excerpt from http://php.net/manual/en/imagesprite.css.php )\n *\n * Retrieves css for the sprite, mapping ids to images.\n *\n * @css_namespace\n *             string  The css class namespace of the sprite. Should be\n *                     unique within your css.\n * @sprite_file\n *             string  Path to the sprite image relative to wherever this\n *                     css is being served. The output image may be passed\n *                     in datauri format to use inlined sprite images. If\n *                     this is not set, the image location must be\n *                     specified elsewhere in the css manually.\n * @output_file\n *             string  Path to where the css should be saved. If empty or\n *                     null, the css is returned as a string.\n * @verbose    bool    Determines whether the css should include comments\n *                     with information about the sprite.\n *\n * @return     string  The css output, if the $output_file is not\n *                     specified.\n */", S(16384),"getErrors", T(Array), S(0), NULL, S(16384), "/**\n * ( excerpt from http://php.net/manual/en/imagesprite.geterrors.php )\n *\n * Retrieves an associative array of errors encountered while putting\n * together the sprite.\n *\n * @return     vector  Associative array of errors\n */", S(16384),"mapping", T(Array), S(0), NULL, S(16384), "/**\n * ( excerpt from http://php.net/manual/en/imagesprite.mapping.php )\n *\n * Returns an associative array mapping the images in the sprite to their\n * dimensions, placement, and css id.\n *\n * @return     vector  Associative array of mapping\n */", S(16384),"__destruct", T(Variant), S(0), NULL, S(16384), "/**\n * ( excerpt from http://php.net/manual/en/imagesprite.destruct.php )\n *\n * Recovers all memory allocated to the sprite.\n *\n * @return     mixed   null\n */", S(16384),NULL,NULL,NULL,
S(16384), "/**\n * ( excerpt from http://php.net/manual/en/class.imagesprite.php )\n *\n * Represents a set of images sprited into a single image.\n *\n */", 
#endif
