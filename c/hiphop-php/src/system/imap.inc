// @generated by "php idl.php inc {input.idl.php} {output.inc}"

#if EXT_TYPE == 0
"imap_8bit", T(Variant), S(0), "str", T(String), NULL, S(0), NULL, S(0), NULL, S(16384), "/**\n * ( excerpt from http://php.net/manual/en/function.imap-8bit.php )\n *\n * Convert an 8bit string to a quoted-printable string (according to \273\n * RFC2045, section 6.7).\n *\n * @str        string  The 8bit string to convert\n *\n * @return     mixed   Returns a quoted-printable string.\n */",
"imap_alerts", T(Variant), S(0), NULL, S(16384), "/**\n * ( excerpt from http://php.net/manual/en/function.imap-alerts.php )\n *\n * Returns all of the IMAP alert messages generated since the last\n * imap_alerts() call, or the beginning of the page.\n *\n * When imap_alerts() is called, the alert stack is subsequently cleared.\n * The IMAP specification requires that these messages be passed to the\n * user.\n *\n * @return     mixed   Returns an array of all of the IMAP alert messages\n *                     generated or FALSE if no alert messages are\n *                     available.\n */", 
"imap_append", T(Boolean), S(0), "imap_stream", T(Object), NULL, S(0), NULL, S(0), "mailbox", T(String), NULL, S(0), NULL, S(0), "message", T(String), NULL, S(0), NULL, S(0), "options", T(String), "s:0:\"\";", S(7), "\"\"", S(0), NULL, S(16384), "/**\n * ( excerpt from http://php.net/manual/en/function.imap-append.php )\n *\n * Appends a string message to the specified mailbox.\n *\n * @imap_stream\n *             object  An IMAP stream returned by imap_open().\n * @mailbox    string  The mailbox name, see imap_open() for more\n *                     information\n * @message    string  The message to be append, as a string\n *\n *                     When talking to the Cyrus IMAP server, you must use\n *                     \"\\r\\n\" as your end-of-line terminator instead of\n *                     \"\\n\" or the operation will fail\n * @options    string  If provided, the options will also be written to the\n *                     mailbox\n *\n * @return     bool    Returns TRUE on success or FALSE on failure.\n */",
"imap_base64", T(Variant), S(0), "text", T(String), NULL, S(0), NULL, S(0), NULL, S(16384), "/**\n * ( excerpt from http://php.net/manual/en/function.imap-base64.php )\n *\n * Decodes the given BASE-64 encoded text.\n *\n * @text       string  The encoded text\n *\n * @return     mixed   Returns the decoded message as a string.\n */",
"imap_binary", T(Variant), S(0), "str", T(String), NULL, S(0), NULL, S(0), NULL, S(16384), "/**\n * ( excerpt from http://php.net/manual/en/function.imap-binary.php )\n *\n * Convert an 8bit string to a base64 string according to \273 RFC2045,\n * Section 6.8.\n *\n * @str        string  The 8bit string\n *\n * @return     mixed   Returns a base64 encoded string.\n */",
"imap_body", T(Variant), S(0), "imap_stream", T(Object), NULL, S(0), NULL, S(0), "msg_number", T(Int64), NULL, S(0), NULL, S(0), "options", T(Int64), "i:0;", S(4), "0", S(0), NULL, S(16384), "/**\n * ( excerpt from http://php.net/manual/en/function.imap-body.php )\n *\n * imap_body() returns the body of the message, numbered msg_number in the\n * current mailbox.\n *\n * imap_body() will only return a verbatim copy of the message body. To\n * extract single parts of a multipart MIME-encoded message you have to use\n * imap_fetchstructure() to analyze its structure and imap_fetchbody() to\n * extract a copy of a single body component.\n *\n * @imap_stream\n *             object  An IMAP stream returned by imap_open().\n * @msg_number int     The message number\n * @options    int     The optional options are a bit mask with one or more\n *                     of the following: FT_UID - The msg_number is a UID\n *                     FT_PEEK - Do not set the \\Seen flag if not already\n *                     set FT_INTERNAL - The return string is in internal\n *                     format, will not canonicalize to CRLF.\n *\n * @return     mixed   Returns the body of the specified message, as a\n *                     string.\n */",
"imap_bodystruct", T(Variant), S(0), "imap_stream", T(Object), NULL, S(0), NULL, S(0), "msg_number", T(Int64), NULL, S(0), NULL, S(0), "section", T(String), NULL, S(0), NULL, S(0), NULL, S(16384), "/**\n * ( excerpt from http://php.net/manual/en/function.imap-bodystruct.php )\n *\n * Read the structure of a specified body section of a specific message.\n *\n * @imap_stream\n *             object  An IMAP stream returned by imap_open().\n * @msg_number int     The message number\n * @section    string  The body section to read\n *\n * @return     mixed   Returns the information in an object, for a detailed\n *                     description of the object structure and properties\n *                     see imap_fetchstructure().\n */",
"imap_check", T(Variant), S(0), "imap_stream", T(Object), NULL, S(0), NULL, S(0), NULL, S(16384), "/**\n * ( excerpt from http://php.net/manual/en/function.imap-check.php )\n *\n * Checks information about the current mailbox.\n *\n * @imap_stream\n *             object  An IMAP stream returned by imap_open().\n *\n * @return     mixed   Returns the information in an object with following\n *                     properties: Date - current system time formatted\n *                     according to \273 RFC2822 Driver - protocol used to\n *                     access this mailbox: POP3, IMAP, NNTP Mailbox - the\n *                     mailbox name Nmsgs - number of messages in the\n *                     mailbox Recent - number of recent messages in the\n *                     mailbox\n *\n *                     Returns FALSE on failure.\n */",
"imap_clearflag_full", T(Boolean), S(0), "imap_stream", T(Object), NULL, S(0), NULL, S(0), "sequence", T(String), NULL, S(0), NULL, S(0), "flag", T(String), NULL, S(0), NULL, S(0), "options", T(Int64), "i:0;", S(4), "0", S(0), NULL, S(16384), "/**\n * ( excerpt from http://php.net/manual/en/function.imap-clearflag-full.php\n * )\n *\n * This function causes a store to delete the specified flag to the flags\n * set for the messages in the specified sequence.\n *\n * @imap_stream\n *             object  An IMAP stream returned by imap_open().\n * @sequence   string  A sequence of message numbers. You can enumerate\n *                     desired messages with the X,Y syntax, or retrieve\n *                     all messages within an interval with the X:Y syntax\n * @flag       string  The flags which you can unset are \"\\\\Seen\",\n *                     \"\\\\Answered\", \"\\\\Flagged\", \"\\\\Deleted\", and\n *                     \"\\\\Draft\" (as defined by \273 RFC2060)\n * @options    int     options are a bit mask and may contain the single\n *                     option: ST_UID - The sequence argument contains UIDs\n *                     instead of sequence numbers\n *\n * @return     bool    Returns TRUE on success or FALSE on failure.\n */",
"imap_close", T(Boolean), S(0), "imap_stream", T(Object), NULL, S(0), NULL, S(0), "flag", T(Int64), "i:0;", S(4), "0", S(0), NULL, S(16384), "/**\n * ( excerpt from http://php.net/manual/en/function.imap-close.php )\n *\n * Closes the imap stream.\n *\n * @imap_stream\n *             object  An IMAP stream returned by imap_open().\n * @flag       int     If set to CL_EXPUNGE, the function will silently\n *                     expunge the mailbox before closing, removing all\n *                     messages marked for deletion. You can achieve the\n *                     same thing by using imap_expunge()\n *\n * @return     bool    Returns TRUE on success or FALSE on failure.\n */",
"imap_createmailbox", T(Boolean), S(0), "imap_stream", T(Object), NULL, S(0), NULL, S(0), "mailbox", T(String), NULL, S(0), NULL, S(0), NULL, S(16384), "/**\n * ( excerpt from http://php.net/manual/en/function.imap-createmailbox.php\n * )\n *\n * Creates a new mailbox specified by mailbox.\n *\n * @imap_stream\n *             object  An IMAP stream returned by imap_open().\n * @mailbox    string  The mailbox name, see imap_open() for more\n *                     information. Names containing international\n *                     characters should be encoded by imap_utf7_encode()\n *\n * @return     bool    Returns TRUE on success or FALSE on failure.\n */",
"imap_delete", T(Boolean), S(0), "imap_stream", T(Object), NULL, S(0), NULL, S(0), "msg_number", T(String), NULL, S(0), NULL, S(0), "options", T(Int64), "i:0;", S(4), "0", S(0), NULL, S(16384), "/**\n * ( excerpt from http://php.net/manual/en/function.imap-delete.php )\n *\n * Marks messages listed in msg_number for deletion. Messages marked for\n * deletion will stay in the mailbox until either imap_expunge() is called\n * or imap_close() is called with the optional parameter CL_EXPUNGE.\n *\n * @imap_stream\n *             object  An IMAP stream returned by imap_open().\n * @msg_number string  The message number\n * @options    int     You can set the FT_UID which tells the function to\n *                     treat the msg_number argument as an UID.\n *\n * @return     bool    Returns TRUE.\n */",
"imap_deletemailbox", T(Boolean), S(0), "imap_stream", T(Object), NULL, S(0), NULL, S(0), "mailbox", T(String), NULL, S(0), NULL, S(0), NULL, S(16384), "/**\n * ( excerpt from http://php.net/manual/en/function.imap-deletemailbox.php\n * )\n *\n * Deletes the specified mailbox.\n *\n * @imap_stream\n *             object  An IMAP stream returned by imap_open().\n * @mailbox    string  The mailbox name, see imap_open() for more\n *                     information\n *\n * @return     bool    Returns TRUE on success or FALSE on failure.\n */",
"imap_errors", T(Variant), S(0), NULL, S(16384), "/**\n * ( excerpt from http://php.net/manual/en/function.imap-errors.php )\n *\n * Gets all of the IMAP errors (if any) that have occurred during this\n * page request or since the error stack was reset.\n *\n * When imap_errors() is called, the error stack is subsequently cleared.\n *\n * @return     mixed   This function returns an array of all of the IMAP\n *                     error messages generated since the last\n *                     imap_errors() call, or the beginning of the page.\n *                     Returns FALSE if no error messages are available.\n */", 
"imap_expunge", T(Boolean), S(0), "imap_stream", T(Object), NULL, S(0), NULL, S(0), NULL, S(16384), "/**\n * ( excerpt from http://php.net/manual/en/function.imap-expunge.php )\n *\n * Deletes all the messages marked for deletion by imap_delete(),\n * imap_mail_move(), or imap_setflag_full().\n *\n * @imap_stream\n *             object  An IMAP stream returned by imap_open().\n *\n * @return     bool    Returns TRUE.\n */",
"imap_fetch_overview", T(Variant), S(0), "imap_stream", T(Object), NULL, S(0), NULL, S(0), "sequence", T(String), NULL, S(0), NULL, S(0), "options", T(Int64), "i:0;", S(4), "0", S(0), NULL, S(16384), "/**\n * ( excerpt from http://php.net/manual/en/function.imap-fetch-overview.php\n * )\n *\n * This function fetches mail headers for the given sequence and returns\n * an overview of their contents.\n *\n * @imap_stream\n *             object  An IMAP stream returned by imap_open().\n * @sequence   string  A message sequence description. You can enumerate\n *                     desired messages with the X,Y syntax, or retrieve\n *                     all messages within an interval with the X:Y syntax\n * @options    int     sequence will contain a sequence of message indices\n *                     or UIDs, if this parameter is set to FT_UID.\n *\n * @return     mixed   Returns an array of objects describing one message\n *                     header each. The object will only define a property\n *                     if it exists. The possible properties are: subject -\n *                     the messages subject from - who sent it to -\n *                     recipient date - when was it sent message_id -\n *                     Message-ID references - is a reference to this\n *                     message id in_reply_to - is a reply to this message\n *                     id size - size in bytes uid - UID the message has in\n *                     the mailbox msgno - message sequence number in the\n *                     mailbox recent - this message is flagged as recent\n *                     flagged - this message is flagged answered - this\n *                     message is flagged as answered deleted - this\n *                     message is flagged for deletion seen - this message\n *                     is flagged as already read draft - this message is\n *                     flagged as being a draft\n */",
"imap_fetchbody", T(Variant), S(0), "imap_stream", T(Object), NULL, S(0), NULL, S(0), "msg_number", T(Int64), NULL, S(0), NULL, S(0), "section", T(String), NULL, S(0), NULL, S(0), "options", T(Int64), "i:0;", S(4), "0", S(0), NULL, S(16384), "/**\n * ( excerpt from http://php.net/manual/en/function.imap-fetchbody.php )\n *\n * Fetch of a particular section of the body of the specified messages.\n * Body parts are not decoded by this function.\n *\n * @imap_stream\n *             object  An IMAP stream returned by imap_open().\n * @msg_number int     The message number\n * @section    string  The part number. It is a string of integers\n *                     delimited by period which index into a body part\n *                     list as per the IMAP4 specification\n * @options    int     A bitmask with one or more of the following: FT_UID\n *                     - The msg_number is a UID FT_PEEK - Do not set the\n *                     \\Seen flag if not already set FT_INTERNAL - The\n *                     return string is in internal format, will not\n *                     canonicalize to CRLF.\n *\n * @return     mixed   Returns a particular section of the body of the\n *                     specified messages as a text string.\n */",
"imap_fetchheader", T(Variant), S(0), "imap_stream", T(Object), NULL, S(0), NULL, S(0), "msg_number", T(Int64), NULL, S(0), NULL, S(0), "options", T(Int64), "i:0;", S(4), "0", S(0), NULL, S(16384), "/**\n * ( excerpt from http://php.net/manual/en/function.imap-fetchheader.php )\n *\n * This function causes a fetch of the complete, unfiltered \273 RFC2822\n * format header of the specified message.\n *\n * @imap_stream\n *             object  An IMAP stream returned by imap_open().\n * @msg_number int     The message number\n * @options    int     The possible options are: FT_UID - The msgno\n *                     argument is a UID FT_INTERNAL - The return string is\n *                     in \"internal\" format, without any attempt to\n *                     canonicalize to CRLF newlines FT_PREFETCHTEXT - The\n *                     RFC822.TEXT should be pre-fetched at the same time.\n *                     This avoids an extra RTT on an IMAP connection if a\n *                     full message text is desired (e.g. in a \"save to\n *                     local file\" operation)\n *\n * @return     mixed   Returns the header of the specified message as a\n *                     text string.\n */",
"imap_fetchstructure", T(Variant), S(0), "imap_stream", T(Object), NULL, S(0), NULL, S(0), "msg_number", T(Int64), NULL, S(0), NULL, S(0), "options", T(Int64), "i:0;", S(4), "0", S(0), NULL, S(16384), "/**\n * ( excerpt from http://php.net/manual/en/function.imap-fetchstructure.php\n * )\n *\n * Fetches all the structured information for a given message.\n *\n * @imap_stream\n *             object  An IMAP stream returned by imap_open().\n * @msg_number int     The message number\n * @options    int     This optional parameter only has a single option,\n *                     FT_UID, which tells the function to treat the\n *                     msg_number argument as a UID.\n *\n * @return     mixed\n */",
"imap_gc", T(Boolean), S(0), "imap_stream", T(Object), NULL, S(0), NULL, S(0), "caches", T(Int64), NULL, S(0), NULL, S(0), NULL, S(16384), "/**\n * ( excerpt from http://php.net/manual/en/function.imap-gc.php )\n *\n * Purges the cache of entries of a specific type.\n *\n * @imap_stream\n *             object  An IMAP stream returned by imap_open().\n * @caches     int     Specifies the cache to purge. It may one or a\n *                     combination of the following constants: IMAP_GC_ELT\n *                     (message cache elements), IMAP_GC_ENV (enveloppe and\n *                     bodies), IMAP_GC_TEXTS (texts).\n *\n * @return     bool    Returns TRUE.\n */",
"imap_get_quota", T(Variant), S(0), "imap_stream", T(Object), NULL, S(0), NULL, S(0), "quota_root", T(String), NULL, S(0), NULL, S(0), NULL, S(16384), "/**\n * ( excerpt from http://php.net/manual/en/function.imap-get-quota.php )\n *\n * Retrieve the quota level settings, and usage statics per mailbox.\n *\n * For a non-admin user version of this function, please see the\n * imap_get_quotaroot() function of PHP.\n *\n * @imap_stream\n *             object  An IMAP stream returned by imap_open().\n * @quota_root string  quota_root should normally be in the form of\n *                     user.name where name is the mailbox you wish to\n *                     retrieve information about.\n *\n * @return     mixed   Returns an array with integer values limit and usage\n *                     for the given mailbox. The value of limit represents\n *                     the total amount of space allowed for this mailbox.\n *                     The usage value represents the mailboxes current\n *                     level of capacity. Will return FALSE in the case of\n *                     failure.\n *\n *                     As of PHP 4.3, the function more properly reflects\n *                     the functionality as dictated by the \273 RFC2087. The\n *                     array return value has changed to support an\n *                     unlimited number of returned resources (i.e.\n *                     messages, or sub-folders) with each named resource\n *                     receiving an individual array key. Each key value\n *                     then contains an another array with the usage and\n *                     limit values within it.\n *\n *                     For backwards compatibility reasons, the original\n *                     access methods are still available for use, although\n *                     it is suggested to update.\n */",
"imap_get_quotaroot", T(Variant), S(0), "imap_stream", T(Object), NULL, S(0), NULL, S(0), "quota_root", T(String), NULL, S(0), NULL, S(0), NULL, S(16384), "/**\n * ( excerpt from http://php.net/manual/en/function.imap-get-quotaroot.php\n * )\n *\n * Retrieve the quota settings per user. The limit value represents the\n * total amount of space allowed for this user's total mailbox usage. The\n * usage value represents the user's current total mailbox capacity.\n *\n * @imap_stream\n *             object  An IMAP stream returned by imap_open().\n * @quota_root string  quota_root should normally be in the form of which\n *                     mailbox (i.e. INBOX).\n *\n * @return     mixed   Returns an array of integer values pertaining to the\n *                     specified user mailbox. All values contain a key\n *                     based upon the resource name, and a corresponding\n *                     array with the usage and limit values within.\n *\n *                     This function will return FALSE in the case of call\n *                     failure, and an array of information about the\n *                     connection upon an un-parsable response from the\n *                     server.\n */",
"imap_getacl", T(Variant), S(0), "imap_stream", T(Object), NULL, S(0), NULL, S(0), "mailbox", T(String), NULL, S(0), NULL, S(0), NULL, S(16384), "/**\n * ( excerpt from http://php.net/manual/en/function.imap-getacl.php )\n *\n * Gets the ACL for a given mailbox.\n *\n * @imap_stream\n *             object  An IMAP stream returned by imap_open().\n * @mailbox    string  The mailbox name, see imap_open() for more\n *                     information\n *\n * @return     mixed   Returns an associative array of \"folder\" => \"acl\"\n *                     pairs.\n */",
"imap_getmailboxes", T(Variant), S(0), "imap_stream", T(Object), NULL, S(0), NULL, S(0), "ref", T(String), NULL, S(0), NULL, S(0), "pattern", T(String), NULL, S(0), NULL, S(0), NULL, S(16384), "/**\n * ( excerpt from http://php.net/manual/en/function.imap-getmailboxes.php )\n *\n * Gets information on the mailboxes.\n *\n * @imap_stream\n *             object  An IMAP stream returned by imap_open().\n * @ref        string  ref should normally be just the server specification\n *                     as described in imap_open()\n * @pattern    string  Specifies where in the mailbox hierarchy to start\n *                     searching.\n *\n *                     There are two special characters you can pass as\n *                     part of the pattern: '*' and '%'. '*' means to\n *                     return all mailboxes. If you pass pattern as '*',\n *                     you will get a list of the entire mailbox hierarchy.\n *                     '%' means to return the current level only. '%' as\n *                     the pattern parameter will return only the top level\n *                     mailboxes; '~/mail/%' on UW_IMAPD will return every\n *                     mailbox in the ~/mail directory, but none in\n *                     subfolders of that directory.\n *\n * @return     mixed   Returns an array of objects containing mailbox\n *                     information. Each object has the attributes name,\n *                     specifying the full name of the mailbox; delimiter,\n *                     which is the hierarchy delimiter for the part of the\n *                     hierarchy this mailbox is in; and attributes.\n *                     Attributes is a bitmask that can be tested against:\n *\n *                     LATT_NOINFERIORS - This mailbox contains, and may\n *                     not contain any \"children\" (there are no mailboxes\n *                     below this one). Calling imap_createmailbox() will\n *                     not work on this mailbox.\n *\n *                     LATT_NOSELECT - This is only a container, not a\n *                     mailbox - you cannot open it.\n *\n *                     LATT_MARKED - This mailbox is marked. This means\n *                     that it may contain new messages since the last time\n *                     it was checked. Not provided by all IMAP servers.\n *\n *                     LATT_UNMARKED - This mailbox is not marked, does\n *                     not contain new messages. If either MARKED or\n *                     UNMARKED is provided, you can assume the IMAP server\n *                     supports this feature for this mailbox.\n */",
"imap_getsubscribed", T(Variant), S(0), "imap_stream", T(Object), NULL, S(0), NULL, S(0), "ref", T(String), NULL, S(0), NULL, S(0), "pattern", T(String), NULL, S(0), NULL, S(0), NULL, S(16384), "/**\n * ( excerpt from http://php.net/manual/en/function.imap-getsubscribed.php\n * )\n *\n * Gets information about the subscribed mailboxes.\n *\n * Identical to imap_getmailboxes(), except that it only returns mailboxes\n * that the user is subscribed to.\n *\n * @imap_stream\n *             object  An IMAP stream returned by imap_open().\n * @ref        string  ref should normally be just the server specification\n *                     as described in imap_open()\n * @pattern    string  Specifies where in the mailbox hierarchy to start\n *                     searching.\n *\n *                     There are two special characters you can pass as\n *                     part of the pattern: '*' and '%'. '*' means to\n *                     return all mailboxes. If you pass pattern as '*',\n *                     you will get a list of the entire mailbox hierarchy.\n *                     '%' means to return the current level only. '%' as\n *                     the pattern parameter will return only the top level\n *                     mailboxes; '~/mail/%' on UW_IMAPD will return every\n *                     mailbox in the ~/mail directory, but none in\n *                     subfolders of that directory.\n *\n * @return     mixed   Returns an array of objects containing mailbox\n *                     information. Each object has the attributes name,\n *                     specifying the full name of the mailbox; delimiter,\n *                     which is the hierarchy delimiter for the part of the\n *                     hierarchy this mailbox is in; and attributes.\n *                     Attributes is a bitmask that can be tested against:\n *                     LATT_NOINFERIORS - This mailbox has no \"children\"\n *                     (there are no mailboxes below this one).\n *                     LATT_NOSELECT - This is only a container, not a\n *                     mailbox - you cannot open it. LATT_MARKED - This\n *                     mailbox is marked. Only used by UW-IMAPD.\n *                     LATT_UNMARKED - This mailbox is not marked. Only\n *                     used by UW-IMAPD.\n */",
"imap_header", T(Variant), S(0), "imap_stream", T(Object), NULL, S(0), NULL, S(0), "msg_number", T(Int64), NULL, S(0), NULL, S(0), "fromlength", T(Int64), "i:0;", S(4), "0", S(0), "subjectlength", T(Int64), "i:0;", S(4), "0", S(0), "defaulthost", T(String), "s:0:\"\";", S(7), "\"\"", S(0), NULL, S(16384), "/**\n * ( excerpt from http://php.net/manual/en/function.imap-header.php )\n *\n * Gets information about the given message number by reading its headers.\n *\n * @imap_stream\n *             object  An IMAP stream returned by imap_open().\n * @msg_number int     The message number\n * @fromlength int     Number of characters for the fetchfrom property.\n *                     Must be greater than or equal to zero.\n * @subjectlength\n *             int     Number of characters for the fetchsubject property\n *                     Must be greater than or equal to zero.\n * @defaulthost\n *             string\n *\n * @return     mixed\n */",
"imap_headerinfo", T(Variant), S(0), "imap_stream", T(Object), NULL, S(0), NULL, S(0), "msg_number", T(Int64), NULL, S(0), NULL, S(0), "fromlength", T(Int64), "i:0;", S(4), "0", S(0), "subjectlength", T(Int64), "i:0;", S(4), "0", S(0), "defaulthost", T(String), "s:0:\"\";", S(7), "\"\"", S(0), NULL, S(16384), "/**\n * ( excerpt from http://php.net/manual/en/function.imap-headerinfo.php )\n *\n * Gets information about the given message number by reading its headers.\n *\n * @imap_stream\n *             object  An IMAP stream returned by imap_open().\n * @msg_number int     The message number\n * @fromlength int     Number of characters for the fetchfrom property.\n *                     Must be greater than or equal to zero.\n * @subjectlength\n *             int     Number of characters for the fetchsubject property\n *                     Must be greater than or equal to zero.\n * @defaulthost\n *             string\n *\n * @return     mixed\n */",
"imap_headers", T(Variant), S(0), "imap_stream", T(Object), NULL, S(0), NULL, S(0), NULL, S(16384), "/**\n * ( excerpt from http://php.net/manual/en/function.imap-headers.php )\n *\n * Returns headers for all messages in a mailbox.\n *\n * @imap_stream\n *             object  An IMAP stream returned by imap_open().\n *\n * @return     mixed   Returns an array of string formatted with header\n *                     info. One element per mail message.\n */",
"imap_last_error", T(Variant), S(0), NULL, S(16384), "/**\n * ( excerpt from http://php.net/manual/en/function.imap-last-error.php )\n *\n * Gets the full text of the last IMAP error message that occurred on the\n * current page. The error stack is untouched; calling imap_last_error()\n * subsequently, with no intervening errors, will return the same error.\n *\n * @return     mixed   Returns the full text of the last IMAP error message\n *                     that occurred on the current page. Returns FALSE if\n *                     no error messages are available.\n */", 
"imap_list", T(Variant), S(0), "imap_stream", T(Object), NULL, S(0), NULL, S(0), "ref", T(String), NULL, S(0), NULL, S(0), "pattern", T(String), NULL, S(0), NULL, S(0), NULL, S(16384), "/**\n * ( excerpt from http://php.net/manual/en/function.imap-list.php )\n *\n * Read the list of mailboxes.\n *\n * @imap_stream\n *             object  An IMAP stream returned by imap_open().\n * @ref        string  ref should normally be just the server specification\n *                     as described in imap_open().\n * @pattern    string  Specifies where in the mailbox hierarchy to start\n *                     searching.\n *\n *                     There are two special characters you can pass as\n *                     part of the pattern: '*' and '%'. '*' means to\n *                     return all mailboxes. If you pass pattern as '*',\n *                     you will get a list of the entire mailbox hierarchy.\n *                     '%' means to return the current level only. '%' as\n *                     the pattern parameter will return only the top level\n *                     mailboxes; '~/mail/%' on UW_IMAPD will return every\n *                     mailbox in the ~/mail directory, but none in\n *                     subfolders of that directory.\n *\n * @return     mixed   Returns an array containing the names of the\n *                     mailboxes.\n */",
"imap_listmailbox", T(Variant), S(0), "imap_stream", T(Object), NULL, S(0), NULL, S(0), "ref", T(String), NULL, S(0), NULL, S(0), "pattern", T(String), NULL, S(0), NULL, S(0), NULL, S(16384), "/**\n * ( excerpt from http://php.net/manual/en/function.imap-listmailbox.php )\n *\n * Read the list of mailboxes.\n *\n * @imap_stream\n *             object  An IMAP stream returned by imap_open().\n * @ref        string  ref should normally be just the server specification\n *                     as described in imap_open().\n * @pattern    string  Specifies where in the mailbox hierarchy to start\n *                     searching.\n *\n *                     There are two special characters you can pass as\n *                     part of the pattern: '*' and '%'. '*' means to\n *                     return all mailboxes. If you pass pattern as '*',\n *                     you will get a list of the entire mailbox hierarchy.\n *                     '%' means to return the current level only. '%' as\n *                     the pattern parameter will return only the top level\n *                     mailboxes; '~/mail/%' on UW_IMAPD will return every\n *                     mailbox in the ~/mail directory, but none in\n *                     subfolders of that directory.\n *\n * @return     mixed   Returns an array containing the names of the\n *                     mailboxes.\n */",
"imap_listscan", T(Variant), S(0), "imap_stream", T(Object), NULL, S(0), NULL, S(0), "ref", T(String), NULL, S(0), NULL, S(0), "pattern", T(String), NULL, S(0), NULL, S(0), "content", T(String), NULL, S(0), NULL, S(0), NULL, S(16384), "/**\n * ( excerpt from http://php.net/manual/en/function.imap-listscan.php )\n *\n * Returns an array containing the names of the mailboxes that have\n * content in the text of the mailbox.\n *\n * This function is similar to imap_listmailbox(), but it will\n * additionally check for the presence of the string content inside the\n * mailbox data.\n *\n * @imap_stream\n *             object  An IMAP stream returned by imap_open().\n * @ref        string  ref should normally be just the server specification\n *                     as described in imap_open()\n * @pattern    string  Specifies where in the mailbox hierarchy to start\n *                     searching.\n *\n *                     There are two special characters you can pass as\n *                     part of the pattern: '*' and '%'. '*' means to\n *                     return all mailboxes. If you pass pattern as '*',\n *                     you will get a list of the entire mailbox hierarchy.\n *                     '%' means to return the current level only. '%' as\n *                     the pattern parameter will return only the top level\n *                     mailboxes; '~/mail/%' on UW_IMAPD will return every\n *                     mailbox in the ~/mail directory, but none in\n *                     subfolders of that directory.\n * @content    string  The searched string\n *\n * @return     mixed   Returns an array containing the names of the\n *                     mailboxes that have content in the text of the\n *                     mailbox.\n */",
"imap_listsubscribed", T(Variant), S(0), "imap_stream", T(Object), NULL, S(0), NULL, S(0), "ref", T(String), NULL, S(0), NULL, S(0), "pattern", T(String), NULL, S(0), NULL, S(0), NULL, S(16384), "/**\n * ( excerpt from http://php.net/manual/en/function.imap-listsubscribed.php\n * )\n *\n * Gets an array of all the mailboxes that you have subscribed.\n *\n * @imap_stream\n *             object  An IMAP stream returned by imap_open().\n * @ref        string  ref should normally be just the server specification\n *                     as described in imap_open()\n * @pattern    string  Specifies where in the mailbox hierarchy to start\n *                     searching.\n *\n *                     There are two special characters you can pass as\n *                     part of the pattern: '*' and '%'. '*' means to\n *                     return all mailboxes. If you pass pattern as '*',\n *                     you will get a list of the entire mailbox hierarchy.\n *                     '%' means to return the current level only. '%' as\n *                     the pattern parameter will return only the top level\n *                     mailboxes; '~/mail/%' on UW_IMAPD will return every\n *                     mailbox in the ~/mail directory, but none in\n *                     subfolders of that directory.\n *\n * @return     mixed   Returns an array of all the subscribed mailboxes.\n */",
"imap_lsub", T(Variant), S(0), "imap_stream", T(Object), NULL, S(0), NULL, S(0), "ref", T(String), NULL, S(0), NULL, S(0), "pattern", T(String), NULL, S(0), NULL, S(0), NULL, S(16384), "/**\n * ( excerpt from http://php.net/manual/en/function.imap-lsub.php )\n *\n * Gets an array of all the mailboxes that you have subscribed.\n *\n * @imap_stream\n *             object  An IMAP stream returned by imap_open().\n * @ref        string  ref should normally be just the server specification\n *                     as described in imap_open()\n * @pattern    string  Specifies where in the mailbox hierarchy to start\n *                     searching.\n *\n *                     There are two special characters you can pass as\n *                     part of the pattern: '*' and '%'. '*' means to\n *                     return all mailboxes. If you pass pattern as '*',\n *                     you will get a list of the entire mailbox hierarchy.\n *                     '%' means to return the current level only. '%' as\n *                     the pattern parameter will return only the top level\n *                     mailboxes; '~/mail/%' on UW_IMAPD will return every\n *                     mailbox in the ~/mail directory, but none in\n *                     subfolders of that directory.\n *\n * @return     mixed   Returns an array of all the subscribed mailboxes.\n */",
"imap_mail_compose", T(Variant), S(0), "envelope", T(Array), NULL, S(0), NULL, S(0), "body", T(Array), NULL, S(0), NULL, S(0), NULL, S(16384), "/**\n * ( excerpt from http://php.net/manual/en/function.imap-mail-compose.php )\n *\n * Create a MIME message based on the given envelope and body sections.\n *\n * @envelope   map     An associative array of headers fields. Valid keys\n *                     are: \"remail\", \"return_path\", \"date\", \"from\",\n *                     \"reply_to\", \"in_reply_to\", \"subject\", \"to\", \"cc\",\n *                     \"bcc\", \"message_id\" and \"custom_headers\" (which\n *                     contains associative array of other headers).\n * @body       map     An indexed array of bodies\n *\n *                     A body is an associative array which can consist of\n *                     the following keys: \"type\", \"encoding\", \"charset\",\n *                     \"type.parameters\", \"subtype\", \"id\", \"description\",\n *                     \"disposition.type\", \"disposition\", \"contents.data\",\n *                     \"lines\", \"bytes\" and \"md5\".\n *\n * @return     mixed   Returns the MIME message.\n */",
"imap_mail_copy", T(Boolean), S(0), "imap_stream", T(Object), NULL, S(0), NULL, S(0), "msglist", T(String), NULL, S(0), NULL, S(0), "mailbox", T(String), NULL, S(0), NULL, S(0), "options", T(Int64), "i:0;", S(4), "0", S(0), NULL, S(16384), "/**\n * ( excerpt from http://php.net/manual/en/function.imap-mail-copy.php )\n *\n * Copies mail messages specified by msglist to specified mailbox.\n *\n * @imap_stream\n *             object  An IMAP stream returned by imap_open().\n * @msglist    string  msglist is a range not just message numbers (as\n *                     described in \273 RFC2060).\n * @mailbox    string  The mailbox name, see imap_open() for more\n *                     information\n * @options    int     options is a bitmask of one or more of CP_UID - the\n *                     sequence numbers contain UIDS CP_MOVE - Delete the\n *                     messages from the current mailbox after copying\n *\n * @return     bool    Returns TRUE on success or FALSE on failure.\n */",
"imap_mail_move", T(Boolean), S(0), "imap_stream", T(Object), NULL, S(0), NULL, S(0), "msglist", T(String), NULL, S(0), NULL, S(0), "mailbox", T(String), NULL, S(0), NULL, S(0), "options", T(Int64), "i:0;", S(4), "0", S(0), NULL, S(16384), "/**\n * ( excerpt from http://php.net/manual/en/function.imap-mail-move.php )\n *\n * Moves mail messages specified by msglist to the specified mailbox.\n *\n * @imap_stream\n *             object  An IMAP stream returned by imap_open().\n * @msglist    string  msglist is a range not just message numbers (as\n *                     described in \273 RFC2060).\n * @mailbox    string  The mailbox name, see imap_open() for more\n *                     information\n * @options    int     options is a bitmask and may contain the single\n *                     option: CP_UID - the sequence numbers contain UIDS\n *\n * @return     bool    Returns TRUE on success or FALSE on failure.\n */",
"imap_mail", T(Boolean), S(0), "to", T(String), NULL, S(0), NULL, S(0), "subject", T(String), NULL, S(0), NULL, S(0), "message", T(String), NULL, S(0), NULL, S(0), "additional_headers", T(String), "s:0:\"\";", S(7), "\"\"", S(0), "cc", T(String), "s:0:\"\";", S(7), "\"\"", S(0), "bcc", T(String), "s:0:\"\";", S(7), "\"\"", S(0), "rpath", T(String), "s:0:\"\";", S(7), "\"\"", S(0), NULL, S(16384), "/**\n * ( excerpt from http://php.net/manual/en/function.imap-mail.php )\n *\n * This function allows sending of emails with correct handling of Cc and\n * Bcc receivers.\n *\n * The parameters to, cc and bcc are all strings and are all parsed as \273\n * RFC822 address lists.\n *\n * @to         string  The receiver\n * @subject    string  The mail subject\n * @message    string  The mail body\n * @additional_headers\n *             string  As string with additional headers to be set on the\n *                     mail\n * @cc         string\n * @bcc        string  The receivers specified in bcc will get the mail,\n *                     but are excluded from the headers.\n * @rpath      string  Use this parameter to specify return path upon mail\n *                     delivery failure. This is useful when using PHP as a\n *                     mail client for multiple users.\n *\n * @return     bool    Returns TRUE on success or FALSE on failure.\n */",
"imap_mailboxmsginfo", T(Variant), S(0), "imap_stream", T(Object), NULL, S(0), NULL, S(0), NULL, S(16384), "/**\n * ( excerpt from http://php.net/manual/en/function.imap-mailboxmsginfo.php\n * )\n *\n * Checks the current mailbox status on the server. It is similar to\n * imap_status(), but will additionally sum up the size of all messages in\n * the mailbox, which will take some additional time to execute.\n *\n * @imap_stream\n *             object  An IMAP stream returned by imap_open().\n *\n * @return     mixed   Returns the information in an object with following\n *                     properties: Mailbox properties Date date of last\n *                     change (current datetime) Driver driver Mailbox name\n *                     of the mailbox Nmsgs number of messages Recent\n *                     number of recent messages Unread number of unread\n *                     messages Deleted number of deleted messages Size\n *                     mailbox size\n *\n *                     Returns FALSE on failure.\n */",
"imap_mime_header_decode", T(Variant), S(0), "text", T(String), NULL, S(0), NULL, S(0), NULL, S(16384), "/**\n * ( excerpt from\n * http://php.net/manual/en/function.imap-mime-header-decode.php )\n *\n * Decodes MIME message header extensions that are non ASCII text (see \273\n * RFC2047).\n *\n * @text       string  The MIME text\n *\n * @return     mixed   The decoded elements are returned in an array of\n *                     objects, where each object has two properties,\n *                     charset and text.\n *\n *                     If the element hasn't been encoded, and in other\n *                     words is in plain US-ASCII, the charset property of\n *                     that element is set to default.\n */",
"imap_msgno", T(Variant), S(0), "imap_stream", T(Object), NULL, S(0), NULL, S(0), "uid", T(Int64), NULL, S(0), NULL, S(0), NULL, S(16384), "/**\n * ( excerpt from http://php.net/manual/en/function.imap-msgno.php )\n *\n * Returns the message sequence number for the given uid.\n *\n * This function is the inverse of imap_uid().\n *\n * @imap_stream\n *             object  An IMAP stream returned by imap_open().\n * @uid        int     The message UID\n *\n * @return     mixed   Returns the message sequence number for the given\n *                     uid.\n */",
"imap_num_msg", T(Variant), S(0), "imap_stream", T(Object), NULL, S(0), NULL, S(0), NULL, S(16384), "/**\n * ( excerpt from http://php.net/manual/en/function.imap-num-msg.php )\n *\n * Gets the number of messages in the current mailbox.\n *\n * @imap_stream\n *             object  An IMAP stream returned by imap_open().\n *\n * @return     mixed   Return the number of messages in the current\n *                     mailbox, as an integer.\n */",
"imap_num_recent", T(Variant), S(0), "imap_stream", T(Object), NULL, S(0), NULL, S(0), NULL, S(16384), "/**\n * ( excerpt from http://php.net/manual/en/function.imap-num-recent.php )\n *\n * Gets the number of recent messages in the current mailbox.\n *\n * @imap_stream\n *             object  An IMAP stream returned by imap_open().\n *\n * @return     mixed   Returns the number of recent messages in the current\n *                     mailbox, as an integer.\n */",
"imap_open", T(Variant), S(0), "mailbox", T(String), NULL, S(0), NULL, S(0), "username", T(String), NULL, S(0), NULL, S(0), "password", T(String), NULL, S(0), NULL, S(0), "options", T(Int64), "i:0;", S(4), "0", S(0), "retries", T(Int64), "i:0;", S(4), "0", S(0), NULL, S(16384), "/**\n * ( excerpt from http://php.net/manual/en/function.imap-open.php )\n *\n * Opens an IMAP stream to a mailbox.\n *\n * This function can also be used to open streams to POP3 and NNTP\n * servers, but some functions and features are only available on IMAP\n * servers.\n *\n * @mailbox    string  A mailbox name consists of a server and a mailbox\n *                     path on this server. The special name INBOX stands\n *                     for the current users personal mailbox. Mailbox\n *                     names that contain international characters besides\n *                     those in the printable ASCII space have to be\n *                     encoded width imap_utf7_encode().\n *\n *                     The server part, which is enclosed in '{' and '}',\n *                     consists of the servers name or ip address, an\n *                     optional port (prefixed by ':'), and an optional\n *                     protocol specification (prefixed by '/').\n *\n *                     The server part is mandatory in all mailbox\n *                     parameters.\n *\n *                     All names which start with { are remote names, and\n *                     are in the form \"{\" remote_system_name [\":\" port]\n *                     [flags] \"}\" [mailbox_name] where: remote_system_name\n *                     - Internet domain name or bracketed IP address of\n *                     server. port - optional TCP port number, default is\n *                     the default port for that service flags - optional\n *                     flags, see following table. mailbox_name - remote\n *                     mailbox name, default is INBOX\n *\n *                     Optional flags for names Flag Description\n *                     /service=service mailbox access service, default is\n *                     \"imap\" /user=user remote user name for login on the\n *                     server /authuser=user remote authentication user; if\n *                     specified this is the user name whose password is\n *                     used (e.g. administrator) /anonymous remote access\n *                     as anonymous user /debug record protocol telemetry\n *                     in application's debug log /secure do not transmit a\n *                     plaintext password over the network /imap, /imap2,\n *                     /imap2bis, /imap4, /imap4rev1 equivalent to\n *                     /service=imap /pop3 equivalent to /service=pop3\n *                     /nntp equivalent to /service=nntp /norsh do not use\n *                     rsh or ssh to establish a preauthenticated IMAP\n *                     session /ssl use the Secure Socket Layer to encrypt\n *                     the session /validate-cert validate certificates\n *                     from TLS/SSL server (this is the default behavior)\n *                     /novalidate-cert do not validate certificates from\n *                     TLS/SSL server, needed if server uses self-signed\n *                     certificates /tls force use of start-TLS to encrypt\n *                     the session, and reject connection to servers that\n *                     do not support it /notls do not do start-TLS to\n *                     encrypt the session, even with servers that support\n *                     it /readonly request read-only mailbox open (IMAP\n *                     only; ignored on NNTP, and an error with SMTP and\n *                     POP3)\n * @username   string  The user name\n * @password   string  The password associated with the username\n * @options    int     The options are a bit mask with one or more of the\n *                     following: OP_READONLY - Open mailbox read-only\n *                     OP_ANONYMOUS - Don't use or update a .newsrc for\n *                     news (NNTP only) OP_HALFOPEN - For IMAP and NNTP\n *                     names, open a connection but don't open a mailbox.\n *                     CL_EXPUNGE - Expunge mailbox automatically upon\n *                     mailbox close (see also imap_delete() and\n *                     imap_expunge()) OP_DEBUG - Debug protocol\n *                     negotiations OP_SHORTCACHE - Short (elt-only)\n *                     caching OP_SILENT - Don't pass up events (internal\n *                     use) OP_PROTOTYPE - Return driver prototype\n *                     OP_SECURE - Don't do non-secure authentication\n * @retries    int     Number of maximum connect attempts\n *\n * @return     mixed   Returns an IMAP stream on success or FALSE on error.\n */",
"imap_ping", T(Boolean), S(0), "imap_stream", T(Object), NULL, S(0), NULL, S(0), NULL, S(16384), "/**\n * ( excerpt from http://php.net/manual/en/function.imap-ping.php )\n *\n * imap_ping() pings the stream to see if it's still active. It may\n * discover new mail; this is the preferred method for a periodic \"new mail\n * check\" as well as a \"keep alive\" for servers which have inactivity\n * timeout.\n *\n * @imap_stream\n *             object  An IMAP stream returned by imap_open().\n *\n * @return     bool    Returns TRUE if the stream is still alive, FALSE\n *                     otherwise.\n */",
"imap_qprint", T(Variant), S(0), "str", T(String), NULL, S(0), NULL, S(0), NULL, S(16384), "/**\n * ( excerpt from http://php.net/manual/en/function.imap-qprint.php )\n *\n * Convert a quoted-printable string to an 8 bit string according to \273\n * RFC2045, section 6.7.\n *\n * @str        string  A quoted-printable string\n *\n * @return     mixed   Returns an 8 bits string.\n */",
"imap_renamemailbox", T(Boolean), S(0), "imap_stream", T(Object), NULL, S(0), NULL, S(0), "old_mbox", T(String), NULL, S(0), NULL, S(0), "new_mbox", T(String), NULL, S(0), NULL, S(0), NULL, S(16384), "/**\n * ( excerpt from http://php.net/manual/en/function.imap-renamemailbox.php\n * )\n *\n * This function renames on old mailbox to new mailbox (see imap_open()\n * for the format of mbox names).\n *\n * @imap_stream\n *             object  An IMAP stream returned by imap_open().\n * @old_mbox   string  The old mailbox name, see imap_open() for more\n *                     information\n * @new_mbox   string  The new mailbox name, see imap_open() for more\n *                     information\n *\n * @return     bool    Returns TRUE on success or FALSE on failure.\n */",
"imap_reopen", T(Boolean), S(0), "imap_stream", T(Object), NULL, S(0), NULL, S(0), "mailbox", T(String), NULL, S(0), NULL, S(0), "options", T(Int64), "i:0;", S(4), "0", S(0), "retries", T(Int64), "i:0;", S(4), "0", S(0), NULL, S(16384), "/**\n * ( excerpt from http://php.net/manual/en/function.imap-reopen.php )\n *\n * Reopens the specified stream to a new mailbox on an IMAP or NNTP\n * server.\n *\n * @imap_stream\n *             object  An IMAP stream returned by imap_open().\n * @mailbox    string  The mailbox name, see imap_open() for more\n *                     information\n * @options    int     The options are a bit mask with one or more of the\n *                     following: OP_READONLY - Open mailbox read-only\n *                     OP_ANONYMOUS - Don't use or update a .newsrc for\n *                     news (NNTP only) OP_HALFOPEN - For IMAP and NNTP\n *                     names, open a connection but don't open a mailbox.\n *                     OP_EXPUNGE - Silently expunge recycle stream\n *                     CL_EXPUNGE - Expunge mailbox automatically upon\n *                     mailbox close (see also imap_delete() and\n *                     imap_expunge())\n * @retries    int     Number of maximum connect attempts\n *\n * @return     bool    Returns TRUE if the stream is reopened, FALSE\n *                     otherwise.\n */",
"imap_rfc822_parse_adrlist", T(Variant), S(0), "address", T(String), NULL, S(0), NULL, S(0), "default_host", T(String), NULL, S(0), NULL, S(0), NULL, S(16384), "/**\n * ( excerpt from\n * http://php.net/manual/en/function.imap-rfc822-parse-adrlist.php )\n *\n * Parses the address string as defined in \273 RFC2822 and for each address.\n *\n * @address    string  A string containing addresses\n * @default_host\n *             string  The default host name\n *\n * @return     mixed   Returns an array of objects. The objects properties\n *                     are:\n *\n *                     mailbox - the mailbox name (username) host - the\n *                     host name personal - the personal name adl - at\n *                     domain source route\n */",
"imap_rfc822_parse_headers", T(Variant), S(0), "headers", T(String), NULL, S(0), NULL, S(0), "defaulthost", T(String), "s:0:\"\";", S(7), "\"\"", S(0), NULL, S(16384), "/**\n * ( excerpt from\n * http://php.net/manual/en/function.imap-rfc822-parse-headers.php )\n *\n * Gets an object of various header elements, similar to imap_header().\n *\n * @headers    string  The parsed headers data\n * @defaulthost\n *             string  The default host name\n *\n * @return     mixed   Returns an object similar to the one returned by\n *                     imap_header(), except for the flags and other\n *                     properties that come from the IMAP server.\n */",
"imap_rfc822_write_address", T(Variant), S(0), "mailbox", T(String), NULL, S(0), NULL, S(0), "host", T(String), NULL, S(0), NULL, S(0), "personal", T(String), NULL, S(0), NULL, S(0), NULL, S(16384), "/**\n * ( excerpt from\n * http://php.net/manual/en/function.imap-rfc822-write-address.php )\n *\n * Returns a properly formatted email address as defined in \273 RFC2822\n * given the needed information.\n *\n * @mailbox    string  The mailbox name, see imap_open() for more\n *                     information\n * @host       string  The email host part\n * @personal   string  The name of the account owner\n *\n * @return     mixed   Returns a string properly formatted email address as\n *                     defined in \273 RFC2822.\n */",
"imap_savebody", T(Boolean), S(0), "imap_stream", T(Object), NULL, S(0), NULL, S(0), "file", T(Variant), NULL, S(0), NULL, S(0), "msg_number", T(Int64), NULL, S(0), NULL, S(0), "part_number", T(String), "s:0:\"\";", S(7), "\"\"", S(0), "options", T(Int64), "i:0;", S(4), "0", S(0), NULL, S(16384), "/**\n * ( excerpt from http://php.net/manual/en/function.imap-savebody.php )\n *\n * Saves a part or the whole body of the specified message.\n *\n * @imap_stream\n *             object  An IMAP stream returned by imap_open().\n * @file       mixed   The path to the saved file as a string, or a valid\n *                     file descriptor returned by fopen().\n * @msg_number int     The message number\n * @part_number\n *             string  The part number. It is a string of integers\n *                     delimited by period which index into a body part\n *                     list as per the IMAP4 specification\n * @options    int     A bitmask with one or more of the following: FT_UID\n *                     - The msg_number is a UID FT_PEEK - Do not set the\n *                     \\Seen flag if not already set FT_INTERNAL - The\n *                     return string is in internal format, will not\n *                     canonicalize to CRLF.\n *\n * @return     bool    Returns TRUE on success or FALSE on failure.\n */",
"imap_scanmailbox", T(Variant), S(0), "imap_stream", T(Object), NULL, S(0), NULL, S(0), "ref", T(String), NULL, S(0), NULL, S(0), "pattern", T(String), NULL, S(0), NULL, S(0), "content", T(String), NULL, S(0), NULL, S(0), NULL, S(16384), "/**\n * ( excerpt from http://php.net/manual/en/function.imap-scanmailbox.php )\n *\n * Returns an array containing the names of the mailboxes that have\n * content in the text of the mailbox.\n *\n * This function is similar to imap_listmailbox(), but it will\n * additionally check for the presence of the string content inside the\n * mailbox data.\n *\n * @imap_stream\n *             object  An IMAP stream returned by imap_open().\n * @ref        string  ref should normally be just the server specification\n *                     as described in imap_open()\n * @pattern    string  Specifies where in the mailbox hierarchy to start\n *                     searching.\n *\n *                     There are two special characters you can pass as\n *                     part of the pattern: '*' and '%'. '*' means to\n *                     return all mailboxes. If you pass pattern as '*',\n *                     you will get a list of the entire mailbox hierarchy.\n *                     '%' means to return the current level only. '%' as\n *                     the pattern parameter will return only the top level\n *                     mailboxes; '~/mail/%' on UW_IMAPD will return every\n *                     mailbox in the ~/mail directory, but none in\n *                     subfolders of that directory.\n * @content    string  The searched string\n *\n * @return     mixed   Returns an array containing the names of the\n *                     mailboxes that have content in the text of the\n *                     mailbox.\n */",
"imap_search", T(Variant), S(0), "imap_stream", T(Object), NULL, S(0), NULL, S(0), "criteria", T(String), NULL, S(0), NULL, S(0), "options", T(Int64), "i:0;", S(4), "0", S(0), "charset", T(String), "s:0:\"\";", S(7), "\"\"", S(0), NULL, S(16384), "/**\n * ( excerpt from http://php.net/manual/en/function.imap-search.php )\n *\n * This function performs a search on the mailbox currently opened in the\n * given IMAP stream.\n *\n * For example, to match all unanswered messages sent by Mom, you'd use:\n * \"UNANSWERED FROM mom\". Searches appear to be case insensitive. This list\n * of criteria is from a reading of the UW c-client source code and may be\n * incomplete or inaccurate (see also \273 RFC2060, section 6.4.4).\n *\n * @imap_stream\n *             object  An IMAP stream returned by imap_open().\n * @criteria   string  A string, delimited by spaces, in which the\n *                     following keywords are allowed. Any multi-word\n *                     arguments (e.g. FROM \"joey smith\") must be quoted.\n *                     ALL - return all messages matching the rest of the\n *                     criteria ANSWERED - match messages with the\n *                     \\\\ANSWERED flag set BCC \"string\" - match messages\n *                     with \"string\" in the Bcc: field BEFORE \"date\" -\n *                     match messages with Date: before \"date\" BODY\n *                     \"string\" - match messages with \"string\" in the body\n *                     of the message CC \"string\" - match messages with\n *                     \"string\" in the Cc: field DELETED - match deleted\n *                     messages FLAGGED - match messages with the \\\\FLAGGED\n *                     (sometimes referred to as Important or Urgent) flag\n *                     set FROM \"string\" - match messages with \"string\" in\n *                     the From: field KEYWORD \"string\" - match messages\n *                     with \"string\" as a keyword NEW - match new messages\n *                     OLD - match old messages ON \"date\" - match messages\n *                     with Date: matching \"date\" RECENT - match messages\n *                     with the \\\\RECENT flag set SEEN - match messages\n *                     that have been read (the \\\\SEEN flag is set) SINCE\n *                     \"date\" - match messages with Date: after \"date\"\n *                     SUBJECT \"string\" - match messages with \"string\" in\n *                     the Subject: TEXT \"string\" - match messages with\n *                     text \"string\" TO \"string\" - match messages with\n *                     \"string\" in the To: UNANSWERED - match messages that\n *                     have not been answered UNDELETED - match messages\n *                     that are not deleted UNFLAGGED - match messages that\n *                     are not flagged UNKEYWORD \"string\" - match messages\n *                     that do not have the keyword \"string\" UNSEEN - match\n *                     messages which have not been read yet\n * @options    int     Valid values for options are SE_UID, which causes\n *                     the returned array to contain UIDs instead of\n *                     messages sequence numbers.\n * @charset    string\n *\n * @return     mixed   Returns an array of message numbers or UIDs.\n *\n *                     Return FALSE if it does not understand the search\n *                     criteria or no messages have been found.\n */",
"imap_set_quota", T(Boolean), S(0), "imap_stream", T(Object), NULL, S(0), NULL, S(0), "quota_root", T(String), NULL, S(0), NULL, S(0), "quota_limit", T(Int64), NULL, S(0), NULL, S(0), NULL, S(16384), "/**\n * ( excerpt from http://php.net/manual/en/function.imap-set-quota.php )\n *\n * Sets an upper limit quota on a per mailbox basis.\n *\n * @imap_stream\n *             object  An IMAP stream returned by imap_open().\n * @quota_root string  The mailbox to have a quota set. This should follow\n *                     the IMAP standard format for a mailbox: user.name.\n * @quota_limit\n *             int     The maximum size (in KB) for the quota_root\n *\n * @return     bool    Returns TRUE on success or FALSE on failure.\n */",
"imap_setacl", T(Boolean), S(0), "imap_stream", T(Object), NULL, S(0), NULL, S(0), "mailbox", T(String), NULL, S(0), NULL, S(0), "id", T(String), NULL, S(0), NULL, S(0), "rights", T(String), NULL, S(0), NULL, S(0), NULL, S(16384), "/**\n * ( excerpt from http://php.net/manual/en/function.imap-setacl.php )\n *\n * Sets the ACL for a giving mailbox.\n *\n * @imap_stream\n *             object  An IMAP stream returned by imap_open().\n * @mailbox    string  The mailbox name, see imap_open() for more\n *                     information\n * @id         string  The user to give the rights to.\n * @rights     string  The rights to give to the user. Passing an empty\n *                     string will delete acl.\n *\n * @return     bool    Returns TRUE on success or FALSE on failure.\n */",
"imap_setflag_full", T(Boolean), S(0), "imap_stream", T(Object), NULL, S(0), NULL, S(0), "sequence", T(String), NULL, S(0), NULL, S(0), "flag", T(String), NULL, S(0), NULL, S(0), "options", T(Int64), "i:0;", S(4), "0", S(0), NULL, S(16384), "/**\n * ( excerpt from http://php.net/manual/en/function.imap-setflag-full.php )\n *\n * Causes a store to add the specified flag to the flags set for the\n * messages in the specified sequence.\n *\n * @imap_stream\n *             object  An IMAP stream returned by imap_open().\n * @sequence   string  A sequence of message numbers. You can enumerate\n *                     desired messages with the X,Y syntax, or retrieve\n *                     all messages within an interval with the X:Y syntax\n * @flag       string  The flags which you can set are \\Seen, \\Answered,\n *                     \\Flagged, \\Deleted, and \\Draft as defined by \273\n *                     RFC2060.\n * @options    int     A bit mask that may contain the single option:\n *                     ST_UID - The sequence argument contains UIDs instead\n *                     of sequence numbers\n *\n * @return     bool    Returns TRUE on success or FALSE on failure.\n */",
"imap_sort", T(Variant), S(0), "imap_stream", T(Object), NULL, S(0), NULL, S(0), "criteria", T(Int64), NULL, S(0), NULL, S(0), "reverse", T(Int64), NULL, S(0), NULL, S(0), "options", T(Int64), "i:0;", S(4), "0", S(0), "search_criteria", T(String), "s:0:\"\";", S(7), "\"\"", S(0), "charset", T(String), "s:0:\"\";", S(7), "\"\"", S(0), NULL, S(16384), "/**\n * ( excerpt from http://php.net/manual/en/function.imap-sort.php )\n *\n * Gets and sorts message numbers by the given parameters.\n *\n * @imap_stream\n *             object  An IMAP stream returned by imap_open().\n * @criteria   int     Criteria can be one (and only one) of the following:\n *                     SORTDATE - message Date SORTARRIVAL - arrival date\n *                     SORTFROM - mailbox in first From address SORTSUBJECT\n *                     - message subject SORTTO - mailbox in first To\n *                     address SORTCC - mailbox in first cc address\n *                     SORTSIZE - size of message in octets\n * @reverse    int     Set this to 1 for reverse sorting\n * @options    int     The options are a bitmask of one or more of the\n *                     following: SE_UID - Return UIDs instead of sequence\n *                     numbers SE_NOPREFETCH - Don't prefetch searched\n *                     messages\n * @search_criteria\n *             string\n * @charset    string\n *\n * @return     mixed   Returns an array of message numbers sorted by the\n *                     given parameters.\n */",
"imap_status", T(Variant), S(0), "imap_stream", T(Object), NULL, S(0), NULL, S(0), "mailbox", T(String), NULL, S(0), NULL, S(0), "options", T(Int64), "i:0;", S(4), "0", S(0), NULL, S(16384), "/**\n * ( excerpt from http://php.net/manual/en/function.imap-status.php )\n *\n * Gets status information about the given mailbox.\n *\n * @imap_stream\n *             object  An IMAP stream returned by imap_open().\n * @mailbox    string  The mailbox name, see imap_open() for more\n *                     information\n * @options    int     Valid flags are: SA_MESSAGES - set $status->messages\n *                     to the number of messages in the mailbox SA_RECENT -\n *                     set $status->recent to the number of recent messages\n *                     in the mailbox SA_UNSEEN - set $status->unseen to\n *                     the number of unseen (new) messages in the mailbox\n *                     SA_UIDNEXT - set $status->uidnext to the next uid to\n *                     be used in the mailbox SA_UIDVALIDITY - set\n *                     $status->uidvalidity to a constant that changes when\n *                     uids for the mailbox may no longer be valid SA_ALL -\n *                     set all of the above\n *\n * @return     mixed   This function returns an object containing status\n *                     information. The object has the following\n *                     properties: messages, recent, unseen, uidnext, and\n *                     uidvalidity.\n *\n *                     flags is also set, which contains a bitmask which\n *                     can be checked against any of the above constants.\n */",
"imap_subscribe", T(Boolean), S(0), "imap_stream", T(Object), NULL, S(0), NULL, S(0), "mailbox", T(String), NULL, S(0), NULL, S(0), NULL, S(16384), "/**\n * ( excerpt from http://php.net/manual/en/function.imap-subscribe.php )\n *\n * Subscribe to a new mailbox.\n *\n * @imap_stream\n *             object  An IMAP stream returned by imap_open().\n * @mailbox    string  The mailbox name, see imap_open() for more\n *                     information\n *\n * @return     bool    Returns TRUE on success or FALSE on failure.\n */",
"imap_thread", T(Variant), S(0), "imap_stream", T(Object), NULL, S(0), NULL, S(0), "options", T(Int64), "i:0;", S(4), "0", S(0), NULL, S(16384), "/**\n * ( excerpt from http://php.net/manual/en/function.imap-thread.php )\n *\n * Gets a tree of a threaded message.\n *\n * @imap_stream\n *             object  An IMAP stream returned by imap_open().\n * @options    int\n *\n * @return     mixed   imap_thread() returns an associative array\n *                     containing a tree of messages threaded by\n *                     REFERENCES, or FALSE on error.\n *\n *                     Every message in the current mailbox will be\n *                     represented by three entries in the resulting array:\n *\n *                     $thread[\"XX.num\"] - current message number\n *\n *                     $thread[\"XX.next\"]\n *\n *                     $thread[\"XX.branch\"]\n */",
"imap_timeout", T(Variant), S(0), "timeout_type", T(Int64), NULL, S(0), NULL, S(0), "timeout", T(Int64), "i:-1;", S(5), "-1", S(0), NULL, S(16384), "/**\n * ( excerpt from http://php.net/manual/en/function.imap-timeout.php )\n *\n * Sets or fetches the imap timeout.\n *\n * @timeout_type\n *             int     One of the following: IMAP_OPENTIMEOUT,\n *                     IMAP_READTIMEOUT, IMAP_WRITETIMEOUT, or\n *                     IMAP_CLOSETIMEOUT.\n * @timeout    int     The timeout, in seconds.\n *\n * @return     mixed   If the timeout parameter is set, this function\n *                     returns TRUE on success and FALSE on failure.\n *\n *                     If timeout is not provided or evaluates to -1, the\n *                     current timeout value of timeout_type is returned as\n *                     an integer.\n */",
"imap_uid", T(Variant), S(0), "imap_stream", T(Object), NULL, S(0), NULL, S(0), "msg_number", T(Int64), NULL, S(0), NULL, S(0), NULL, S(16384), "/**\n * ( excerpt from http://php.net/manual/en/function.imap-uid.php )\n *\n * This function returns the UID for the given message sequence number. An\n * UID is a unique identifier that will not change over time while a\n * message sequence number may change whenever the content of the mailbox\n * changes.\n *\n * This function is the inverse of imap_msgno().\n *\n * @imap_stream\n *             object  An IMAP stream returned by imap_open().\n * @msg_number int     The message number.\n *\n * @return     mixed   The UID of the given message.\n */",
"imap_undelete", T(Boolean), S(0), "imap_stream", T(Object), NULL, S(0), NULL, S(0), "msg_number", T(String), NULL, S(0), NULL, S(0), "flags", T(Int64), "i:0;", S(4), "0", S(0), NULL, S(16384), "/**\n * ( excerpt from http://php.net/manual/en/function.imap-undelete.php )\n *\n * Removes the deletion flag for a specified message, which is set by\n * imap_delete() or imap_mail_move().\n *\n * @imap_stream\n *             object  An IMAP stream returned by imap_open().\n * @msg_number string  The message number\n * @flags      int\n *\n * @return     bool    Returns TRUE on success or FALSE on failure.\n */",
"imap_unsubscribe", T(Boolean), S(0), "imap_stream", T(Object), NULL, S(0), NULL, S(0), "mailbox", T(String), NULL, S(0), NULL, S(0), NULL, S(16384), "/**\n * ( excerpt from http://php.net/manual/en/function.imap-unsubscribe.php )\n *\n * Unsubscribe from the specified mailbox.\n *\n * @imap_stream\n *             object  An IMAP stream returned by imap_open().\n * @mailbox    string  The mailbox name, see imap_open() for more\n *                     information\n *\n * @return     bool    Returns TRUE on success or FALSE on failure.\n */",
"imap_utf7_decode", T(Variant), S(0), "text", T(String), NULL, S(0), NULL, S(0), NULL, S(16384), "/**\n * ( excerpt from http://php.net/manual/en/function.imap-utf7-decode.php )\n *\n * Decodes modified UTF-7 text into ISO-8859-1 string.\n *\n * This function is needed to decode mailbox names that contain certain\n * characters which are not in range of printable ASCII characters.\n *\n * @text       string  A modified UTF-7 encoding string, as defined in \273\n *                     RFC 2060, section 5.1.3 (original UTF-7 was defined\n *                     in \273 RFC1642).\n *\n * @return     mixed   Returns a string that is encoded in ISO-8859-1 and\n *                     consists of the same sequence of characters in text,\n *                     or FALSE if text contains invalid modified UTF-7\n *                     sequence or text contains a character that is not\n *                     part of ISO-8859-1 character set.\n */",
"imap_utf7_encode", T(Variant), S(0), "data", T(String), NULL, S(0), NULL, S(0), NULL, S(16384), "/**\n * ( excerpt from http://php.net/manual/en/function.imap-utf7-encode.php )\n *\n * Converts data to modified UTF-7 text.\n *\n * This is needed to encode mailbox names that contain certain characters\n * which are not in range of printable ASCII characters.\n *\n * @data       string  An ISO-8859-1 string.\n *\n * @return     mixed   Returns data encoded with the modified UTF-7\n *                     encoding as defined in \273 RFC 2060, section 5.1.3\n *                     (original UTF-7 was defined in \273 RFC1642).\n */",
"imap_utf8", T(Variant), S(0), "mime_encoded_text", T(String), NULL, S(0), NULL, S(0), NULL, S(16384), "/**\n * ( excerpt from http://php.net/manual/en/function.imap-utf8.php )\n *\n * Converts the given mime_encoded_text to UTF-8.\n *\n * @mime_encoded_text\n *             string  A MIME encoded string. MIME encoding method and the\n *                     UTF-8 specification are described in \273 RFC2047 and \273\n *                     RFC2044 respectively.\n *\n * @return     mixed   Returns an UTF-8 encoded string.\n */",

#elif EXT_TYPE == 1

#elif EXT_TYPE == 2

#endif
