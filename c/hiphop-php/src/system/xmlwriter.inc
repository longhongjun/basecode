// @generated by "php idl.php inc {input.idl.php} {output.inc}"

#if EXT_TYPE == 0
"xmlwriter_open_memory", T(Variant), S(0), NULL, S(16384), "/**\n * ( excerpt from\n * http://php.net/manual/en/function.xmlwriter-open-memory.php )\n *\n * Creates a new XMLWriter using memory for string output.\n *\n * @return     mixed   Object oriented style: Returns TRUE on success or\n *                     FALSE on failure.\n *\n *                     Procedural style: Returns a new xmlwriter resource\n *                     for later use with the xmlwriter functions on\n *                     success, FALSE on error.\n */", 
"xmlwriter_open_uri", T(Object), S(0), "uri", T(String), NULL, S(0), NULL, S(0), NULL, S(16384), "/**\n * ( excerpt from http://php.net/manual/en/function.xmlwriter-open-uri.php\n * )\n *\n * Creates a new XMLWriter using uri for the output.\n *\n * @uri        string  The URI of the resource for the output.\n *\n * @return     resource\n *                     Object oriented style: Returns TRUE on success or\n *                     FALSE on failure.\n *\n *                     Procedural style: Returns a new xmlwriter resource\n *                     for later use with the xmlwriter functions on\n *                     success, FALSE on error.\n */",
"xmlwriter_set_indent_string", T(Boolean), S(0), "xmlwriter", T(Object), NULL, S(0), NULL, S(0), "indentstring", T(String), NULL, S(0), NULL, S(0), NULL, S(16384), "/**\n * ( excerpt from\n * http://php.net/manual/en/function.xmlwriter-set-indent-string.php )\n *\n * Sets the string which will be used to indent each element/attribute of\n * the resulting xml.\n *\n * @xmlwriter  resource\n *                     Only for procedural calls. The XMLWriter resource\n *                     that is being modified. This resource comes from a\n *                     call to xmlwriter_open_uri() or\n *                     xmlwriter_open_memory().\n * @indentstring\n *             string  The indentation string.\n *\n * @return     bool    Returns TRUE on success or FALSE on failure.\n */",
"xmlwriter_set_indent", T(Boolean), S(0), "xmlwriter", T(Object), NULL, S(0), NULL, S(0), "indent", T(Boolean), NULL, S(0), NULL, S(0), NULL, S(16384), "/**\n * ( excerpt from\n * http://php.net/manual/en/function.xmlwriter-set-indent.php )\n *\n * Toggles indentation on or off.\n *\n * @xmlwriter  resource\n *                     Only for procedural calls. The XMLWriter resource\n *                     that is being modified. This resource comes from a\n *                     call to xmlwriter_open_uri() or\n *                     xmlwriter_open_memory().\n * @indent     bool    Whether indentation is enabled.\n *\n * @return     bool    Returns TRUE on success or FALSE on failure.\n */",
"xmlwriter_start_document", T(Boolean), S(0), "xmlwriter", T(Object), NULL, S(0), NULL, S(0), "version", T(String), "s:3:\"1.0\";", S(10), "\"1.0\"", S(0), "encoding", T(String), "N;", S(2), "null", S(0), "standalone", T(String), "N;", S(2), "null", S(0), NULL, S(16384), "/**\n * ( excerpt from\n * http://php.net/manual/en/function.xmlwriter-start-document.php )\n *\n * Starts a document.\n *\n * @xmlwriter  resource\n *                     Only for procedural calls. The XMLWriter resource\n *                     that is being modified. This resource comes from a\n *                     call to xmlwriter_open_uri() or\n *                     xmlwriter_open_memory().\n * @version    string  The version number of the document as part of the\n *                     XML declaration. Defaults to 1.0.\n * @encoding   string  The encoding of the document as part of the XML\n *                     declaration. NULL by default.\n * @standalone string  yes or no.\n *\n * @return     bool    Returns TRUE on success or FALSE on failure.\n */",
"xmlwriter_start_element", T(Boolean), S(0), "xmlwriter", T(Object), NULL, S(0), NULL, S(0), "name", T(String), NULL, S(0), NULL, S(0), NULL, S(16384), "/**\n * ( excerpt from\n * http://php.net/manual/en/function.xmlwriter-start-element.php )\n *\n * Starts an element.\n *\n * @xmlwriter  resource\n *                     Only for procedural calls. The XMLWriter resource\n *                     that is being modified. This resource comes from a\n *                     call to xmlwriter_open_uri() or\n *                     xmlwriter_open_memory().\n * @name       string  The element name.\n *\n * @return     bool    Returns TRUE on success or FALSE on failure.\n */",
"xmlwriter_start_element_ns", T(Boolean), S(0), "xmlwriter", T(Object), NULL, S(0), NULL, S(0), "prefix", T(String), NULL, S(0), NULL, S(0), "name", T(String), NULL, S(0), NULL, S(0), "uri", T(String), NULL, S(0), NULL, S(0), NULL, S(16384), "/**\n * ( excerpt from\n * http://php.net/manual/en/function.xmlwriter-start-element-ns.php )\n *\n * Starts a namespaced element.\n *\n * @xmlwriter  resource\n *                     Only for procedural calls. The XMLWriter resource\n *                     that is being modified. This resource comes from a\n *                     call to xmlwriter_open_uri() or\n *                     xmlwriter_open_memory().\n * @prefix     string  The namespace prefix.\n * @name       string  The element name.\n * @uri        string  The namespace URI.\n *\n * @return     bool    Returns TRUE on success or FALSE on failure.\n */",
"xmlwriter_write_element_ns", T(Boolean), S(0), "xmlwriter", T(Object), NULL, S(0), NULL, S(0), "prefix", T(String), NULL, S(0), NULL, S(0), "name", T(String), NULL, S(0), NULL, S(0), "uri", T(String), NULL, S(0), NULL, S(0), "content", T(String), "N;", S(2), "null", S(0), NULL, S(16384), "/**\n * ( excerpt from\n * http://php.net/manual/en/function.xmlwriter-write-element-ns.php )\n *\n * Writes a full namespaced element tag.\n *\n * @xmlwriter  resource\n *                     Only for procedural calls. The XMLWriter resource\n *                     that is being modified. This resource comes from a\n *                     call to xmlwriter_open_uri() or\n *                     xmlwriter_open_memory().\n * @prefix     string  The namespace prefix.\n * @name       string  The element name.\n * @uri        string  The namespace URI.\n * @content    string  The element contents.\n *\n * @return     bool    Returns TRUE on success or FALSE on failure.\n */",
"xmlwriter_write_element", T(Boolean), S(0), "xmlwriter", T(Object), NULL, S(0), NULL, S(0), "name", T(String), NULL, S(0), NULL, S(0), "content", T(String), "N;", S(2), "null", S(0), NULL, S(16384), "/**\n * ( excerpt from\n * http://php.net/manual/en/function.xmlwriter-write-element.php )\n *\n * Writes a full element tag.\n *\n * @xmlwriter  resource\n *                     Only for procedural calls. The XMLWriter resource\n *                     that is being modified. This resource comes from a\n *                     call to xmlwriter_open_uri() or\n *                     xmlwriter_open_memory().\n * @name       string  The element name.\n * @content    string  The element contents.\n *\n * @return     bool    Returns TRUE on success or FALSE on failure.\n */",
"xmlwriter_end_element", T(Boolean), S(0), "xmlwriter", T(Object), NULL, S(0), NULL, S(0), NULL, S(16384), "/**\n * ( excerpt from\n * http://php.net/manual/en/function.xmlwriter-end-element.php )\n *\n * Ends the current element.\n *\n * @xmlwriter  resource\n *                     Only for procedural calls. The XMLWriter resource\n *                     that is being modified. This resource comes from a\n *                     call to xmlwriter_open_uri() or\n *                     xmlwriter_open_memory().\n *\n * @return     bool    Returns TRUE on success or FALSE on failure.\n */",
"xmlwriter_full_end_element", T(Boolean), S(0), "xmlwriter", T(Object), NULL, S(0), NULL, S(0), NULL, S(16384), "/**\n * ( excerpt from\n * http://php.net/manual/en/function.xmlwriter-full-end-element.php )\n *\n * End the current xml element. Writes an end tag even if the element is\n * empty.\n *\n * @xmlwriter  resource\n *                     Only for procedural calls. The XMLWriter resource\n *                     that is being modified. This resource comes from a\n *                     call to xmlwriter_open_uri() or\n *                     xmlwriter_open_memory().\n *\n * @return     bool    Returns TRUE on success or FALSE on failure.\n */",
"xmlwriter_start_attribute_ns", T(Boolean), S(0), "xmlwriter", T(Object), NULL, S(0), NULL, S(0), "prefix", T(String), NULL, S(0), NULL, S(0), "name", T(String), NULL, S(0), NULL, S(0), "uri", T(String), NULL, S(0), NULL, S(0), NULL, S(16384), "/**\n * ( excerpt from\n * http://php.net/manual/en/function.xmlwriter-start-attribute-ns.php )\n *\n * Starts a namespaced attribute.\n *\n * @xmlwriter  resource\n *                     Only for procedural calls. The XMLWriter resource\n *                     that is being modified. This resource comes from a\n *                     call to xmlwriter_open_uri() or\n *                     xmlwriter_open_memory().\n * @prefix     string  The namespace prefix.\n * @name       string  The attribute name.\n * @uri        string  The namespace URI.\n *\n * @return     bool    Returns TRUE on success or FALSE on failure.\n */",
"xmlwriter_start_attribute", T(Boolean), S(0), "xmlwriter", T(Object), NULL, S(0), NULL, S(0), "name", T(String), NULL, S(0), NULL, S(0), NULL, S(16384), "/**\n * ( excerpt from\n * http://php.net/manual/en/function.xmlwriter-start-attribute.php )\n *\n * Starts an attribute.\n *\n * @xmlwriter  resource\n *                     Only for procedural calls. The XMLWriter resource\n *                     that is being modified. This resource comes from a\n *                     call to xmlwriter_open_uri() or\n *                     xmlwriter_open_memory().\n * @name       string  The attribute name.\n *\n * @return     bool    Returns TRUE on success or FALSE on failure.\n */",
"xmlwriter_write_attribute_ns", T(Boolean), S(0), "xmlwriter", T(Object), NULL, S(0), NULL, S(0), "prefix", T(String), NULL, S(0), NULL, S(0), "name", T(String), NULL, S(0), NULL, S(0), "uri", T(String), NULL, S(0), NULL, S(0), "content", T(String), NULL, S(0), NULL, S(0), NULL, S(16384), "/**\n * ( excerpt from\n * http://php.net/manual/en/function.xmlwriter-write-attribute-ns.php )\n *\n * Writes a full namespaced attribute.\n *\n * @xmlwriter  resource\n *                     Only for procedural calls. The XMLWriter resource\n *                     that is being modified. This resource comes from a\n *                     call to xmlwriter_open_uri() or\n *                     xmlwriter_open_memory().\n * @prefix     string  The namespace prefix.\n * @name       string  The attribute name.\n * @uri        string  The namespace URI.\n * @content    string  The attribute value.\n *\n * @return     bool    Returns TRUE on success or FALSE on failure.\n */",
"xmlwriter_write_attribute", T(Boolean), S(0), "xmlwriter", T(Object), NULL, S(0), NULL, S(0), "name", T(String), NULL, S(0), NULL, S(0), "value", T(String), NULL, S(0), NULL, S(0), NULL, S(16384), "/**\n * ( excerpt from\n * http://php.net/manual/en/function.xmlwriter-write-attribute.php )\n *\n * Writes a full attribute.\n *\n * @xmlwriter  resource\n *                     Only for procedural calls. The XMLWriter resource\n *                     that is being modified. This resource comes from a\n *                     call to xmlwriter_open_uri() or\n *                     xmlwriter_open_memory().\n * @name       string  The name of the attribute.\n * @value      string  The value of the attribute.\n *\n * @return     bool    Returns TRUE on success or FALSE on failure.\n */",
"xmlwriter_end_attribute", T(Boolean), S(0), "xmlwriter", T(Object), NULL, S(0), NULL, S(0), NULL, S(16384), "/**\n * ( excerpt from\n * http://php.net/manual/en/function.xmlwriter-end-attribute.php )\n *\n * Ends the current attribute.\n *\n * @xmlwriter  resource\n *                     Only for procedural calls. The XMLWriter resource\n *                     that is being modified. This resource comes from a\n *                     call to xmlwriter_open_uri() or\n *                     xmlwriter_open_memory().\n *\n * @return     bool    Returns TRUE on success or FALSE on failure.\n */",
"xmlwriter_start_cdata", T(Boolean), S(0), "xmlwriter", T(Object), NULL, S(0), NULL, S(0), NULL, S(16384), "/**\n * ( excerpt from\n * http://php.net/manual/en/function.xmlwriter-start-cdata.php )\n *\n * Starts a CDATA.\n *\n * @xmlwriter  resource\n *                     Only for procedural calls. The XMLWriter resource\n *                     that is being modified. This resource comes from a\n *                     call to xmlwriter_open_uri() or\n *                     xmlwriter_open_memory().\n *\n * @return     bool    Returns TRUE on success or FALSE on failure.\n */",
"xmlwriter_write_cdata", T(Boolean), S(0), "xmlwriter", T(Object), NULL, S(0), NULL, S(0), "content", T(String), NULL, S(0), NULL, S(0), NULL, S(16384), "/**\n * ( excerpt from\n * http://php.net/manual/en/function.xmlwriter-write-cdata.php )\n *\n * Writes a full CDATA.\n *\n * @xmlwriter  resource\n *                     Only for procedural calls. The XMLWriter resource\n *                     that is being modified. This resource comes from a\n *                     call to xmlwriter_open_uri() or\n *                     xmlwriter_open_memory().\n * @content    string  The contents of the CDATA.\n *\n * @return     bool    Returns TRUE on success or FALSE on failure.\n */",
"xmlwriter_end_cdata", T(Boolean), S(0), "xmlwriter", T(Object), NULL, S(0), NULL, S(0), NULL, S(16384), "/**\n * ( excerpt from http://php.net/manual/en/function.xmlwriter-end-cdata.php\n * )\n *\n * Ends the current CDATA section.\n *\n * @xmlwriter  resource\n *                     Only for procedural calls. The XMLWriter resource\n *                     that is being modified. This resource comes from a\n *                     call to xmlwriter_open_uri() or\n *                     xmlwriter_open_memory().\n *\n * @return     bool    Returns TRUE on success or FALSE on failure.\n */",
"xmlwriter_start_comment", T(Boolean), S(0), "xmlwriter", T(Object), NULL, S(0), NULL, S(0), NULL, S(16384), "/**\n * ( excerpt from\n * http://php.net/manual/en/function.xmlwriter-start-comment.php )\n *\n * Starts a comment.\n *\n * @xmlwriter  resource\n *                     Only for procedural calls. The XMLWriter resource\n *                     that is being modified. This resource comes from a\n *                     call to xmlwriter_open_uri() or\n *                     xmlwriter_open_memory().\n *\n * @return     bool    Returns TRUE on success or FALSE on failure.\n */",
"xmlwriter_write_comment", T(Boolean), S(0), "xmlwriter", T(Object), NULL, S(0), NULL, S(0), "content", T(String), NULL, S(0), NULL, S(0), NULL, S(16384), "/**\n * ( excerpt from\n * http://php.net/manual/en/function.xmlwriter-write-comment.php )\n *\n * Writes a full comment.\n *\n * @xmlwriter  resource\n *                     Only for procedural calls. The XMLWriter resource\n *                     that is being modified. This resource comes from a\n *                     call to xmlwriter_open_uri() or\n *                     xmlwriter_open_memory().\n * @content    string  The contents of the comment.\n *\n * @return     bool    Returns TRUE on success or FALSE on failure.\n */",
"xmlwriter_end_comment", T(Boolean), S(0), "xmlwriter", T(Object), NULL, S(0), NULL, S(0), NULL, S(16384), "/**\n * ( excerpt from\n * http://php.net/manual/en/function.xmlwriter-end-comment.php )\n *\n * Ends the current comment.\n *\n * @xmlwriter  resource\n *                     Only for procedural calls. The XMLWriter resource\n *                     that is being modified. This resource comes from a\n *                     call to xmlwriter_open_uri() or\n *                     xmlwriter_open_memory().\n *\n * @return     bool    Returns TRUE on success or FALSE on failure.\n */",
"xmlwriter_end_document", T(Boolean), S(0), "xmlwriter", T(Object), NULL, S(0), NULL, S(0), NULL, S(16384), "/**\n * ( excerpt from\n * http://php.net/manual/en/function.xmlwriter-end-document.php )\n *\n * Ends the current document.\n *\n * @xmlwriter  resource\n *                     Only for procedural calls. The XMLWriter resource\n *                     that is being modified. This resource comes from a\n *                     call to xmlwriter_open_uri() or\n *                     xmlwriter_open_memory().\n *\n * @return     bool    Returns TRUE on success or FALSE on failure.\n */",
"xmlwriter_start_pi", T(Boolean), S(0), "xmlwriter", T(Object), NULL, S(0), NULL, S(0), "target", T(String), NULL, S(0), NULL, S(0), NULL, S(16384), "/**\n * ( excerpt from http://php.net/manual/en/function.xmlwriter-start-pi.php\n * )\n *\n * Starts a processing instruction tag.\n *\n * @xmlwriter  resource\n *                     Only for procedural calls. The XMLWriter resource\n *                     that is being modified. This resource comes from a\n *                     call to xmlwriter_open_uri() or\n *                     xmlwriter_open_memory().\n * @target     string  The target of the processing instruction.\n *\n * @return     bool    Returns TRUE on success or FALSE on failure.\n */",
"xmlwriter_write_pi", T(Boolean), S(0), "xmlwriter", T(Object), NULL, S(0), NULL, S(0), "target", T(String), NULL, S(0), NULL, S(0), "content", T(String), NULL, S(0), NULL, S(0), NULL, S(16384), "/**\n * ( excerpt from http://php.net/manual/en/function.xmlwriter-write-pi.php\n * )\n *\n * Writes a processing instruction.\n *\n * @xmlwriter  resource\n *                     Only for procedural calls. The XMLWriter resource\n *                     that is being modified. This resource comes from a\n *                     call to xmlwriter_open_uri() or\n *                     xmlwriter_open_memory().\n * @target     string  The target of the processing instruction.\n * @content    string  The content of the processing instruction.\n *\n * @return     bool    Returns TRUE on success or FALSE on failure.\n */",
"xmlwriter_end_pi", T(Boolean), S(0), "xmlwriter", T(Object), NULL, S(0), NULL, S(0), NULL, S(16384), "/**\n * ( excerpt from http://php.net/manual/en/function.xmlwriter-end-pi.php )\n *\n * Ends the current processing instruction.\n *\n * @xmlwriter  resource\n *                     Only for procedural calls. The XMLWriter resource\n *                     that is being modified. This resource comes from a\n *                     call to xmlwriter_open_uri() or\n *                     xmlwriter_open_memory().\n *\n * @return     bool    Returns TRUE on success or FALSE on failure.\n */",
"xmlwriter_text", T(Boolean), S(0), "xmlwriter", T(Object), NULL, S(0), NULL, S(0), "content", T(String), NULL, S(0), NULL, S(0), NULL, S(16384), "/**\n * ( excerpt from http://php.net/manual/en/function.xmlwriter-text.php )\n *\n * Writes a text.\n *\n * @xmlwriter  resource\n *                     Only for procedural calls. The XMLWriter resource\n *                     that is being modified. This resource comes from a\n *                     call to xmlwriter_open_uri() or\n *                     xmlwriter_open_memory().\n * @content    string  The contents of the text.\n *\n * @return     bool    Returns TRUE on success or FALSE on failure.\n */",
"xmlwriter_write_raw", T(Boolean), S(0), "xmlwriter", T(Object), NULL, S(0), NULL, S(0), "content", T(String), NULL, S(0), NULL, S(0), NULL, S(16384), "/**\n * ( excerpt from http://php.net/manual/en/function.xmlwriter-write-raw.php\n * )\n *\n * Writes a raw xml text.\n *\n * @xmlwriter  resource\n *                     Only for procedural calls. The XMLWriter resource\n *                     that is being modified. This resource comes from a\n *                     call to xmlwriter_open_uri() or\n *                     xmlwriter_open_memory().\n * @content    string  The text string to write.\n *\n * @return     bool    Returns TRUE on success or FALSE on failure.\n */",
"xmlwriter_start_dtd", T(Boolean), S(0), "xmlwriter", T(Object), NULL, S(0), NULL, S(0), "qualifiedname", T(String), NULL, S(0), NULL, S(0), "publicid", T(String), "N;", S(2), "null", S(0), "systemid", T(String), "N;", S(2), "null", S(0), NULL, S(16384), "/**\n * ( excerpt from http://php.net/manual/en/function.xmlwriter-start-dtd.php\n * )\n *\n * Starts a DTD.\n *\n * @xmlwriter  resource\n *                     Only for procedural calls. The XMLWriter resource\n *                     that is being modified. This resource comes from a\n *                     call to xmlwriter_open_uri() or\n *                     xmlwriter_open_memory().\n * @qualifiedname\n *             string  The qualified name of the document type to create.\n * @publicid   string  The external subset public identifier.\n * @systemid   string  The external subset system identifier.\n *\n * @return     bool    Returns TRUE on success or FALSE on failure.\n */",
"xmlwriter_write_dtd", T(Boolean), S(0), "xmlwriter", T(Object), NULL, S(0), NULL, S(0), "name", T(String), NULL, S(0), NULL, S(0), "publicid", T(String), "N;", S(2), "null", S(0), "systemid", T(String), "N;", S(2), "null", S(0), "subset", T(String), "N;", S(2), "null", S(0), NULL, S(16384), "/**\n * ( excerpt from http://php.net/manual/en/function.xmlwriter-write-dtd.php\n * )\n *\n * Writes a full DTD.\n *\n * @xmlwriter  resource\n *                     Only for procedural calls. The XMLWriter resource\n *                     that is being modified. This resource comes from a\n *                     call to xmlwriter_open_uri() or\n *                     xmlwriter_open_memory().\n * @name       string  The DTD name.\n * @publicid   string  The external subset public identifier.\n * @systemid   string  The external subset system identifier.\n * @subset     string  The content of the DTD.\n *\n * @return     bool    Returns TRUE on success or FALSE on failure.\n */",
"xmlwriter_start_dtd_element", T(Boolean), S(0), "xmlwriter", T(Object), NULL, S(0), NULL, S(0), "qualifiedname", T(String), NULL, S(0), NULL, S(0), NULL, S(16384), "/**\n * ( excerpt from\n * http://php.net/manual/en/function.xmlwriter-start-dtd-element.php )\n *\n * Starts a DTD element.\n *\n * @xmlwriter  resource\n *                     Only for procedural calls. The XMLWriter resource\n *                     that is being modified. This resource comes from a\n *                     call to xmlwriter_open_uri() or\n *                     xmlwriter_open_memory().\n * @qualifiedname\n *             string  The qualified name of the document type to create.\n *\n * @return     bool    Returns TRUE on success or FALSE on failure.\n */",
"xmlwriter_write_dtd_element", T(Boolean), S(0), "xmlwriter", T(Object), NULL, S(0), NULL, S(0), "name", T(String), NULL, S(0), NULL, S(0), "content", T(String), NULL, S(0), NULL, S(0), NULL, S(16384), "/**\n * ( excerpt from\n * http://php.net/manual/en/function.xmlwriter-write-dtd-element.php )\n *\n * Writes a full DTD element.\n *\n * @xmlwriter  resource\n *                     Only for procedural calls. The XMLWriter resource\n *                     that is being modified. This resource comes from a\n *                     call to xmlwriter_open_uri() or\n *                     xmlwriter_open_memory().\n * @name       string  The name of the DTD element.\n * @content    string  The content of the element.\n *\n * @return     bool    Returns TRUE on success or FALSE on failure.\n */",
"xmlwriter_end_dtd_element", T(Boolean), S(0), "xmlwriter", T(Object), NULL, S(0), NULL, S(0), NULL, S(16384), "/**\n * ( excerpt from\n * http://php.net/manual/en/function.xmlwriter-end-dtd-element.php )\n *\n * Ends the current DTD element.\n *\n * @xmlwriter  resource\n *                     Only for procedural calls. The XMLWriter resource\n *                     that is being modified. This resource comes from a\n *                     call to xmlwriter_open_uri() or\n *                     xmlwriter_open_memory().\n *\n * @return     bool    Returns TRUE on success or FALSE on failure.\n */",
"xmlwriter_start_dtd_attlist", T(Boolean), S(0), "xmlwriter", T(Object), NULL, S(0), NULL, S(0), "name", T(String), NULL, S(0), NULL, S(0), NULL, S(16384), "/**\n * ( excerpt from\n * http://php.net/manual/en/function.xmlwriter-start-dtd-attlist.php )\n *\n * Starts a DTD attribute list.\n *\n * @xmlwriter  resource\n *                     Only for procedural calls. The XMLWriter resource\n *                     that is being modified. This resource comes from a\n *                     call to xmlwriter_open_uri() or\n *                     xmlwriter_open_memory().\n * @name       string  The attribute list name.\n *\n * @return     bool    Returns TRUE on success or FALSE on failure.\n */",
"xmlwriter_write_dtd_attlist", T(Boolean), S(0), "xmlwriter", T(Object), NULL, S(0), NULL, S(0), "name", T(String), NULL, S(0), NULL, S(0), "content", T(String), NULL, S(0), NULL, S(0), NULL, S(16384), "/**\n * ( excerpt from\n * http://php.net/manual/en/function.xmlwriter-write-dtd-attlist.php )\n *\n * Writes a DTD attribute list.\n *\n * @xmlwriter  resource\n *                     Only for procedural calls. The XMLWriter resource\n *                     that is being modified. This resource comes from a\n *                     call to xmlwriter_open_uri() or\n *                     xmlwriter_open_memory().\n * @name       string  The name of the DTD attribute list.\n * @content    string  The content of the DTD attribute list.\n *\n * @return     bool    Returns TRUE on success or FALSE on failure.\n */",
"xmlwriter_end_dtd_attlist", T(Boolean), S(0), "xmlwriter", T(Object), NULL, S(0), NULL, S(0), NULL, S(16384), "/**\n * ( excerpt from\n * http://php.net/manual/en/function.xmlwriter-end-dtd-attlist.php )\n *\n * Ends the current DTD attribute list.\n *\n * @xmlwriter  resource\n *                     Only for procedural calls. The XMLWriter resource\n *                     that is being modified. This resource comes from a\n *                     call to xmlwriter_open_uri() or\n *                     xmlwriter_open_memory().\n *\n * @return     bool    Returns TRUE on success or FALSE on failure.\n */",
"xmlwriter_start_dtd_entity", T(Boolean), S(0), "xmlwriter", T(Object), NULL, S(0), NULL, S(0), "name", T(String), NULL, S(0), NULL, S(0), "isparam", T(Boolean), NULL, S(0), NULL, S(0), NULL, S(16384), "/**\n * ( excerpt from\n * http://php.net/manual/en/function.xmlwriter-start-dtd-entity.php )\n *\n * Starts a DTD entity.\n *\n * @xmlwriter  resource\n *                     Only for procedural calls. The XMLWriter resource\n *                     that is being modified. This resource comes from a\n *                     call to xmlwriter_open_uri() or\n *                     xmlwriter_open_memory().\n * @name       string  The name of the entity.\n * @isparam    bool\n *\n * @return     bool    Returns TRUE on success or FALSE on failure.\n */",
"xmlwriter_write_dtd_entity", T(Boolean), S(0), "xmlwriter", T(Object), NULL, S(0), NULL, S(0), "name", T(String), NULL, S(0), NULL, S(0), "content", T(String), NULL, S(0), NULL, S(0), "pe", T(Boolean), "b:0;", S(4), "false", S(0), "publicid", T(String), "N;", S(2), "null", S(0), "systemid", T(String), "N;", S(2), "null", S(0), "ndataid", T(String), "N;", S(2), "null", S(0), NULL, S(16384), "/**\n * ( excerpt from\n * http://php.net/manual/en/function.xmlwriter-write-dtd-entity.php )\n *\n * Writes a full DTD entity.\n *\n * @xmlwriter  resource\n *                     Only for procedural calls. The XMLWriter resource\n *                     that is being modified. This resource comes from a\n *                     call to xmlwriter_open_uri() or\n *                     xmlwriter_open_memory().\n * @name       string  The name of the entity.\n * @content    string  The content of the entity.\n * @pe         bool\n * @publicid   string\n * @systemid   string\n * @ndataid    string\n *\n * @return     bool    Returns TRUE on success or FALSE on failure.\n */",
"xmlwriter_end_dtd_entity", T(Boolean), S(0), "xmlwriter", T(Object), NULL, S(0), NULL, S(0), NULL, S(16384), "/**\n * ( excerpt from\n * http://php.net/manual/en/function.xmlwriter-end-dtd-entity.php )\n *\n * Ends the current DTD entity.\n *\n * @xmlwriter  resource\n *                     Only for procedural calls. The XMLWriter resource\n *                     that is being modified. This resource comes from a\n *                     call to xmlwriter_open_uri() or\n *                     xmlwriter_open_memory().\n *\n * @return     bool    Returns TRUE on success or FALSE on failure.\n */",
"xmlwriter_end_dtd", T(Boolean), S(0), "xmlwriter", T(Object), NULL, S(0), NULL, S(0), NULL, S(16384), "/**\n * ( excerpt from http://php.net/manual/en/function.xmlwriter-end-dtd.php )\n *\n * Ends the DTD of the document.\n *\n * @xmlwriter  resource\n *                     Only for procedural calls. The XMLWriter resource\n *                     that is being modified. This resource comes from a\n *                     call to xmlwriter_open_uri() or\n *                     xmlwriter_open_memory().\n *\n * @return     bool    Returns TRUE on success or FALSE on failure.\n */",
"xmlwriter_flush", T(Variant), S(0), "xmlwriter", T(Object), NULL, S(0), NULL, S(0), "empty", T(Boolean), "b:1;", S(4), "true", S(0), NULL, S(16384), "/**\n * ( excerpt from http://php.net/manual/en/function.xmlwriter-flush.php )\n *\n * Flushes the current buffer.\n *\n * @xmlwriter  resource\n *                     Only for procedural calls. The XMLWriter resource\n *                     that is being modified. This resource comes from a\n *                     call to xmlwriter_open_uri() or\n *                     xmlwriter_open_memory().\n * @empty      bool    Whether to empty the buffer or no. Default is TRUE.\n *\n * @return     mixed   If you opened the writer in memory, this function\n *                     returns the generated XML buffer, Else, if using\n *                     URI, this function will write the buffer and return\n *                     the number of written bytes.\n */",
"xmlwriter_output_memory", T(String), S(0), "xmlwriter", T(Object), NULL, S(0), NULL, S(0), "flush", T(Boolean), "b:1;", S(4), "true", S(0), NULL, S(16384), "/**\n * ( excerpt from\n * http://php.net/manual/en/function.xmlwriter-output-memory.php )\n *\n * Returns the current buffer.\n *\n * @xmlwriter  resource\n *                     Only for procedural calls. The XMLWriter resource\n *                     that is being modified. This resource comes from a\n *                     call to xmlwriter_open_uri() or\n *                     xmlwriter_open_memory().\n * @flush      bool    Whether to flush the output buffer or no. Default is\n *                     TRUE.\n *\n * @return     string  Returns the current buffer as a string.\n */",

#elif EXT_TYPE == 1

#elif EXT_TYPE == 2
"XMLWriter", "", NULL, "__construct", T(Void), S(0), NULL, S(16384), "/**\n * ( excerpt from http://php.net/manual/en/xmlwriter.construct.php )\n *\n *\n */", S(16384),"openMemory", T(Boolean), S(0), NULL, S(16384), "/**\n * ( excerpt from http://php.net/manual/en/xmlwriter.openmemory.php )\n *\n *\n * @return     bool\n */", S(16384),"openURI", T(Boolean), S(0), "uri", T(String), NULL, S(0), NULL, S(0), NULL, S(16384), "/**\n * ( excerpt from http://php.net/manual/en/xmlwriter.openuri.php )\n *\n *\n * @uri        string\n *\n * @return     bool\n */", S(16384),"setIndentString", T(Boolean), S(0), "indentstring", T(String), NULL, S(0), NULL, S(0), NULL, S(16384), "/**\n * ( excerpt from http://php.net/manual/en/xmlwriter.setindentstring.php )\n *\n *\n * @indentstring\n *             string\n *\n * @return     bool\n */", S(16384),"setIndent", T(Boolean), S(0), "indent", T(Boolean), NULL, S(0), NULL, S(0), NULL, S(16384), "/**\n * ( excerpt from http://php.net/manual/en/xmlwriter.setindent.php )\n *\n *\n * @indent     bool\n *\n * @return     bool\n */", S(16384),"startDocument", T(Boolean), S(0), "version", T(String), "s:3:\"1.0\";", S(10), "\"1.0\"", S(0), "encoding", T(String), "N;", S(2), "null", S(0), "standalone", T(String), "N;", S(2), "null", S(0), NULL, S(16384), "/**\n * ( excerpt from http://php.net/manual/en/xmlwriter.startdocument.php )\n *\n *\n * @version    string\n * @encoding   string\n * @standalone string\n *\n * @return     bool\n */", S(16384),"startElement", T(Boolean), S(0), "name", T(String), NULL, S(0), NULL, S(0), NULL, S(16384), "/**\n * ( excerpt from http://php.net/manual/en/xmlwriter.startelement.php )\n *\n *\n * @name       string\n *\n * @return     bool\n */", S(16384),"startElementNS", T(Boolean), S(0), "prefix", T(String), NULL, S(0), NULL, S(0), "name", T(String), NULL, S(0), NULL, S(0), "uri", T(String), NULL, S(0), NULL, S(0), NULL, S(16384), "/**\n * ( excerpt from http://php.net/manual/en/xmlwriter.startelementns.php )\n *\n *\n * @prefix     string\n * @name       string\n * @uri        string\n *\n * @return     bool\n */", S(16384),"writeElementNS", T(Boolean), S(0), "prefix", T(String), NULL, S(0), NULL, S(0), "name", T(String), NULL, S(0), NULL, S(0), "uri", T(String), NULL, S(0), NULL, S(0), "content", T(String), "N;", S(2), "null", S(0), NULL, S(16384), "/**\n * ( excerpt from http://php.net/manual/en/xmlwriter.writeelementns.php )\n *\n *\n * @prefix     string\n * @name       string\n * @uri        string\n * @content    string\n *\n * @return     bool\n */", S(16384),"writeElement", T(Boolean), S(0), "name", T(String), NULL, S(0), NULL, S(0), "content", T(String), "N;", S(2), "null", S(0), NULL, S(16384), "/**\n * ( excerpt from http://php.net/manual/en/xmlwriter.writeelement.php )\n *\n *\n * @name       string\n * @content    string\n *\n * @return     bool\n */", S(16384),"endElement", T(Boolean), S(0), NULL, S(16384), "/**\n * ( excerpt from http://php.net/manual/en/xmlwriter.endelement.php )\n *\n *\n * @return     bool\n */", S(16384),"fullEndElement", T(Boolean), S(0), NULL, S(16384), "/**\n * ( excerpt from http://php.net/manual/en/xmlwriter.fullendelement.php )\n *\n *\n * @return     bool\n */", S(16384),"startAttributens", T(Boolean), S(0), "prefix", T(String), NULL, S(0), NULL, S(0), "name", T(String), NULL, S(0), NULL, S(0), "uri", T(String), NULL, S(0), NULL, S(0), NULL, S(16384), "/**\n * ( excerpt from http://php.net/manual/en/xmlwriter.startattributens.php )\n *\n *\n * @prefix     string\n * @name       string\n * @uri        string\n *\n * @return     bool\n */", S(16384),"startAttribute", T(Boolean), S(0), "name", T(String), NULL, S(0), NULL, S(0), NULL, S(16384), "/**\n * ( excerpt from http://php.net/manual/en/xmlwriter.startattribute.php )\n *\n *\n * @name       string\n *\n * @return     bool\n */", S(16384),"writeAttributeNS", T(Boolean), S(0), "prefix", T(String), NULL, S(0), NULL, S(0), "name", T(String), NULL, S(0), NULL, S(0), "uri", T(String), NULL, S(0), NULL, S(0), "content", T(String), NULL, S(0), NULL, S(0), NULL, S(16384), "/**\n * ( excerpt from http://php.net/manual/en/xmlwriter.writeattributens.php )\n *\n *\n * @prefix     string\n * @name       string\n * @uri        string\n * @content    string\n *\n * @return     bool\n */", S(16384),"writeAttribute", T(Boolean), S(0), "name", T(String), NULL, S(0), NULL, S(0), "value", T(String), NULL, S(0), NULL, S(0), NULL, S(16384), "/**\n * ( excerpt from http://php.net/manual/en/xmlwriter.writeattribute.php )\n *\n *\n * @name       string\n * @value      string\n *\n * @return     bool\n */", S(16384),"endAttribute", T(Boolean), S(0), NULL, S(16384), "/**\n * ( excerpt from http://php.net/manual/en/xmlwriter.endattribute.php )\n *\n *\n * @return     bool\n */", S(16384),"startCData", T(Boolean), S(0), NULL, S(16384), "/**\n * ( excerpt from http://php.net/manual/en/xmlwriter.startcdata.php )\n *\n *\n * @return     bool\n */", S(16384),"writeCData", T(Boolean), S(0), "content", T(String), NULL, S(0), NULL, S(0), NULL, S(16384), "/**\n * ( excerpt from http://php.net/manual/en/xmlwriter.writecdata.php )\n *\n *\n * @content    string\n *\n * @return     bool\n */", S(16384),"endCData", T(Boolean), S(0), NULL, S(16384), "/**\n * ( excerpt from http://php.net/manual/en/xmlwriter.endcdata.php )\n *\n *\n * @return     bool\n */", S(16384),"startComment", T(Boolean), S(0), NULL, S(16384), "/**\n * ( excerpt from http://php.net/manual/en/xmlwriter.startcomment.php )\n *\n *\n * @return     bool\n */", S(16384),"writeComment", T(Boolean), S(0), "content", T(String), NULL, S(0), NULL, S(0), NULL, S(16384), "/**\n * ( excerpt from http://php.net/manual/en/xmlwriter.writecomment.php )\n *\n *\n * @content    string\n *\n * @return     bool\n */", S(16384),"endComment", T(Boolean), S(0), NULL, S(16384), "/**\n * ( excerpt from http://php.net/manual/en/xmlwriter.endcomment.php )\n *\n *\n * @return     bool\n */", S(16384),"endDocument", T(Boolean), S(0), NULL, S(16384), "/**\n * ( excerpt from http://php.net/manual/en/xmlwriter.enddocument.php )\n *\n *\n * @return     bool\n */", S(16384),"startPI", T(Boolean), S(0), "target", T(String), NULL, S(0), NULL, S(0), NULL, S(16384), "/**\n * ( excerpt from http://php.net/manual/en/xmlwriter.startpi.php )\n *\n *\n * @target     string\n *\n * @return     bool\n */", S(16384),"writePI", T(Boolean), S(0), "target", T(String), NULL, S(0), NULL, S(0), "content", T(String), NULL, S(0), NULL, S(0), NULL, S(16384), "/**\n * ( excerpt from http://php.net/manual/en/xmlwriter.writepi.php )\n *\n *\n * @target     string\n * @content    string\n *\n * @return     bool\n */", S(16384),"endPI", T(Boolean), S(0), NULL, S(16384), "/**\n * ( excerpt from http://php.net/manual/en/xmlwriter.endpi.php )\n *\n *\n * @return     bool\n */", S(16384),"text", T(Boolean), S(0), "content", T(String), NULL, S(0), NULL, S(0), NULL, S(16384), "/**\n * ( excerpt from http://php.net/manual/en/xmlwriter.text.php )\n *\n *\n * @content    string\n *\n * @return     bool\n */", S(16384),"writeRaw", T(Boolean), S(0), "content", T(String), NULL, S(0), NULL, S(0), NULL, S(16384), "/**\n * ( excerpt from http://php.net/manual/en/xmlwriter.writeraw.php )\n *\n *\n * @content    string\n *\n * @return     bool\n */", S(16384),"startDTD", T(Boolean), S(0), "qualifiedname", T(String), NULL, S(0), NULL, S(0), "publicid", T(String), "N;", S(2), "null", S(0), "systemid", T(String), "N;", S(2), "null", S(0), NULL, S(16384), "/**\n * ( excerpt from http://php.net/manual/en/xmlwriter.startdtd.php )\n *\n *\n * @qualifiedname\n *             string\n * @publicid   string\n * @systemid   string\n *\n * @return     bool\n */", S(16384),"writeDTD", T(Boolean), S(0), "name", T(String), NULL, S(0), NULL, S(0), "publicid", T(String), "N;", S(2), "null", S(0), "systemid", T(String), "N;", S(2), "null", S(0), "subset", T(String), "N;", S(2), "null", S(0), NULL, S(16384), "/**\n * ( excerpt from http://php.net/manual/en/xmlwriter.writedtd.php )\n *\n *\n * @name       string\n * @publicid   string\n * @systemid   string\n * @subset     string\n *\n * @return     bool\n */", S(16384),"startDTDElement", T(Boolean), S(0), "qualifiedname", T(String), NULL, S(0), NULL, S(0), NULL, S(16384), "/**\n * ( excerpt from http://php.net/manual/en/xmlwriter.startdtdelement.php )\n *\n *\n * @qualifiedname\n *             string\n *\n * @return     bool\n */", S(16384),"writeDTDElement", T(Boolean), S(0), "name", T(String), NULL, S(0), NULL, S(0), "content", T(String), NULL, S(0), NULL, S(0), NULL, S(16384), "/**\n * ( excerpt from http://php.net/manual/en/xmlwriter.writedtdelement.php )\n *\n *\n * @name       string\n * @content    string\n *\n * @return     bool\n */", S(16384),"endDTDElement", T(Boolean), S(0), NULL, S(16384), "/**\n * ( excerpt from http://php.net/manual/en/xmlwriter.enddtdelement.php )\n *\n *\n * @return     bool\n */", S(16384),"startDTDAttlist", T(Boolean), S(0), "name", T(String), NULL, S(0), NULL, S(0), NULL, S(16384), "/**\n * ( excerpt from http://php.net/manual/en/xmlwriter.startdtdattlist.php )\n *\n *\n * @name       string\n *\n * @return     bool\n */", S(16384),"writeDTDAttlist", T(Boolean), S(0), "name", T(String), NULL, S(0), NULL, S(0), "content", T(String), NULL, S(0), NULL, S(0), NULL, S(16384), "/**\n * ( excerpt from http://php.net/manual/en/xmlwriter.writedtdattlist.php )\n *\n *\n * @name       string\n * @content    string\n *\n * @return     bool\n */", S(16384),"endDTDAttlist", T(Boolean), S(0), NULL, S(16384), "/**\n * ( excerpt from http://php.net/manual/en/xmlwriter.enddtdattlist.php )\n *\n *\n * @return     bool\n */", S(16384),"startDTDEntity", T(Boolean), S(0), "name", T(String), NULL, S(0), NULL, S(0), "isparam", T(Boolean), NULL, S(0), NULL, S(0), NULL, S(16384), "/**\n * ( excerpt from http://php.net/manual/en/xmlwriter.startdtdentity.php )\n *\n *\n * @name       string\n * @isparam    bool\n *\n * @return     bool\n */", S(16384),"writeDTDEntity", T(Boolean), S(0), "name", T(String), NULL, S(0), NULL, S(0), "content", T(String), NULL, S(0), NULL, S(0), "pe", T(Boolean), "b:0;", S(4), "false", S(0), "publicid", T(String), "N;", S(2), "null", S(0), "systemid", T(String), "N;", S(2), "null", S(0), "ndataid", T(String), "N;", S(2), "null", S(0), NULL, S(16384), "/**\n * ( excerpt from http://php.net/manual/en/xmlwriter.writedtdentity.php )\n *\n *\n * @name       string\n * @content    string\n * @pe         bool\n * @publicid   string\n * @systemid   string\n * @ndataid    string\n *\n * @return     bool\n */", S(16384),"endDTDEntity", T(Boolean), S(0), NULL, S(16384), "/**\n * ( excerpt from http://php.net/manual/en/xmlwriter.enddtdentity.php )\n *\n *\n * @return     bool\n */", S(16384),"endDTD", T(Boolean), S(0), NULL, S(16384), "/**\n * ( excerpt from http://php.net/manual/en/xmlwriter.enddtd.php )\n *\n *\n * @return     bool\n */", S(16384),"flush", T(Variant), S(0), "empty", T(Boolean), "b:1;", S(4), "true", S(0), NULL, S(16384), "/**\n * ( excerpt from http://php.net/manual/en/xmlwriter.flush.php )\n *\n *\n * @empty      bool\n *\n * @return     mixed\n */", S(16384),"outputMemory", T(String), S(0), "flush", T(Boolean), "b:1;", S(4), "true", S(0), NULL, S(16384), "/**\n * ( excerpt from http://php.net/manual/en/xmlwriter.outputmemory.php )\n *\n *\n * @flush      bool\n *\n * @return     string\n */", S(16384),NULL,NULL,NULL,
S(16384), "/**\n * ( excerpt from http://php.net/manual/en/class.xmlwriter.php )\n *\n *\n */", 
#endif
