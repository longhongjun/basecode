// @generated by "php idl.php inc {input.idl.php} {output.inc}"

#if EXT_TYPE == 0
"hphp_get_extension_info", T(Array), S(0), "name", T(String), NULL, S(0), NULL, S(0), NULL, S(4276224), "/**\n * ( HipHop specific )\n *\n * Internally used for getting extension's information.\n *\n * @name       string\n *\n * @return     map\n */",
"hphp_get_method_info", T(Array), S(0), "cname", T(Variant), NULL, S(0), NULL, S(0), "name", T(Variant), NULL, S(0), NULL, S(0), NULL, S(4276224), "/**\n * ( HipHop specific )\n *\n * Internally used by ReflectionClass for getting a method's information.\n *\n * @cname      mixed\n * @name       mixed\n *\n * @return     map\n */",
"hphp_get_closure_info", T(Array), S(0), "closure", T(Variant), NULL, S(0), NULL, S(0), NULL, S(4276224), "/**\n * ( HipHop specific )\n *\n * Internally used by ReflectionFunction for getting a closure's\n * information.\n *\n * @closure    mixed\n *\n * @return     map\n */",
"hphp_get_class_constant", T(Variant), S(0), "cls", T(Variant), NULL, S(0), NULL, S(0), "name", T(Variant), NULL, S(0), NULL, S(0), NULL, S(4276224), "/**\n * ( HipHop specific )\n *\n * Internally used by ReflectionClass for getting a default parameters\n * value.\n *\n * @cls        mixed\n * @name       mixed\n *\n * @return     mixed\n */",
"hphp_get_class_info", T(Array), S(0), "name", T(Variant), NULL, S(0), NULL, S(0), NULL, S(4276224), "/**\n * ( HipHop specific )\n *\n * Internally used by ReflectionClass for getting a class's information.\n *\n * @name       mixed\n *\n * @return     map\n */",
"hphp_get_function_info", T(Array), S(0), "name", T(String), NULL, S(0), NULL, S(0), NULL, S(4276224), "/**\n * ( HipHop specific )\n *\n * Internally used by ReflectionFuncion for getting a function's\n * information.\n *\n * @name       string\n *\n * @return     map\n */",
"hphp_invoke", T(Variant), S(0), "name", T(String), NULL, S(0), NULL, S(0), "params", T(Array), NULL, S(0), NULL, S(0), NULL, S(4276224), "/**\n * ( HipHop specific )\n *\n * Used by FFI interface for other languages to call into PHP.\n *\n * @name       string\n * @params     vector\n *\n * @return     mixed\n */",
"hphp_invoke_method", T(Variant), S(0), "obj", T(Variant), NULL, S(0), NULL, S(0), "cls", T(String), NULL, S(0), NULL, S(0), "name", T(String), NULL, S(0), NULL, S(0), "params", T(Array), NULL, S(0), NULL, S(0), NULL, S(4276224), "/**\n * ( HipHop specific )\n *\n * Used by FFI interface for other languages to call into PHP.\n *\n * @obj        mixed\n * @cls        string\n * @name       string\n * @params     vector\n *\n * @return     mixed\n */",
"hphp_instanceof", T(Boolean), S(0), "obj", T(Object), NULL, S(0), NULL, S(0), "name", T(String), NULL, S(0), NULL, S(0), NULL, S(4276224), "/**\n * ( HipHop specific )\n *\n * Used by FFI interface for other languages to call into PHP.\n *\n * @obj        object\n * @name       string\n *\n * @return     bool\n */",
"hphp_create_object", T(Object), S(0), "name", T(String), NULL, S(0), NULL, S(0), "params", T(Array), NULL, S(0), NULL, S(0), NULL, S(4276224), "/**\n * ( HipHop specific )\n *\n * Used by FFI interface for other languages to call into PHP.\n *\n * @name       string\n * @params     vector\n *\n * @return     object\n */",
"hphp_get_property", T(Variant), S(0), "obj", T(Object), NULL, S(0), NULL, S(0), "cls", T(String), NULL, S(0), NULL, S(0), "prop", T(String), NULL, S(0), NULL, S(0), NULL, S(4276224), "/**\n * ( HipHop specific )\n *\n * Used by FFI interface for other languages to call into PHP.\n *\n * @obj        object\n * @cls        string\n * @prop       string\n *\n * @return     mixed\n */",
"hphp_set_property", T(Void), S(0), "obj", T(Object), NULL, S(0), NULL, S(0), "cls", T(String), NULL, S(0), NULL, S(0), "prop", T(String), NULL, S(0), NULL, S(0), "value", T(Variant), NULL, S(0), NULL, S(0), NULL, S(4276224), "/**\n * ( HipHop specific )\n *\n * Used by FFI interface for other languages to call into PHP.\n *\n * @obj        object\n * @cls        string\n * @prop       string\n * @value      mixed\n */",
"hphp_get_static_property", T(Variant), S(0), "cls", T(String), NULL, S(0), NULL, S(0), "prop", T(String), NULL, S(0), NULL, S(0), NULL, S(4276224), "/**\n * ( HipHop specific )\n *\n * Used by FFI interface for other languages to call into PHP.\n *\n * @cls        string\n * @prop       string\n *\n * @return     mixed\n */",
"hphp_set_static_property", T(Void), S(0), "cls", T(String), NULL, S(0), NULL, S(0), "prop", T(String), NULL, S(0), NULL, S(0), "value", T(Variant), NULL, S(0), NULL, S(0), NULL, S(4276224), "/**\n * ( HipHop specific )\n *\n * Used by FFI interface for other languages to call into PHP.\n *\n * @cls        string\n * @prop       string\n * @value      mixed\n */",
"hphp_get_original_class_name", T(String), S(0), "name", T(String), NULL, S(0), NULL, S(0), NULL, S(4276224), "/**\n * ( HipHop specific )\n *\n * Internally used by ReflectionClass for getting a class's declared name.\n *\n * @name       string\n *\n * @return     string\n */",
"hphp_scalar_typehints_enabled", T(Boolean), S(0), NULL, S(4276224), "/**\n * ( HipHop specific )\n *\n * Internally used by ReflectionClass for checking whether scalar\n * typehints are enabled.\n *\n * @return     bool\n */", 

#elif EXT_TYPE == 1

#elif EXT_TYPE == 2

#endif
