// @generated by "php idl.php inc {input.idl.php} {output.inc}"

#if EXT_TYPE == 0

#elif EXT_TYPE == 1

#elif EXT_TYPE == 2
"UConverter", "", NULL, "__construct", T(Void), S(0), "toEncoding", T(String), "s:5:\"utf-8\";", S(12), "\"utf-8\"", S(0), "fromEncoding", T(String), "s:5:\"utf-8\";", S(12), "\"utf-8\"", S(0), NULL, S(16384), "/**\n * ( excerpt from http://php.net/manual/en/uconverter.construct.php )\n *\n * Object constructor\n *\n * @toEncoding string  Target character encoding\n * @fromEncoding\n *             string  Source character encoding\n */", S(16384),"__destruct", T(Variant), S(0), NULL, S(16384), "/**\n * ( excerpt from http://php.net/manual/en/uconverter.destruct.php )\n *\n * Object destructor\n *\n * @return     mixed\n */", S(16384),"getSourceEncoding", T(String), S(0), NULL, S(16384), "/**\n * ( excerpt from http://php.net/manual/en/uconverter.getsourceencoding.php\n * )\n *\n * Returns the name of the source encoding\n *\n * @return     string  Cannonical name of source encoding\n */", S(16384),"setSourceEncoding", T(Void), S(0), "encoding", T(String), NULL, S(0), NULL, S(0), NULL, S(16384), "/**\n * ( excerpt from http://php.net/manual/en/uconverter.setsourceencoding.php\n * )\n *\n * Changes the source encoding converter to the named encoding\n *\n * @encoding   string  Name of encoding to use\n */", S(16384),"getDestinationEncoding", T(String), S(0), NULL, S(16384), "/**\n * ( excerpt from\n * http://php.net/manual/en/uconverter.getdestinationencoding.php )\n *\n * Returns the name of the destination encoding\n *\n * @return     string  Cannonical name of destination encoding\n */", S(16384),"setDestinationEncoding", T(Void), S(0), "encoding", T(String), NULL, S(0), NULL, S(0), NULL, S(16384), "/**\n * ( excerpt from\n * http://php.net/manual/en/uconverter.setdestinationencoding.php )\n *\n * Changes the destination encoding converter to the named encoding\n *\n * @encoding   string  Name of encoding to use\n */", S(16384),"getSourceType", T(Int64), S(0), NULL, S(16384), "/**\n * ( excerpt from http://php.net/manual/en/uconverter.getsourcetype.php )\n *\n * Returns the source algorithmic encoding type (e.g. SBCS, DBCS, LATIN_1,\n * UTF8, etc...)\n *\n * @return     int     Algorithmic encoding type\n */", S(16384),"getDestinationType", T(Int64), S(0), NULL, S(16384), "/**\n * ( excerpt from\n * http://php.net/manual/en/uconverter.getdestinationtype.php )\n *\n * Returns the destination algorithmic encoding type (e.g. SBCS, DBCS,\n * LATIN_1, UTF8, etc...)\n *\n * @return     int     Algorithmic encoding type\n */", S(16384),"getSubstChars", T(String), S(0), NULL, S(16384), "/**\n * ( excerpt from http://php.net/manual/en/uconverter.getsubstchars.php )\n *\n * Returns the current substitution character used for conversion failures\n *\n * @return     string  One or more codeunits representing a single\n *                     codepoint\n */", S(16384),"setSubstChars", T(Boolean), S(0), "chars", T(String), NULL, S(0), NULL, S(0), NULL, S(16384), "/**\n * ( excerpt from http://php.net/manual/en/uconverter.setsubstchars.php )\n *\n * Set the substitution character to use for conversion failures\n *\n * @chars      string  One or more codeunits representing a codepoint\n *\n * @return     bool    Whether or not setting substitution characters\n *                     succeeded\n */", S(16384),"fromUCallback", T(Variant), S(0), "reason", T(Int64), NULL, S(0), NULL, S(0), "source", T(Array), NULL, S(0), NULL, S(0), "codepoint", T(Int64), NULL, S(0), NULL, S(0), "error", T(Variant), NULL, S(0), NULL, S(1), NULL, S(16384), "/**\n * ( excerpt from http://php.net/manual/en/uconverter.fromucallback.php )\n *\n * Issued by the object when converting to the target encoding\n *\n * @reason     int     Event which caused the callback\n * @source     vector  Contextual codepoints from the string being\n *                     converted\n * @codepoint  int     The specific codepoint in question\n * @error      mixed   Reference param, error condition on the way in,\n *                     should be U_ZERO_ERROR on the way out\n *\n * @return     mixed   Substitution codeunits for\n *                     illegal/irregular/unassigned codepoints\n */", S(16384),"toUCallback", T(Variant), S(0), "reason", T(Int64), NULL, S(0), NULL, S(0), "source", T(String), NULL, S(0), NULL, S(0), "codeunits", T(String), NULL, S(0), NULL, S(0), "error", T(Variant), NULL, S(0), NULL, S(1), NULL, S(16384), "/**\n * ( excerpt from http://php.net/manual/en/uconverter.toucallback.php )\n *\n * Issued by the object when converting from the source encoding\n *\n * @reason     int     Event which caused the callback\n * @source     string  Contextual codeunits from the string being converted\n * @codeunits  string  The specific codeunits in question\n * @error      mixed   Reference param, error condition on the way in,\n *                     should be U_ZERO_ERROR on the way out\n *\n * @return     mixed   Substitution codepoints for\n *                     illegal/irregular/unassigned codeunits\n */", S(16384),"convert", T(Variant), S(0), "str", T(String), NULL, S(0), NULL, S(0), "reverse", T(Boolean), "b:0;", S(4), "false", S(0), NULL, S(16384), "/**\n * ( excerpt from http://php.net/manual/en/uconverter.convert.php )\n *\n * Convert a string between the source/destination encodings\n *\n * @str        string  String to be transcoded\n * @reverse    bool    Convert from destination to source encodings instead\n *\n * @return     mixed   Transcoded string\n */", S(16384),"transcode", T(Variant), S(0), "str", T(String), NULL, S(0), NULL, S(0), "toEncoding", T(String), NULL, S(0), NULL, S(0), "fromEncoding", T(String), NULL, S(0), NULL, S(0), "options", T(Array), "N;", S(2), "null", S(0), NULL, S(16896), "/**\n * ( excerpt from http://php.net/manual/en/uconverter.transcode.php )\n *\n * Convert a string between two encodings\n *\n * @str        string  String to be transcoded\n * @toEncoding string  Source encoding\n * @fromEncoding\n *             string  Destination encoding\n * @options    map     Optional configuration for converters\n *\n * @return     mixed   Transcoded string\n */", S(16896),"getErrorCode", T(Int64), S(0), NULL, S(16384), "/**\n * ( excerpt from http://php.net/manual/en/uconverter.geterrorcode.php )\n *\n * Last UErrorCode associated with this converter\n *\n * @return     int     UErrorCode U_* value\n */", S(16384),"getErrorMessage", T(String), S(0), NULL, S(16384), "/**\n * ( excerpt from http://php.net/manual/en/uconverter.geterrormessage.php )\n *\n * Last error message associated with this converter\n *\n * @return     string  Descriptive error message\n */", S(16384),"reasonText", T(String), S(0), "reason", T(Int64), NULL, S(0), NULL, S(0), NULL, S(16896), "/**\n * ( excerpt from http://php.net/manual/en/uconverter.reasontext.php )\n *\n * Name of REASON_* constant\n *\n * @reason     int     REASON_* constant\n *\n * @return     string  Printable REASON_* constant name\n */", S(16896),"getAvailable", T(Array), S(0), NULL, S(16896), "/**\n * ( excerpt from http://php.net/manual/en/uconverter.getavailable.php )\n *\n * Returns list of available encodings\n *\n * @return     vector  Available encodings\n */", S(16896),"getAliases", T(Array), S(0), "encoding", T(String), NULL, S(0), NULL, S(0), NULL, S(16896), "/**\n * ( excerpt from http://php.net/manual/en/uconverter.getaliases.php )\n *\n * Returns valid aliases of the named encoding\n *\n * @encoding   string  Encoding to get aliases of\n *\n * @return     vector  Valid aliases of the named encoding\n */", S(16896),"getStandards", T(Array), S(0), NULL, S(16896), "/**\n * ( excerpt from http://php.net/manual/en/uconverter.getstandards.php )\n *\n * Returns list supported standards\n *\n * @return     vector  Available standards\n */", S(16896),NULL,NULL,"REASON_UNASSIGNED", T(Int64),"REASON_ILLEGAL", T(Int64),"REASON_IRREGULAR", T(Int64),"REASON_RESET", T(Int64),"REASON_CLOSE", T(Int64),"REASON_CLONE", T(Int64),"UNSUPPORTED_CONVERTER", T(Int64),"SBCS", T(Int64),"DBCS", T(Int64),"MBCS", T(Int64),"LATIN_1", T(Int64),"UTF8", T(Int64),"UTF16_BigEndian", T(Int64),"UTF16_LittleEndian", T(Int64),"UTF32_BigEndian", T(Int64),"UTF32_LittleEndian", T(Int64),"EBCDIC_STATEFUL", T(Int64),"ISO_2022", T(Int64),"LMBCS_1", T(Int64),"LMBCS_2", T(Int64),"LMBCS_3", T(Int64),"LMBCS_4", T(Int64),"LMBCS_5", T(Int64),"LMBCS_6", T(Int64),"LMBCS_8", T(Int64),"LMBCS_11", T(Int64),"LMBCS_16", T(Int64),"LMBCS_17", T(Int64),"LMBCS_18", T(Int64),"LMBCS_19", T(Int64),"LMBCS_LAST", T(Int64),"HZ", T(Int64),"SCSU", T(Int64),"ISCII", T(Int64),"US_ASCII", T(Int64),"UTF7", T(Int64),"BOCU1", T(Int64),"UTF16", T(Int64),"UTF32", T(Int64),"CESU8", T(Int64),"IMAP_MAILBOX", T(Int64),NULL,
S(16384), "/**\n * ( excerpt from http://php.net/manual/en/class.uconverter.php )\n *\n * ICU UConverter class\n *\n */", 
#endif
