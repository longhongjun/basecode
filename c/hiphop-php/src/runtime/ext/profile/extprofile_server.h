/*
   +----------------------------------------------------------------------+
   | HipHop for PHP                                                       |
   +----------------------------------------------------------------------+
   | Copyright (c) 2010- Facebook, Inc. (http://www.facebook.com)         |
   | Copyright (c) 1997-2010 The PHP Group                                |
   +----------------------------------------------------------------------+
   | This source file is subject to version 3.01 of the PHP license,      |
   | that is bundled with this package in the file LICENSE, and is        |
   | available through the world-wide-web at the following url:           |
   | http://www.php.net/license/3_01.txt                                  |
   | If you did not receive a copy of the PHP license and are unable to   |
   | obtain it through the world-wide-web, please send a note to          |
   | license@php.net so we can mail you a copy immediately.               |
   +----------------------------------------------------------------------+
*/

#ifndef __EXTPROFILE_SERVER_H__
#define __EXTPROFILE_SERVER_H__

// >>>>>> Generated by idl.php. Do NOT modify. <<<<<<

#include <runtime/ext/ext_server.h>

namespace HPHP {
///////////////////////////////////////////////////////////////////////////////

inline bool x_dangling_server_proxy_old_request() {
  FUNCTION_INJECTION_BUILTIN(dangling_server_proxy_old_request);
  return f_dangling_server_proxy_old_request();
}

inline bool x_dangling_server_proxy_new_request(CStrRef host) {
  FUNCTION_INJECTION_BUILTIN(dangling_server_proxy_new_request);
  return f_dangling_server_proxy_new_request(host);
}

inline bool x_pagelet_server_is_enabled() {
  FUNCTION_INJECTION_BUILTIN(pagelet_server_is_enabled);
  return f_pagelet_server_is_enabled();
}

inline Object x_pagelet_server_task_start(CStrRef url, CArrRef headers = null_array, CStrRef post_data = null_string, CArrRef files = null_array) {
  FUNCTION_INJECTION_BUILTIN(pagelet_server_task_start);
  return f_pagelet_server_task_start(url, headers, post_data, files);
}

inline int64 x_pagelet_server_task_status(CObjRef task) {
  FUNCTION_INJECTION_BUILTIN(pagelet_server_task_status);
  return f_pagelet_server_task_status(task);
}

inline String x_pagelet_server_task_result(CObjRef task, VRefParam headers, VRefParam code, int64 timeout_ms = 0) {
  FUNCTION_INJECTION_BUILTIN(pagelet_server_task_result);
  return f_pagelet_server_task_result(task, headers, code, timeout_ms);
}

inline void x_pagelet_server_flush() {
  FUNCTION_INJECTION_BUILTIN(pagelet_server_flush);
  f_pagelet_server_flush();
}

inline bool x_xbox_send_message(CStrRef msg, VRefParam ret, int64 timeout_ms, CStrRef host = "localhost") {
  FUNCTION_INJECTION_BUILTIN(xbox_send_message);
  return f_xbox_send_message(msg, ret, timeout_ms, host);
}

inline bool x_xbox_post_message(CStrRef msg, CStrRef host = "localhost") {
  FUNCTION_INJECTION_BUILTIN(xbox_post_message);
  return f_xbox_post_message(msg, host);
}

inline Object x_xbox_task_start(CStrRef message) {
  FUNCTION_INJECTION_BUILTIN(xbox_task_start);
  return f_xbox_task_start(message);
}

inline bool x_xbox_task_status(CObjRef task) {
  FUNCTION_INJECTION_BUILTIN(xbox_task_status);
  return f_xbox_task_status(task);
}

inline int64 x_xbox_task_result(CObjRef task, int64 timeout_ms, VRefParam ret) {
  FUNCTION_INJECTION_BUILTIN(xbox_task_result);
  return f_xbox_task_result(task, timeout_ms, ret);
}

inline Variant x_xbox_process_call_message(CStrRef msg) {
  FUNCTION_INJECTION_BUILTIN(xbox_process_call_message);
  return f_xbox_process_call_message(msg);
}

inline int64 x_xbox_get_thread_timeout() {
  FUNCTION_INJECTION_BUILTIN(xbox_get_thread_timeout);
  return f_xbox_get_thread_timeout();
}

inline void x_xbox_set_thread_timeout(int timeout) {
  FUNCTION_INJECTION_BUILTIN(xbox_set_thread_timeout);
  f_xbox_set_thread_timeout(timeout);
}

inline void x_xbox_schedule_thread_reset() {
  FUNCTION_INJECTION_BUILTIN(xbox_schedule_thread_reset);
  f_xbox_schedule_thread_reset();
}

inline int64 x_xbox_get_thread_time() {
  FUNCTION_INJECTION_BUILTIN(xbox_get_thread_time);
  return f_xbox_get_thread_time();
}


///////////////////////////////////////////////////////////////////////////////
}

#endif // __EXTPROFILE_SERVER_H__
